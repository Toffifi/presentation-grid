{"version":3,"file":"reveal.js","sources":["../js/utils/constants.js","../js/utils/util.js","../js/utils/device.js","../js/controllers/slidecontent.js","../js/controllers/slidenumber.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/controllers/autoanimate.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/print.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["\r\nexport const SLIDES_SELECTOR = '.slides section';\r\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\r\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\r\n\r\n// Methods that may not be invoked via the postMessage API\r\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener/;\r\n\r\n// Regex for retrieving the fragment style from a class attribute\r\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;","/**\r\n * Extend object a with the properties of object b.\r\n * If there's a conflict, object b takes precedence.\r\n *\r\n * @param {object} a\r\n * @param {object} b\r\n */\r\nexport const extend = ( a, b ) => {\r\n\r\n\tfor( let i in b ) {\r\n\t\ta[ i ] = b[ i ];\r\n\t}\r\n\r\n\treturn a;\r\n\r\n}\r\n\r\n/**\r\n * querySelectorAll but returns an Array.\r\n */\r\nexport const queryAll = ( el, selector ) => {\r\n\r\n\treturn Array.from( el.querySelectorAll( selector ) );\r\n\r\n}\r\n\r\n/**\r\n * classList.toggle() with cross browser support\r\n */\r\nexport const toggleClass = ( el, className, value ) => {\r\n\tif( value ) {\r\n\t\tel.classList.add( className );\r\n\t}\r\n\telse {\r\n\t\tel.classList.remove( className );\r\n\t}\r\n}\r\n\r\n/**\r\n * Utility for deserializing a value.\r\n *\r\n * @param {*} value\r\n * @return {*}\r\n */\r\nexport const deserialize = ( value ) => {\r\n\r\n\tif( typeof value === 'string' ) {\r\n\t\tif( value === 'null' ) return null;\r\n\t\telse if( value === 'true' ) return true;\r\n\t\telse if( value === 'false' ) return false;\r\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\r\n\t}\r\n\r\n\treturn value;\r\n\r\n}\r\n\r\n/**\r\n * Measures the distance in pixels between point a\r\n * and point b.\r\n *\r\n * @param {object} a point with x/y properties\r\n * @param {object} b point with x/y properties\r\n *\r\n * @return {number}\r\n */\r\nexport const distanceBetween = ( a, b ) => {\r\n\r\n\tlet dx = a.x - b.x,\r\n\t\tdy = a.y - b.y;\r\n\r\n\treturn Math.sqrt( dx*dx + dy*dy );\r\n\r\n}\r\n\r\n/**\r\n * Applies a CSS transform to the target element.\r\n *\r\n * @param {HTMLElement} element\r\n * @param {string} transform\r\n */\r\nexport const transformElement = ( element, transform ) => {\r\n\r\n\telement.style.transform = transform;\r\n\r\n}\r\n\r\n/**\r\n * Find the closest parent that matches the given\r\n * selector.\r\n *\r\n * @param {HTMLElement} target The child element\r\n * @param {String} selector The CSS selector to match\r\n * the parents against\r\n *\r\n * @return {HTMLElement} The matched parent or null\r\n * if no matching parent was found\r\n */\r\nexport const closestParent = ( target, selector ) => {\r\n\r\n\tlet parent = target.parentNode;\r\n\r\n\twhile( parent ) {\r\n\r\n\t\t// There's some overhead doing this each time, we don't\r\n\t\t// want to rewrite the element prototype but should still\r\n\t\t// be enough to feature detect once at startup...\r\n\t\tlet matchesMethod = parent.matches || parent.matchesSelector || parent.msMatchesSelector;\r\n\r\n\t\t// If we find a match, we're all set\r\n\t\tif( matchesMethod && matchesMethod.call( parent, selector ) ) {\r\n\t\t\treturn parent;\r\n\t\t}\r\n\r\n\t\t// Keep searching\r\n\t\tparent = parent.parentNode;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\n/**\r\n * Handling the fullscreen functionality via the fullscreen API\r\n *\r\n * @see http://fullscreen.spec.whatwg.org/\r\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\r\n */\r\nexport const enterFullscreen = element => {\r\n\r\n\telement = element || document.documentElement;\r\n\r\n\t// Check which implementation is available\r\n\tlet requestMethod = element.requestFullscreen ||\r\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\r\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\r\n\t\t\t\t\t\telement.mozRequestFullScreen ||\r\n\t\t\t\t\t\telement.msRequestFullscreen;\r\n\r\n\tif( requestMethod ) {\r\n\t\trequestMethod.apply( element );\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Creates an HTML element and returns a reference to it.\r\n * If the element already exists the existing instance will\r\n * be returned.\r\n *\r\n * @param {HTMLElement} container\r\n * @param {string} tagname\r\n * @param {string} classname\r\n * @param {string} innerHTML\r\n *\r\n * @return {HTMLElement}\r\n */\r\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\r\n\r\n\t// Find all nodes matching the description\r\n\tlet nodes = container.querySelectorAll( '.' + classname );\r\n\r\n\t// Check all matches to find one which is a direct child of\r\n\t// the specified container\r\n\tfor( let i = 0; i < nodes.length; i++ ) {\r\n\t\tlet testNode = nodes[i];\r\n\t\tif( testNode.parentNode === container ) {\r\n\t\t\treturn testNode;\r\n\t\t}\r\n\t}\r\n\r\n\t// If no node was found, create it now\r\n\tlet node = document.createElement( tagname );\r\n\tnode.className = classname;\r\n\tnode.innerHTML = innerHTML;\r\n\tcontainer.appendChild( node );\r\n\r\n\treturn node;\r\n\r\n}\r\n\r\n/**\r\n * Injects the given CSS styles into the DOM.\r\n *\r\n * @param {string} value\r\n */\r\nexport const createStyleSheet = ( value ) => {\r\n\r\n\tlet tag = document.createElement( 'style' );\r\n\ttag.type = 'text/css';\r\n\r\n\tif( value && value.length > 0 ) {\r\n\t\tif( tag.styleSheet ) {\r\n\t\t\ttag.styleSheet.cssText = value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttag.appendChild( document.createTextNode( value ) );\r\n\t\t}\r\n\t}\r\n\r\n\tdocument.head.appendChild( tag );\r\n\r\n\treturn tag;\r\n\r\n}\r\n\r\n/**\r\n * Returns a key:value hash of all query params.\r\n */\r\nexport const getQueryHash = () => {\r\n\r\n\tlet query = {};\r\n\r\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\r\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\r\n\t} );\r\n\r\n\t// Basic deserialization\r\n\tfor( let i in query ) {\r\n\t\tlet value = query[ i ];\r\n\r\n\t\tquery[ i ] = deserialize( unescape( value ) );\r\n\t}\r\n\r\n\t// Do not accept new dependencies via query config to avoid\r\n\t// the potential of malicious script injection\r\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\r\n\r\n\treturn query;\r\n\r\n}\r\n\r\n/**\r\n * Returns the remaining height within the parent of the\r\n * target element.\r\n *\r\n * remaining height = [ configured parent height ] - [ current parent height ]\r\n *\r\n * @param {HTMLElement} element\r\n * @param {number} [height]\r\n */\r\nexport const getRemainingHeight = ( element, height = 0 ) => {\r\n\r\n\tif( element ) {\r\n\t\tlet newHeight, oldHeight = element.style.height;\r\n\r\n\t\t// Change the .stretch element height to 0 in order find the height of all\r\n\t\t// the other elements\r\n\t\telement.style.height = '0px';\r\n\r\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\r\n\t\t// Restore it temporarily to its natural height.\r\n\t\telement.parentNode.style.height = 'auto';\r\n\r\n\t\tnewHeight = height - element.parentNode.offsetHeight;\r\n\r\n\t\t// Restore the old height, just in case\r\n\t\telement.style.height = oldHeight + 'px';\r\n\r\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\r\n\t\telement.parentNode.style.removeProperty('height');\r\n\r\n\t\treturn newHeight;\r\n\t}\r\n\r\n\treturn height;\r\n\r\n}","const UA = navigator.userAgent;\r\nconst testElement = document.createElement( 'div' );\r\n\r\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\r\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\r\n\r\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\r\n\r\nexport const isAndroid = /android/gi.test( UA );\r\n\r\n// Flags if we should use zoom instead of transform to scale\r\n// up slides. Zoom produces crisper results but has a lot of\r\n// xbrowser quirks so we only use it in whitelisted browsers.\r\nexport const supportsZoom = 'zoom' in testElement.style && !isMobile &&\r\n\t\t\t\t( isChrome || /Version\\/[\\d\\.]+.*Safari/.test( UA ) );\r\n\r\nexport const supportsHistoryAPI = typeof window.history.replaceState === 'function' && !/PhantomJS/.test( UA );","import { HORIZONTAL_SLIDES_SELECTOR, VERTICAL_SLIDES_SELECTOR } from '../utils/constants.js'\r\nimport { extend, queryAll, closestParent } from '../utils/util.js'\r\nimport { isMobile } from '../utils/device.js'\r\n\r\n/**\r\n * Handles loading, unloading and playback of slide\r\n * content such as images, videos and iframes.\r\n */\r\nexport default class SlideContent {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Should the given element be preloaded?\r\n\t * Decides based on local element attributes and global config.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tshouldPreload( element ) {\r\n\r\n\t\t// Prefer an explicit global preload setting\r\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\r\n\r\n\t\t// If no global setting is available, fall back on the element's\r\n\t\t// own preload setting\r\n\t\tif( typeof preload !== 'boolean' ) {\r\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\r\n\t\t}\r\n\r\n\t\treturn preload;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the given slide is within the configured view\r\n\t * distance. Shows the slide element and loads any content\r\n\t * that is set to load lazily (data-src).\r\n\t *\r\n\t * @param {HTMLElement} slide Slide to show\r\n\t */\r\n\tload( slide, options = {} ) {\r\n\r\n\t\t// Show the slide element\r\n\t\tslide.style.display = this.Reveal.getConfig().display;\r\n\r\n\t\t// Media elements with data-src attributes\r\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\r\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\r\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\r\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\r\n\t\t\t\telement.removeAttribute( 'data-src' );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Media elements with <source> children\r\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\r\n\t\t\tlet sources = 0;\r\n\r\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\r\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\r\n\t\t\t\tsource.removeAttribute( 'data-src' );\r\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\r\n\t\t\t\tsources += 1;\r\n\t\t\t} );\r\n\r\n\t\t\t// If we rewrote sources for this video/audio element, we need\r\n\t\t\t// to manually tell it to load from its new origin\r\n\t\t\tif( sources > 0 ) {\r\n\t\t\t\tmedia.load();\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\r\n\t\t// Show the corresponding background element\r\n\t\tlet background = slide.slideBackgroundElement;\r\n\t\tif( background ) {\r\n\t\t\tbackground.style.display = 'block';\r\n\r\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\r\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\r\n\r\n\t\t\t// If the background contains media, load it\r\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\r\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\r\n\r\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\r\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\r\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\r\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\r\n\r\n\t\t\t\t// Images\r\n\t\t\t\tif( backgroundImage ) {\r\n\t\t\t\t\tbackgroundContent.style.backgroundImage = 'url('+ encodeURI( backgroundImage ) +')';\r\n\t\t\t\t}\r\n\t\t\t\t// Videos\r\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\r\n\t\t\t\t\tlet video = document.createElement( 'video' );\r\n\r\n\t\t\t\t\tif( backgroundVideoLoop ) {\r\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( backgroundVideoMuted ) {\r\n\t\t\t\t\t\tvideo.muted = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Inline video playback works (at least in Mobile Safari) as\r\n\t\t\t\t\t// long as the video is muted and the `playsinline` attribute is\r\n\t\t\t\t\t// present\r\n\t\t\t\t\tif( isMobile ) {\r\n\t\t\t\t\t\tvideo.muted = true;\r\n\t\t\t\t\t\tvideo.autoplay = true;\r\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Support comma separated lists of video sources\r\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\r\n\t\t\t\t\t\tvideo.innerHTML += '<source src=\"'+ source +'\">';\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tbackgroundContent.appendChild( video );\r\n\t\t\t\t}\r\n\t\t\t\t// Iframes\r\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\r\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\r\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\r\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\r\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\r\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\r\n\r\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\r\n\r\n\t\t\t\t\tiframe.style.width  = '100%';\r\n\t\t\t\t\tiframe.style.height = '100%';\r\n\t\t\t\t\tiframe.style.maxHeight = '100%';\r\n\t\t\t\t\tiframe.style.maxWidth = '100%';\r\n\r\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Start loading preloadable iframes\r\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\r\n\t\t\tif( backgroundIframeElement ) {\r\n\r\n\t\t\t\t// Check if this iframe is eligible to be preloaded\r\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\r\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\r\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unloads and hides the given slide. This is called when the\r\n\t * slide is moved outside of the configured view distance.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tunload( slide ) {\r\n\r\n\t\t// Hide the slide element\r\n\t\tslide.style.display = 'none';\r\n\r\n\t\t// Hide the corresponding background element\r\n\t\tlet background = this.Reveal.getSlideBackground( slide );\r\n\t\tif( background ) {\r\n\t\t\tbackground.style.display = 'none';\r\n\r\n\t\t\t// Unload any background iframes\r\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\r\n\t\t\t\telement.removeAttribute( 'src' );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// Reset lazy-loaded media elements with src attributes\r\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\r\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\r\n\t\t\telement.removeAttribute( 'src' );\r\n\t\t} );\r\n\r\n\t\t// Reset lazy-loaded media elements with <source> children\r\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\r\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\r\n\t\t\tsource.removeAttribute( 'src' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Enforces origin-specific format rules for embedded media.\r\n\t */\r\n\tformatEmbeddedContent() {\r\n\r\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\r\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\r\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\r\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\r\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t// YouTube frames must include \"?enablejsapi=1\"\r\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\r\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\r\n\r\n\t\t// Vimeo frames must include \"?api=1\"\r\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\r\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Start playback of any embedded content inside of\r\n\t * the given element.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tstartEmbeddedContent( element ) {\r\n\r\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\r\n\r\n\t\t\t// Restart GIFs\r\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\r\n\t\t\t\t// Setting the same unchanged source like this was confirmed\r\n\t\t\t\t// to work in Chrome, FF & Safari\r\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\r\n\t\t\t} );\r\n\r\n\t\t\t// HTML5 media elements\r\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\r\n\t\t\t\tif( closestParent( el, '.fragment' ) && !closestParent( el, '.fragment.visible' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Prefer an explicit global autoplay setting\r\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\r\n\r\n\t\t\t\t// If no global setting is available, fall back on the element's\r\n\t\t\t\t// own autoplay setting\r\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\r\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closestParent( el, '.slide-background' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\r\n\r\n\t\t\t\t\t// If the media is ready, start playback\r\n\t\t\t\t\tif( el.readyState > 1 ) {\r\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\r\n\t\t\t\t\t// of waiting, we initiate playback\r\n\t\t\t\t\telse if( isMobile ) {\r\n\t\t\t\t\t\tlet promise = el.play();\r\n\r\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\r\n\t\t\t\t\t\t// that the viewer can start the media on their own\r\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\r\n\t\t\t\t\t\t\tpromise.catch( () => {\r\n\t\t\t\t\t\t\t\tel.controls = true;\r\n\r\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\r\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\r\n\t\t\t\t\t\t\t\t\tel.controls = false;\r\n\t\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// If the media isn't loaded, wait before playing\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\r\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// Normal iframes\r\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\r\n\t\t\t\tif( closestParent( el, '.fragment' ) && !closestParent( el, '.fragment.visible' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\r\n\t\t\t} );\r\n\r\n\t\t\t// Lazy loading iframes\r\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\r\n\t\t\t\tif( closestParent( el, '.fragment' ) && !closestParent( el, '.fragment.visible' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\r\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\r\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\r\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Starts playing an embedded video/audio element after\r\n\t * it has finished loading.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tstartEmbeddedMedia( event ) {\r\n\r\n\t\tlet isAttachedToDOM = !!closestParent( event.target, 'html' ),\r\n\t\t\tisVisible  \t\t= !!closestParent( event.target, '.present' );\r\n\r\n\t\tif( isAttachedToDOM && isVisible ) {\r\n\t\t\tevent.target.currentTime = 0;\r\n\t\t\tevent.target.play();\r\n\t\t}\r\n\r\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * \"Starts\" the content of an embedded iframe using the\r\n\t * postMessage API.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tstartEmbeddedIframe( event ) {\r\n\r\n\t\tlet iframe = event.target;\r\n\r\n\t\tif( iframe && iframe.contentWindow ) {\r\n\r\n\t\t\tlet isAttachedToDOM = !!closestParent( event.target, 'html' ),\r\n\t\t\t\tisVisible  \t\t= !!closestParent( event.target, '.present' );\r\n\r\n\t\t\tif( isAttachedToDOM && isVisible ) {\r\n\r\n\t\t\t\t// Prefer an explicit global autoplay setting\r\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\r\n\r\n\t\t\t\t// If no global setting is available, fall back on the element's\r\n\t\t\t\t// own autoplay setting\r\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\r\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closestParent( iframe, '.slide-background' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// YouTube postMessage API\r\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\r\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t\t// Vimeo postMessage API\r\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\r\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t\t// Generic postMessage API\r\n\t\t\t\telse {\r\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Stop playback of any embedded content inside of\r\n\t * the targeted slide.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tstopEmbeddedContent( element, options = {} ) {\r\n\r\n\t\toptions = extend( {\r\n\t\t\t// Defaults\r\n\t\t\tunloadIframes: true\r\n\t\t}, options );\r\n\r\n\t\tif( element && element.parentNode ) {\r\n\t\t\t// HTML5 media elements\r\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\r\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\r\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\r\n\t\t\t\t\tel.pause();\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\r\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\r\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\r\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\r\n\t\t\t});\r\n\r\n\t\t\t// YouTube postMessage API\r\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\r\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\r\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Vimeo postMessage API\r\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\r\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\r\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif( options.unloadIframes === true ) {\r\n\t\t\t\t// Unload lazy-loaded iframes\r\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\r\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\r\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\r\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\r\n\t\t\t\t\tel.removeAttribute( 'src' );\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * Handles the display of reveal.js' optional slide number.\r\n */\r\nexport default class SlideNumber {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'slide-number';\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tlet slideNumberDisplay = 'none';\r\n\t\tif( config.slideNumber && !this.Reveal.isPrintingPDF() ) {\r\n\t\t\tif( config.showSlideNumber === 'all' ) {\r\n\t\t\t\tslideNumberDisplay = 'block';\r\n\t\t\t}\r\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\r\n\t\t\t\tslideNumberDisplay = 'block';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.element.style.display = slideNumberDisplay;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the slide number to match the current slide.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\t// Update slide number if enabled\r\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\r\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the HTML string corresponding to the current slide\r\n\t * number, including formatting.\r\n\t */\r\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\t\tlet value;\r\n\t\tlet format = 'h.v';\r\n\r\n\t\tif ( typeof config.slideNumber === 'function' ) {\r\n\t\t\tvalue = config.slideNumber( slide );\r\n\t\t} else {\r\n\t\t\t// Check if a custom number format is available\r\n\t\t\tif( typeof config.slideNumber === 'string' ) {\r\n\t\t\t\tformat = config.slideNumber;\r\n\t\t\t}\r\n\r\n\t\t\t// If there are ONLY vertical slides in this deck, always use\r\n\t\t\t// a flattened slide number\r\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\r\n\t\t\t\tformat = 'c';\r\n\t\t\t}\r\n\r\n\t\t\tvalue = [];\r\n\t\t\tswitch( format ) {\r\n\t\t\t\tcase 'c':\r\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + 1 );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'c/t':\r\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + 1, '/', this.Reveal.getTotalSlides() );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\r\n\t\t\t\t\tvalue.push( indices.h + 1 );\r\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\r\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\r\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies HTML formatting to a slide number before it's\r\n\t * written to the DOM.\r\n\t *\r\n\t * @param {number} a Current slide\r\n\t * @param {string} delimiter Character to separate slide numbers\r\n\t * @param {(number|*)} b Total slides\r\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\r\n\t * @return {string} HTML string fragment\r\n\t */\r\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\r\n\r\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\r\n\t\t\treturn  `<a href=\"${url}\">\r\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\r\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\r\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\r\n\t\t\t\t\t</a>`;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn `<a href=\"${url}\">\r\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\r\n\t\t\t\t\t</a>`;\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * Converts various color input formats to an {r:0,g:0,b:0} object.\r\n *\r\n * @param {string} color The string representation of a color\r\n * @example\r\n * colorToRgb('#000');\r\n * @example\r\n * colorToRgb('#000000');\r\n * @example\r\n * colorToRgb('rgb(0,0,0)');\r\n * @example\r\n * colorToRgb('rgba(0,0,0)');\r\n *\r\n * @return {{r: number, g: number, b: number, [a]: number}|null}\r\n */\r\nexport const colorToRgb = ( color ) => {\r\n\r\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\r\n\tif( hex3 && hex3[1] ) {\r\n\t\thex3 = hex3[1];\r\n\t\treturn {\r\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\r\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\r\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\r\n\t\t};\r\n\t}\r\n\r\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\r\n\tif( hex6 && hex6[1] ) {\r\n\t\thex6 = hex6[1];\r\n\t\treturn {\r\n\t\t\tr: parseInt( hex6.substr( 0, 2 ), 16 ),\r\n\t\t\tg: parseInt( hex6.substr( 2, 2 ), 16 ),\r\n\t\t\tb: parseInt( hex6.substr( 4, 2 ), 16 )\r\n\t\t};\r\n\t}\r\n\r\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\r\n\tif( rgb ) {\r\n\t\treturn {\r\n\t\t\tr: parseInt( rgb[1], 10 ),\r\n\t\t\tg: parseInt( rgb[2], 10 ),\r\n\t\t\tb: parseInt( rgb[3], 10 )\r\n\t\t};\r\n\t}\r\n\r\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\r\n\tif( rgba ) {\r\n\t\treturn {\r\n\t\t\tr: parseInt( rgba[1], 10 ),\r\n\t\t\tg: parseInt( rgba[2], 10 ),\r\n\t\t\tb: parseInt( rgba[3], 10 ),\r\n\t\t\ta: parseFloat( rgba[4] )\r\n\t\t};\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\n/**\r\n * Calculates brightness on a scale of 0-255.\r\n *\r\n * @param {string} color See colorToRgb for supported formats.\r\n * @see {@link colorToRgb}\r\n */\r\nexport const colorBrightness = ( color ) => {\r\n\r\n\tif( typeof color === 'string' ) color = colorToRgb( color );\r\n\r\n\tif( color ) {\r\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}","import { queryAll } from '../utils/util.js'\r\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\r\n\r\n/**\r\n * Creates and updates slide backgrounds.\r\n */\r\nexport default class Backgrounds {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'backgrounds';\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the slide background elements and appends them\r\n\t * to the background container. One element is created per\r\n\t * slide no matter if the given slide has visible background.\r\n\t */\r\n\tcreate() {\r\n\r\n\t\tlet printMode = this.Reveal.isPrintingPDF();\r\n\r\n\t\t// Clear prior backgrounds\r\n\t\tthis.element.innerHTML = '';\r\n\t\tthis.element.classList.add( 'no-transition' );\r\n\r\n\t\t// Iterate over all horizontal slides\r\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\r\n\r\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\r\n\r\n\t\t\t// Iterate over all vertical slides\r\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\r\n\r\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\r\n\r\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t\t// Add parallax background if specified\r\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\r\n\r\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\r\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\r\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\r\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\r\n\r\n\t\t\t// Make sure the below properties are set on the element - these properties are\r\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\r\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\r\n\t\t\t// these properties after short time delay\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\r\n\t\t\t}, 1 );\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tthis.element.style.backgroundImage = '';\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a background for the given slide.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t * @param {HTMLElement} container The element that the background\r\n\t * should be appended to\r\n\t * @return {HTMLElement} New background div\r\n\t */\r\n\tcreateBackground( slide, container ) {\r\n\r\n\t\t// Main slide background element\r\n\t\tlet element = document.createElement( 'div' );\r\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\r\n\r\n\t\t// Inner background element that wraps images/videos/iframes\r\n\t\tlet contentElement = document.createElement( 'div' );\r\n\t\tcontentElement.className = 'slide-background-content';\r\n\r\n\t\telement.appendChild( contentElement );\r\n\t\tcontainer.appendChild( element );\r\n\r\n\t\tslide.slideBackgroundElement = element;\r\n\t\tslide.slideBackgroundContentElement = contentElement;\r\n\r\n\t\t// Syncs the background to reflect all current background settings\r\n\t\tthis.sync( slide );\r\n\r\n\t\treturn element;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Renders all of the visual properties of a slide background\r\n\t * based on the various background attributes.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tsync( slide ) {\r\n\r\n\t\tlet element = slide.slideBackgroundElement,\r\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\r\n\r\n\t\t// Reset the prior background state in case this is not the\r\n\t\t// initial sync\r\n\t\tslide.classList.remove( 'has-dark-background' );\r\n\t\tslide.classList.remove( 'has-light-background' );\r\n\r\n\t\telement.removeAttribute( 'data-loaded' );\r\n\t\telement.removeAttribute( 'data-background-hash' );\r\n\t\telement.removeAttribute( 'data-background-size' );\r\n\t\telement.removeAttribute( 'data-background-transition' );\r\n\t\telement.style.backgroundColor = '';\r\n\r\n\t\tcontentElement.style.backgroundSize = '';\r\n\t\tcontentElement.style.backgroundRepeat = '';\r\n\t\tcontentElement.style.backgroundPosition = '';\r\n\t\tcontentElement.style.backgroundImage = '';\r\n\t\tcontentElement.style.opacity = '';\r\n\t\tcontentElement.innerHTML = '';\r\n\r\n\t\tlet data = {\r\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\r\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\r\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\r\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\r\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\r\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\r\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\r\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\r\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\r\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' )\r\n\t\t};\r\n\r\n\t\tif( data.background ) {\r\n\t\t\t// Auto-wrap image urls in url(...)\r\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp)([?#\\s]|$)/gi.test( data.background ) ) {\r\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telement.style.background = data.background;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Create a hash for this combination of background settings.\r\n\t\t// This is used to determine when two slide backgrounds are\r\n\t\t// the same.\r\n\t\tif( data.background || data.backgroundColor || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\r\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\r\n\t\t}\r\n\r\n\t\t// Additional and optional background properties\r\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\r\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\r\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\r\n\r\n\t\tif( slide.hasAttribute( 'data-preload' ) ) element.setAttribute( 'data-preload', '' );\r\n\r\n\t\t// Background image options are set on the content wrapper\r\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\r\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\r\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\r\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\r\n\r\n\t\t// If this slide has a background color, we add a class that\r\n\t\t// signals if it is light or dark. If the slide has no background\r\n\t\t// color, no class will be added\r\n\t\tlet contrastColor = data.backgroundColor;\r\n\r\n\t\t// If no bg color was found, check the computed background\r\n\t\tif( !contrastColor ) {\r\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\r\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\r\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( contrastColor ) {\r\n\t\t\tlet rgb = colorToRgb( contrastColor );\r\n\r\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\r\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\r\n\t\t\t// an element with no background\r\n\t\t\tif( rgb && rgb.a !== 0 ) {\r\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\r\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the background elements to reflect the current\r\n\t * slide.\r\n\t *\r\n\t * @param {boolean} includeAll If true, the backgrounds of\r\n\t * all vertical slides (not just the present) will be updated.\r\n\t */\r\n\tupdate( includeAll = false ) {\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tlet indices = this.Reveal.getIndices();\r\n\r\n\t\tlet currentBackground = null;\r\n\r\n\t\t// Reverse past/future classes when in RTL mode\r\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\r\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\r\n\r\n\t\t// Update the classes of all backgrounds to match the\r\n\t\t// states of their slides (past/present/future)\r\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\r\n\r\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\r\n\r\n\t\t\tif( h < indices.h ) {\r\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\r\n\t\t\t}\r\n\t\t\telse if ( h > indices.h ) {\r\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbackgroundh.classList.add( 'present' );\r\n\r\n\t\t\t\t// Store a reference to the current background element\r\n\t\t\t\tcurrentBackground = backgroundh;\r\n\t\t\t}\r\n\r\n\t\t\tif( includeAll || h === indices.h ) {\r\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\r\n\r\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\r\n\r\n\t\t\t\t\tif( v < indices.v ) {\r\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ( v > indices.v ) {\r\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\r\n\r\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\r\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\t// Stop content inside of previous backgrounds\r\n\t\tif( this.previousBackground ) {\r\n\r\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\r\n\r\n\t\t}\r\n\r\n\t\t// Start content in the current background\r\n\t\tif( currentBackground ) {\r\n\r\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\r\n\r\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\r\n\t\t\tif( currentBackgroundContent ) {\r\n\r\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\r\n\r\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\r\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\r\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\r\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\r\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Don't transition between identical backgrounds. This\r\n\t\t\t// prevents unwanted flicker.\r\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\r\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\r\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\r\n\t\t\t\tthis.element.classList.add( 'no-transition' );\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousBackground = currentBackground;\r\n\r\n\t\t}\r\n\r\n\t\t// If there's a background brightness flag for this slide,\r\n\t\t// bubble it to the .reveal container\r\n\t\tif( currentSlide ) {\r\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\r\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\r\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.add( classToBubble );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.remove( classToBubble );\r\n\t\t\t\t}\r\n\t\t\t}, this );\r\n\t\t}\r\n\r\n\t\t// Allow the first background to apply without transition\r\n\t\tsetTimeout( () => {\r\n\t\t\tthis.element.classList.remove( 'no-transition' );\r\n\t\t}, 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the position of the parallax background based\r\n\t * on the current slide index.\r\n\t */\r\n\tupdateParallax() {\r\n\r\n\t\tlet indices = this.Reveal.getIndices();\r\n\r\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\r\n\r\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\r\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\r\n\r\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\r\n\t\t\t\tbackgroundWidth, backgroundHeight;\r\n\r\n\t\t\tif( backgroundSize.length === 1 ) {\r\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\r\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\r\n\t\t\t}\r\n\r\n\t\t\tlet slideWidth = this.element.offsetWidth,\r\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\r\n\t\t\t\thorizontalOffsetMultiplier,\r\n\t\t\t\thorizontalOffset;\r\n\r\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\r\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\r\n\t\t\t}\r\n\r\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\r\n\r\n\t\t\tlet slideHeight = this.element.offsetHeight,\r\n\t\t\t\tverticalSlideCount = verticalSlides.length,\r\n\t\t\t\tverticalOffsetMultiplier,\r\n\t\t\t\tverticalOffset;\r\n\r\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\r\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\r\n\t\t\t}\r\n\r\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\r\n\r\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","import { queryAll, extend, createStyleSheet } from '../utils/util.js'\r\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\r\n\r\n/**\r\n * Automatically animates matching elements across\r\n * slides with the [data-auto-animate] attribute.\r\n */\r\nexport default class AutoAnimate {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Counter used to generate unique IDs for auto-animated elements\r\n\t\tthis.autoAnimateCounter = 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Runs an auto-animation between the given slides.\r\n\t *\r\n\t * @param  {HTMLElement} fromSlide\r\n\t * @param  {HTMLElement} toSlide\r\n\t */\r\n\trun( fromSlide, toSlide ) {\r\n\r\n\t\t// Clean up after prior animations\r\n\t\tthis.reset();\r\n\r\n\t\t// Ensure that both slides are auto-animate targets\r\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' ) ) {\r\n\r\n\t\t\t// Create a new auto-animate sheet\r\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\r\n\r\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\r\n\r\n\t\t\t// Set our starting state\r\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\r\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\r\n\r\n\t\t\t// Flag the navigation direction, needed for fragment buildup\r\n\t\t\tlet allSlides = this.Reveal.getSlides();\r\n\t\t\tanimationOptions.slideDirection = allSlides.indexOf( toSlide ) > allSlides.indexOf( fromSlide ) ? 'forward' : 'backward';\r\n\r\n\t\t\t// Inject our auto-animate styles for this transition\r\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\r\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, this.autoAnimateCounter++ );\r\n\t\t\t} );\r\n\r\n\t\t\t// Animate unmatched elements, if enabled\r\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\r\n\r\n\t\t\t\t// Our default timings for unmatched elements\r\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\r\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\r\n\r\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\r\n\r\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\r\n\t\t\t\t\tlet id = 'unmatched';\r\n\r\n\t\t\t\t\t// If there is a duration or delay set specifically for this\r\n\t\t\t\t\t// element our unmatched elements should adhere to those\r\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\r\n\t\t\t\t\t\tid = 'unmatched-' + this.autoAnimateCounter++;\r\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\r\n\r\n\t\t\t\t}, this );\r\n\r\n\t\t\t\t// Our default transition for unmatched elements\r\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Setting the whole chunk of CSS at once is the most\r\n\t\t\t// efficient way to do this. Using sheet.insertRule\r\n\t\t\t// is multiple factors slower.\r\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\r\n\r\n\t\t\t// Start the animation next cycle\r\n\t\t\trequestAnimationFrame( () => {\r\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\r\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\r\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\r\n\r\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: 'autoanimate',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tfromSlide,\r\n\t\t\t\t\ttoSlide,\r\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rolls back all changes that we've made to the DOM so\r\n\t * that as part of animating.\r\n\t */\r\n\treset() {\r\n\r\n\t\t// Reset slides\r\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\r\n\t\t\telement.dataset.autoAnimate = '';\r\n\t\t} );\r\n\r\n\t\t// Reset elements\r\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\r\n\t\t\tdelete element.dataset.autoAnimateTarget;\r\n\t\t} );\r\n\r\n\t\t// Remove the animation sheet\r\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\r\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\r\n\t\t\tthis.autoAnimateStyleSheet = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a FLIP animation where the `to` element starts out\r\n\t * in the `from` element position and animates to its original\r\n\t * state.\r\n\t *\r\n\t * @param {HTMLElement} from\r\n\t * @param {HTMLElement} to\r\n\t * @param {Object} elementOptions Options for this element pair\r\n\t * @param {Object} animationOptions Options set at the slide level\r\n\t * @param {String} id Unique ID that we can use to identify this\r\n\t * auto-animate element in the DOM\r\n\t */\r\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\r\n\r\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\r\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\r\n\t\tfrom.dataset.autoAnimateTarget = '';\r\n\t\tto.dataset.autoAnimateTarget = id;\r\n\r\n\t\t// Each element may override any of the auto-animate options\r\n\t\t// like transition easing, duration and delay via data-attributes\r\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\r\n\r\n\t\t// If we're using a custom element matcher the element options\r\n\t\t// may contain additional transition overrides\r\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\r\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\r\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\r\n\r\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\r\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\r\n\r\n\t\t// Maintain fragment visibility for matching elements when\r\n\t\t// we're navigating forwards, this way the viewer won't need\r\n\t\t// to step through the same fragments twice\r\n\t\tif( to.classList.contains( 'fragment' ) ) {\r\n\r\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\r\n\t\t\t// conflicts with fragment animations\r\n\t\t\tdelete toProps.styles['opacity'];\r\n\r\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\r\n\r\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\r\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\r\n\r\n\t\t\t\t// Only skip the fragment if the fragment animation style\r\n\t\t\t\t// remains unchanged\r\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\r\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// If translation and/or scaling are enabled, css transform\r\n\t\t// the 'to' element so that it matches the position and size\r\n\t\t// of the 'from' element\r\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\r\n\r\n\t\t\tlet presentationScale = this.Reveal.getScale();\r\n\r\n\t\t\tlet delta = {\r\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\r\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\r\n\t\t\t\tscaleX: fromProps.width / toProps.width,\r\n\t\t\t\tscaleY: fromProps.height / toProps.height\r\n\t\t\t};\r\n\r\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\r\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\r\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\r\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\r\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\r\n\r\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\r\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\r\n\r\n\t\t\t// No need to transform if nothing's changed\r\n\t\t\tif( translate || scale ) {\r\n\r\n\t\t\t\tlet transform = [];\r\n\r\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\r\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\r\n\r\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\r\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\r\n\r\n\t\t\t\ttoProps.styles['transform'] = 'none';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Delete all unchanged 'to' styles\r\n\t\tfor( let propertyName in toProps.styles ) {\r\n\t\t\tconst toValue = toProps.styles[propertyName];\r\n\t\t\tconst fromValue = fromProps.styles[propertyName];\r\n\r\n\t\t\tif( toValue === fromValue ) {\r\n\t\t\t\tdelete toProps.styles[propertyName];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// If these property values were set via a custom matcher providing\r\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\r\n\t\t\t\tif( toValue.explicitValue === true ) {\r\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( fromValue.explicitValue === true ) {\r\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet css = '';\r\n\r\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\r\n\r\n\t\t// Only create animate this element IF at least one style\r\n\t\t// property has changed\r\n\t\tif( toStyleProperties.length > 0 ) {\r\n\r\n\t\t\t// Instantly move to the 'from' state\r\n\t\t\tfromProps.styles['transition'] = 'none';\r\n\r\n\t\t\t// Animate towards the 'to' state\r\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\r\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\r\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\r\n\r\n\t\t\t// Build up our custom CSS. We need to override inline styles\r\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\r\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\r\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\r\n\t\t\t} ).join( '' );\r\n\r\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\r\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\r\n\t\t\t} ).join( '' );\r\n\r\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\r\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\r\n\r\n\t\t}\r\n\r\n\t\treturn css;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the auto-animate options for the given element.\r\n\t *\r\n\t * @param {HTMLElement} element Element to pick up options\r\n\t * from, either a slide or an animation target\r\n\t * @param {Object} [inheritedOptions] Optional set of existing\r\n\t * options\r\n\t */\r\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\r\n\r\n\t\tlet options = {\r\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\r\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\r\n\t\t\tdelay: 0\r\n\t\t};\r\n\r\n\t\toptions = extend( options, inheritedOptions );\r\n\r\n\t\t// Inherit options from parent elements\r\n\t\tif( element.closest && element.parentNode ) {\r\n\t\t\tlet autoAnimatedParent = element.parentNode.closest( '[data-auto-animate-target]' );\r\n\t\t\tif( autoAnimatedParent ) {\r\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( element.dataset.autoAnimateEasing ) {\r\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\r\n\t\t}\r\n\r\n\t\tif( element.dataset.autoAnimateDuration ) {\r\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\r\n\t\t}\r\n\r\n\t\tif( element.dataset.autoAnimateDelay ) {\r\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\r\n\t\t}\r\n\r\n\t\treturn options;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object containing all of the properties\r\n\t * that can be auto-animated for the given element and\r\n\t * their current computed values.\r\n\t *\r\n\t * @param {String} direction 'from' or 'to'\r\n\t */\r\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\r\n\t\tlet properties = { styles: [] };\r\n\r\n\t\t// Position and size\r\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\r\n\t\t\tlet bounds;\r\n\r\n\t\t\t// Custom auto-animate may optionally return a custom tailored\r\n\t\t\t// measurement function\r\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\r\n\t\t\t\tbounds = elementOptions.measure( element );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif( config.center ) {\r\n\t\t\t\t\t// More precise, but breaks when used in combination\r\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\r\n\t\t\t\t\tbounds = element.getBoundingClientRect();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet scale = this.Reveal.getScale();\r\n\t\t\t\t\tbounds = {\r\n\t\t\t\t\t\tx: element.offsetLeft * scale,\r\n\t\t\t\t\t\ty: element.offsetTop * scale,\r\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\r\n\t\t\t\t\t\theight: element.offsetHeight * scale\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tproperties.x = bounds.x;\r\n\t\t\tproperties.y = bounds.y;\r\n\t\t\tproperties.width = bounds.width;\r\n\t\t\tproperties.height = bounds.height;\r\n\t\t}\r\n\r\n\t\tconst computedStyles = getComputedStyle( element );\r\n\r\n\t\t// CSS styles\r\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\r\n\t\t\tlet value;\r\n\r\n\t\t\t// `style` is either the property name directly, or an object\r\n\t\t\t// definition of a style property\r\n\t\t\tif( typeof style === 'string' ) style = { property: style };\r\n\r\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\r\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\r\n\t\t\t}\r\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\r\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = computedStyles[style.property];\r\n\t\t\t}\r\n\r\n\t\t\tif( value !== '' ) {\r\n\t\t\t\tproperties.styles[style.property] = value;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\treturn properties;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Get a list of all element pairs that we can animate\r\n\t * between the given slides.\r\n\t *\r\n\t * @param {HTMLElement} fromSlide\r\n\t * @param {HTMLElement} toSlide\r\n\t *\r\n\t * @return {Array} Each value is an array where [0] is\r\n\t * the element we're animating from and [1] is the\r\n\t * element we're animating to\r\n\t */\r\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\r\n\r\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\r\n\r\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\r\n\r\n\t\tlet reserved = [];\r\n\r\n\t\t// Remove duplicate pairs\r\n\t\treturn pairs.filter( ( pair, index ) => {\r\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\r\n\t\t\t\treserved.push( pair.to );\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Identifies matching elements between slides.\r\n\t *\r\n\t * You can specify a custom matcher function by using\r\n\t * the `autoAnimateMatcher` config option.\r\n\t */\r\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\r\n\r\n\t\tlet pairs = [];\r\n\r\n\t\tconst codeNodes = 'pre';\r\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\r\n\t\tconst mediaNodes = 'img, video, iframe';\r\n\r\n\t\t// Eplicit matches via data-id\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\r\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\r\n\t\t} );\r\n\r\n\t\t// Text\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\r\n\t\t\treturn node.nodeName + ':::' + node.innerText;\r\n\t\t} );\r\n\r\n\t\t// Media\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\r\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\r\n\t\t} );\r\n\r\n\t\t// Code\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\r\n\t\t\treturn node.nodeName + ':::' + node.innerText;\r\n\t\t} );\r\n\r\n\t\tpairs.forEach( pair => {\r\n\r\n\t\t\t// Disable scale transformations on text nodes, we transiition\r\n\t\t\t// each individual text property instead\r\n\t\t\tif( pair.from.matches( textNodes ) ) {\r\n\t\t\t\tpair.options = { scale: false };\r\n\t\t\t}\r\n\t\t\t// Animate individual lines of code\r\n\t\t\telse if( pair.from.matches( codeNodes ) ) {\r\n\r\n\t\t\t\t// Transition the code block's width and height instead of scaling\r\n\t\t\t\t// to prevent its content from being squished\r\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\r\n\r\n\t\t\t\t// Lines of code\r\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\r\n\t\t\t\t\treturn node.textContent;\r\n\t\t\t\t}, {\r\n\t\t\t\t\tscale: false,\r\n\t\t\t\t\tstyles: [],\r\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// Line numbers\r\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-line[data-line-number]', node => {\r\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\r\n\t\t\t\t}, {\r\n\t\t\t\t\tscale: false,\r\n\t\t\t\t\tstyles: [ 'width' ],\r\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, this );\r\n\r\n\t\treturn pairs;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Helper method which returns a bounding box based on\r\n\t * the given elements offset coordinates.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t * @return {Object} x, y, width, height\r\n\t */\r\n\tgetLocalBoundingBox( element ) {\r\n\r\n\t\tconst presentationScale = this.Reveal.getScale();\r\n\r\n\t\treturn {\r\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\r\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\r\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\r\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finds matching elements between two slides.\r\n\t *\r\n\t * @param {Array} pairs            \tList of pairs to push matches to\r\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\r\n\t * @param {HTMLElement} toScope     Scope within the to element exists\r\n\t * @param {String} selector         CSS selector of the element to match\r\n\t * @param {Function} serializer     A function that accepts an element and returns\r\n\t *                                  a stringified ID based on its contents\r\n\t * @param {Object} animationOptions Optional config options for this pair\r\n\t */\r\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\r\n\r\n\t\tlet fromMatches = {};\r\n\t\tlet toMatches = {};\r\n\r\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\r\n\t\t\tconst key = serializer( element );\r\n\t\t\tif( typeof key === 'string' && key.length ) {\r\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\r\n\t\t\t\tfromMatches[key].push( element );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\r\n\t\t\tconst key = serializer( element );\r\n\t\t\ttoMatches[key] = toMatches[key] || [];\r\n\t\t\ttoMatches[key].push( element );\r\n\r\n\t\t\tlet fromElement;\r\n\r\n\t\t\t// Retrieve the 'from' element\r\n\t\t\tif( fromMatches[key] ) {\r\n\t\t\t\tconst pimaryIndex = toMatches[key].length - 1;\r\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\r\n\r\n\t\t\t\t// If there are multiple identical from elements, retrieve\r\n\t\t\t\t// the one at the same index as our to-element.\r\n\t\t\t\tif( fromMatches[key][ pimaryIndex ] ) {\r\n\t\t\t\t\tfromElement = fromMatches[key][ pimaryIndex ];\r\n\t\t\t\t\tfromMatches[key][ pimaryIndex ] = null;\r\n\t\t\t\t}\r\n\t\t\t\t// If there are no matching from-elements at the same index,\r\n\t\t\t\t// use the last one.\r\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\r\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\r\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// If we've got a matching pair, push it to the list of pairs\r\n\t\t\tif( fromElement ) {\r\n\t\t\t\tpairs.push({\r\n\t\t\t\t\tfrom: fromElement,\r\n\t\t\t\t\tto: element,\r\n\t\t\t\t\toptions: animationOptions\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a all elements within the given scope that should\r\n\t * be considered unmatched in an auto-animate transition. If\r\n\t * fading of unmatched elements is turned on, these elements\r\n\t * will fade when going between auto-animate slides.\r\n\t *\r\n\t * Note that parents of auto-animate targets are NOT considerd\r\n\t * unmatched since fading them would break the auto-animation.\r\n\t *\r\n\t * @param {HTMLElement} rootElement\r\n\t * @return {Array}\r\n\t */\r\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\r\n\r\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\r\n\r\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\r\n\r\n\t\t\t// The element is unmatched if\r\n\t\t\t// - It is not an auto-animate target\r\n\t\t\t// - It does not contain any auto-animate targets\r\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\r\n\t\t\t\tresult.push( element );\r\n\t\t\t}\r\n\r\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\r\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}, [] );\r\n\r\n\t}\r\n\r\n}","import { extend, queryAll } from '../utils/util.js'\r\n\r\n/**\r\n * Handles sorting and navigation of slide fragments.\r\n * Fragments are elements within a slide that are\r\n * revealed/animated incrementally.\r\n */\r\nexport default class Fragments {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.fragments === false ) {\r\n\t\t\tthis.disable();\r\n\t\t}\r\n\t\telse if( oldConfig.fragments === false ) {\r\n\t\t\tthis.enable();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If fragments are disabled in the deck, they should all be\r\n\t * visible rather than stepped through.\r\n\t */\r\n\tdisable() {\r\n\r\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\r\n\t\t\telement.classList.add( 'visible' );\r\n\t\t\telement.classList.remove( 'current-fragment' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reverse of #disable(). Only called if fragments have\r\n\t * previously been disabled.\r\n\t */\r\n\tenable() {\r\n\r\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\r\n\t\t\telement.classList.remove( 'visible' );\r\n\t\t\telement.classList.remove( 'current-fragment' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object describing the available fragment\r\n\t * directions.\r\n\t *\r\n\t * @return {{prev: boolean, next: boolean}}\r\n\t */\r\n\tavailableRoutes() {\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\r\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\r\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\r\n\r\n\t\t\treturn {\r\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\r\n\t\t\t\tnext: !!hiddenFragments.length\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn { prev: false, next: false };\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Return a sorted fragments list, ordered by an increasing\r\n\t * \"data-fragment-index\" attribute.\r\n\t *\r\n\t * Fragments will be revealed in the order that they are returned by\r\n\t * this function, so you can use the index attributes to control the\r\n\t * order of fragment appearance.\r\n\t *\r\n\t * To maintain a sensible default fragment order, fragments are presumed\r\n\t * to be passed in document order. This function adds a \"fragment-index\"\r\n\t * attribute to each node if such an attribute is not already present,\r\n\t * and sets that attribute to an integer value which is the position of\r\n\t * the fragment within the fragments list.\r\n\t *\r\n\t * @param {object[]|*} fragments\r\n\t * @param {boolean} grouped If true the returned array will contain\r\n\t * nested arrays for all fragments with the same index\r\n\t * @return {object[]} sorted Sorted array of fragments\r\n\t */\r\n\tsort( fragments, grouped = false ) {\r\n\r\n\t\tfragments = Array.from( fragments );\r\n\r\n\t\tlet ordered = [],\r\n\t\t\tunordered = [],\r\n\t\t\tsorted = [];\r\n\r\n\t\t// Group ordered and unordered elements\r\n\t\tfragments.forEach( fragment => {\r\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\r\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\r\n\r\n\t\t\t\tif( !ordered[index] ) {\r\n\t\t\t\t\tordered[index] = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tordered[index].push( fragment );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tunordered.push( [ fragment ] );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Append fragments without explicit indices in their\r\n\t\t// DOM order\r\n\t\tordered = ordered.concat( unordered );\r\n\r\n\t\t// Manually count the index up per group to ensure there\r\n\t\t// are no gaps\r\n\t\tlet index = 0;\r\n\r\n\t\t// Push all fragments in their sorted order to an array,\r\n\t\t// this flattens the groups\r\n\t\tordered.forEach( group => {\r\n\t\t\tgroup.forEach( fragment => {\r\n\t\t\t\tsorted.push( fragment );\r\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\r\n\t\t\t} );\r\n\r\n\t\t\tindex ++;\r\n\t\t} );\r\n\r\n\t\treturn grouped === true ? ordered : sorted;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sorts and formats all of fragments in the\r\n\t * presentation.\r\n\t */\r\n\tsortAll() {\r\n\r\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\r\n\r\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\r\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\r\n\r\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\r\n\r\n\t\t\t}, this );\r\n\r\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Refreshes the fragments on the current slide so that they\r\n\t * have the appropriate classes (.visible + .current-fragment).\r\n\t *\r\n\t * @param {number} [index] The index of the current fragment\r\n\t * @param {array} [fragments] Array containing all fragments\r\n\t * in the current slide\r\n\t *\r\n\t * @return {{shown: array, hidden: array}}\r\n\t */\r\n\tupdate( index, fragments ) {\r\n\r\n\t\tlet changedFragments = {\r\n\t\t\tshown: [],\r\n\t\t\thidden: []\r\n\t\t};\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\r\n\r\n\t\t\tfragments = fragments || this.sort( currentSlide.querySelectorAll( '.fragment' ) );\r\n\r\n\t\t\tif( fragments.length ) {\r\n\r\n\t\t\t\tlet maxIndex = 0;\r\n\r\n\t\t\t\tif( typeof index !== 'number' ) {\r\n\t\t\t\t\tlet currentFragment = this.sort( currentSlide.querySelectorAll( '.fragment.visible' ) ).pop();\r\n\t\t\t\t\tif( currentFragment ) {\r\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\r\n\r\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\r\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\r\n\r\n\t\t\t\t\t// Visible fragments\r\n\t\t\t\t\tif( i <= index ) {\r\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\r\n\t\t\t\t\t\tel.classList.add( 'visible' );\r\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\r\n\r\n\t\t\t\t\t\tif( i === index ) {\r\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\r\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\r\n\r\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\r\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif( !wasVisible ) {\r\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\r\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\t\t\ttarget: el,\r\n\t\t\t\t\t\t\t\ttype: 'visible',\r\n\t\t\t\t\t\t\t\tbubbles: false\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Hidden fragments\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\r\n\t\t\t\t\t\tel.classList.remove( 'visible' );\r\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\r\n\r\n\t\t\t\t\t\tif( wasVisible ) {\r\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\r\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\t\t\ttarget: el,\r\n\t\t\t\t\t\t\t\ttype: 'hidden',\r\n\t\t\t\t\t\t\t\tbubbles: false\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// Write the current fragment index to the slide <section>.\r\n\t\t\t\t// This can be used by end users to apply styles based on\r\n\t\t\t\t// the current fragment index.\r\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\r\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\r\n\t\t\t\tcurrentSlide.setAttribute( 'data-fragment', index );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn changedFragments;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the fragments on the given slide so that they have\r\n\t * valid indices. Call this if fragments are changed in the DOM\r\n\t * after reveal.js has already initialized.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t * @return {Array} a list of the HTML fragments that were synced\r\n\t */\r\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\r\n\r\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the specified slide fragment.\r\n\t *\r\n\t * @param {?number} index The index of the fragment that\r\n\t * should be shown, -1 means all are invisible\r\n\t * @param {number} offset Integer offset to apply to the\r\n\t * fragment index\r\n\t *\r\n\t * @return {boolean} true if a change was made in any\r\n\t * fragments visibility as part of this call\r\n\t */\r\n\tgoto( index, offset = 0 ) {\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\r\n\r\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\r\n\t\t\tif( fragments.length ) {\r\n\r\n\t\t\t\t// If no index is specified, find the current\r\n\t\t\t\tif( typeof index !== 'number' ) {\r\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\r\n\r\n\t\t\t\t\tif( lastVisibleFragment ) {\r\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tindex = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply the offset if there is one\r\n\t\t\t\tindex += offset;\r\n\r\n\t\t\t\tlet changedFragments = this.update( index, fragments );\r\n\r\n\t\t\t\tif( changedFragments.hidden.length ) {\r\n\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\ttype: 'fragmenthidden',\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\r\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( changedFragments.shown.length ) {\r\n\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\ttype: 'fragmentshown',\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\r\n\t\t\t\t\t\t\tfragments: changedFragments.shown\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.Reveal.controls.update();\r\n\t\t\t\tthis.Reveal.progress.update();\r\n\r\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\r\n\t\t\t\t\tthis.Reveal.location.writeURL();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the next slide fragment.\r\n\t *\r\n\t * @return {boolean} true if there was a next fragment,\r\n\t * false otherwise\r\n\t */\r\n\tnext() {\r\n\r\n\t\treturn this.goto( null, 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the previous slide fragment.\r\n\t *\r\n\t * @return {boolean} true if there was a previous fragment,\r\n\t * false otherwise\r\n\t */\r\n\tprev() {\r\n\r\n\t\treturn this.goto( null, -1 );\r\n\r\n\t}\r\n\r\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\r\nimport { extend, queryAll, transformElement } from '../utils/util.js'\r\n\r\n/**\r\n * Handles all logic related to the overview mode\r\n * (birds-eye view of all slides).\r\n */\r\nexport default class Overview {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.active = false;\r\n\r\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Displays the overview of slides (quick nav) by scaling\r\n\t * down and arranging all slide elements.\r\n\t */\r\n\tactivate() {\r\n\r\n\t\t// Only proceed if enabled in config\r\n\t\tif( this.Reveal.getConfig().overview && !this.isActive() ) {\r\n\r\n\t\t\tthis.active = true;\r\n\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\r\n\r\n\t\t\t// Don't auto-slide while in overview mode\r\n\t\t\tthis.Reveal.cancelAutoSlide();\r\n\r\n\t\t\t// Move the backgrounds element into the slide container to\r\n\t\t\t// that the same scaling is applied\r\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\r\n\r\n\t\t\t// Clicking on an overview slide navigates to it\r\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\r\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\r\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// Calculate slide sizes\r\n\t\t\tconst margin = 70;\r\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\r\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\r\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\r\n\r\n\t\t\t// Reverse in RTL mode\r\n\t\t\tif( this.Reveal.getConfig().rtl ) {\r\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\r\n\t\t\t}\r\n\r\n\t\t\tthis.Reveal.updateSlidesVisibility();\r\n\r\n\t\t\tthis.layout();\r\n\t\t\tthis.update();\r\n\r\n\t\t\tthis.Reveal.layout();\r\n\r\n\t\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\t\t// Notify observers of the overview showing\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: 'overviewshown',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\t'indexh': indices.h,\r\n\t\t\t\t\t'indexv': indices.v,\r\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Uses CSS transforms to position all slides in a grid for\r\n\t * display inside of the overview mode.\r\n\t */\r\n\tlayout() {\r\n\r\n\t\t// Layout slides\r\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\r\n\t\t\thslide.setAttribute( 'data-index-h', h );\r\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\r\n\r\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\r\n\r\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\r\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\r\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\r\n\r\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Layout slide backgrounds\r\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\r\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\r\n\r\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\r\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\r\n\t\t\t} );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the overview viewport to the current slides.\r\n\t * Called each time the current slide changes.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\r\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\r\n\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\tthis.Reveal.transformSlides( {\r\n\t\t\toverview: [\r\n\t\t\t\t'scale('+ scale +')',\r\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\r\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\r\n\t\t\t].join( ' ' )\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Exits the slide overview and enters the currently\r\n\t * active slide.\r\n\t */\r\n\tdeactivate() {\r\n\r\n\t\t// Only proceed if enabled in config\r\n\t\tif( this.Reveal.getConfig().overview ) {\r\n\r\n\t\t\tthis.active = false;\r\n\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\r\n\r\n\t\t\t// Temporarily add a class so that transitions can do different things\r\n\t\t\t// depending on whether they are exiting/entering overview, or just\r\n\t\t\t// moving from slide to slide\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\r\n\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\r\n\t\t\t}, 1 );\r\n\r\n\t\t\t// Move the background element back out\r\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\r\n\r\n\t\t\t// Clean up changes made to slides\r\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\r\n\t\t\t\ttransformElement( slide, '' );\r\n\r\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\r\n\t\t\t} );\r\n\r\n\t\t\t// Clean up changes made to backgrounds\r\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\r\n\t\t\t\ttransformElement( background, '' );\r\n\t\t\t} );\r\n\r\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\r\n\r\n\t\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\r\n\t\t\tthis.Reveal.layout();\r\n\t\t\tthis.Reveal.cueAutoSlide();\r\n\r\n\t\t\t// Notify observers of the overview hiding\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: 'overviewhidden',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\t'indexh': indices.h,\r\n\t\t\t\t\t'indexv': indices.v,\r\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the slide overview mode on and off.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which overrides the\r\n\t * toggle logic and forcibly sets the desired state. True means\r\n\t * overview is open, false means it's closed.\r\n\t */\r\n\ttoggle( override ) {\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? this.activate() : this.deactivate();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the overview is currently active.\r\n\t *\r\n\t * @return {Boolean} true if the overview is active,\r\n\t * false otherwise\r\n\t */\r\n\tisActive() {\r\n\r\n\t\treturn this.active;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when a slide is and we're in the overview.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonSlideClicked( event ) {\r\n\r\n\t\tif( this.isActive() ) {\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tlet element = event.target;\r\n\r\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t}\r\n\r\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\r\n\r\n\t\t\t\tthis.deactivate();\r\n\r\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\r\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\r\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\r\n\r\n\t\t\t\t\tthis.Reveal.slide( h, v );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","import { enterFullscreen } from '../utils/util.js'\r\n\r\n/**\r\n * Handles all reveal.js keyboard interactions.\r\n */\r\nexport default class Keyboard {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// A key:value map of keyboard keys and descriptions of\r\n\t\t// the actions they trigger\r\n\t\tthis.shortcuts = {};\r\n\r\n\t\t// Holds custom key code mappings\r\n\t\tthis.bindings = {};\r\n\r\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\r\n\t\tthis.onDocumentKeyPress = this.onDocumentKeyPress.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\r\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\r\n\t\t\tthis.shortcuts['P']             = 'Previous slide';\r\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\r\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\r\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\r\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\r\n\t\t}\r\n\r\n\t\tthis.shortcuts['Home  ,  Shift &#8592;']        = 'First slide';\r\n\t\tthis.shortcuts['End  ,  Shift &#8594;']         = 'Last slide';\r\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\r\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\r\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Starts listening for keyboard events.\r\n\t */\r\n\tbind() {\r\n\r\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\r\n\t\tdocument.addEventListener( 'keypress', this.onDocumentKeyPress, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Stops listening for keyboard events.\r\n\t */\r\n\tunbind() {\r\n\r\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\r\n\t\tdocument.removeEventListener( 'keypress', this.onDocumentKeyPress, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Add a custom key binding with optional description to\r\n\t * be added to the help screen.\r\n\t */\r\n\taddKeyBinding( binding, callback ) {\r\n\r\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\r\n\t\t\tthis.bindings[binding.keyCode] = {\r\n\t\t\t\tcallback: callback,\r\n\t\t\t\tkey: binding.key,\r\n\t\t\t\tdescription: binding.description\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.bindings[binding] = {\r\n\t\t\t\tcallback: callback,\r\n\t\t\t\tkey: null,\r\n\t\t\t\tdescription: null\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified custom key binding.\r\n\t */\r\n\tremoveKeyBinding( keyCode ) {\r\n\r\n\t\tdelete this.bindings[keyCode];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Programmatically triggers a keyboard event\r\n\t *\r\n\t * @param {int} keyCode\r\n\t */\r\n\ttriggerKey( keyCode ) {\r\n\r\n\t\tthis.onDocumentKeyDown( { keyCode } );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a new shortcut to include in the help overlay\r\n\t *\r\n\t * @param {String} key\r\n\t * @param {String} value\r\n\t */\r\n\tregisterKeyboardShortcut( key, value ) {\r\n\r\n\t\tthis.shortcuts[key] = value;\r\n\r\n\t}\r\n\r\n\tgetShortcuts() {\r\n\r\n\t\treturn this.shortcuts;\r\n\r\n\t}\r\n\r\n\tgetBindings() {\r\n\r\n\t\treturn this.bindings;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the document level 'keypress' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentKeyPress( event ) {\r\n\r\n\t\t// Check if the pressed key is question mark\r\n\t\tif( event.shiftKey && event.charCode === 63 ) {\r\n\t\t\tthis.Reveal.toggleHelp();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the document level 'keydown' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentKeyDown( event ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\r\n\t\t// If there's a condition specified and it returns false,\r\n\t\t// ignore this event\r\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// If keyboardCondition is set, only capture keyboard events\r\n\t\t// for embedded decks when they are focused\r\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Shorthand\r\n\t\tlet keyCode = event.keyCode;\r\n\r\n\t\t// Remember if auto-sliding was paused so we can toggle it\r\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\r\n\r\n\t\tthis.Reveal.onUserInput( event );\r\n\r\n\t\t// Is there a focused element that could be using the keyboard?\r\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\r\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\r\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\r\n\r\n\t\t// Whitelist specific modified + keycode combinations\r\n\t\tlet prevSlideShortcut = event.shiftKey && event.keyCode === 32;\r\n\t\tlet firstSlideShortcut = event.shiftKey && keyCode === 37;\r\n\t\tlet lastSlideShortcut = event.shiftKey && keyCode === 39;\r\n\r\n\t\t// Prevent all other events when a modifier is pressed\r\n\t\tlet unusedModifier = \t!prevSlideShortcut && !firstSlideShortcut && !lastSlideShortcut &&\r\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\r\n\r\n\t\t// Disregard the event if there's a focused element or a\r\n\t\t// keyboard modifier key is present\r\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\r\n\r\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\r\n\t\tlet resumeKeyCodes = [66,86,190,191];\r\n\t\tlet key;\r\n\r\n\t\t// Custom key bindings for togglePause should be able to resume\r\n\t\tif( typeof config.keyboard === 'object' ) {\r\n\t\t\tfor( key in config.keyboard ) {\r\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\r\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Use linear navigation if we're configured to OR if\r\n\t\t// the presentation is one-dimensional\r\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\r\n\r\n\t\tlet triggered = false;\r\n\r\n\t\t// 1. User defined key bindings\r\n\t\tif( typeof config.keyboard === 'object' ) {\r\n\r\n\t\t\tfor( key in config.keyboard ) {\r\n\r\n\t\t\t\t// Check if this binding matches the pressed key\r\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\r\n\r\n\t\t\t\t\tlet value = config.keyboard[ key ];\r\n\r\n\t\t\t\t\t// Callback function\r\n\t\t\t\t\tif( typeof value === 'function' ) {\r\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// String shortcuts to reveal.js API\r\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\r\n\t\t\t\t\t\tthis.Reveal[ value ].call();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttriggered = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// 2. Registered custom key bindings\r\n\t\tif( triggered === false ) {\r\n\r\n\t\t\tfor( key in this.bindings ) {\r\n\r\n\t\t\t\t// Check if this binding matches the pressed key\r\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\r\n\r\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\r\n\r\n\t\t\t\t\t// Callback function\r\n\t\t\t\t\tif( typeof action === 'function' ) {\r\n\t\t\t\t\t\taction.apply( null, [ event ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// String shortcuts to reveal.js API\r\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\r\n\t\t\t\t\t\tthis.Reveal[ action ].call();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttriggered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 3. System defined key bindings\r\n\t\tif( triggered === false ) {\r\n\r\n\t\t\t// Assume true and try to prove false\r\n\t\t\ttriggered = true;\r\n\r\n\t\t\t// P, PAGE UP\r\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\r\n\t\t\t\tthis.Reveal.prev();\r\n\t\t\t}\r\n\t\t\t// N, PAGE DOWN\r\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\r\n\t\t\t\tthis.Reveal.next();\r\n\t\t\t}\r\n\t\t\t// H, LEFT\r\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\r\n\t\t\t\tif( firstSlideShortcut ) {\r\n\t\t\t\t\tthis.Reveal.slide( 0 );\r\n\t\t\t\t}\r\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.left();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// L, RIGHT\r\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\r\n\t\t\t\tif( lastSlideShortcut ) {\r\n\t\t\t\t\tthis.Reveal.slide( Number.MAX_VALUE );\r\n\t\t\t\t}\r\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.right();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// K, UP\r\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\r\n\t\t\t\tif( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.up();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// J, DOWN\r\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\r\n\t\t\t\tif( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.down();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// HOME\r\n\t\t\telse if( keyCode === 36 ) {\r\n\t\t\t\tthis.Reveal.slide( 0 );\r\n\t\t\t}\r\n\t\t\t// END\r\n\t\t\telse if( keyCode === 35 ) {\r\n\t\t\t\tthis.Reveal.slide( Number.MAX_VALUE );\r\n\t\t\t}\r\n\t\t\t// SPACE\r\n\t\t\telse if( keyCode === 32 ) {\r\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\r\n\t\t\t\t\tthis.Reveal.overview.deactivate();\r\n\t\t\t\t}\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\r\n\t\t\telse if( keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191 ) {\r\n\t\t\t\tthis.Reveal.togglePause();\r\n\t\t\t}\r\n\t\t\t// F\r\n\t\t\telse if( keyCode === 70 ) {\r\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\r\n\t\t\t}\r\n\t\t\t// A\r\n\t\t\telse if( keyCode === 65 ) {\r\n\t\t\t\tif ( config.autoSlideStoppable ) {\r\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttriggered = false;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// If the input resulted in a triggered action we should prevent\r\n\t\t// the browsers default behavior\r\n\t\tif( triggered ) {\r\n\t\t\tevent.preventDefault && event.preventDefault();\r\n\t\t}\r\n\t\t// ESC or O key\r\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\r\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\r\n\t\t\t\tthis.Reveal.overview.toggle();\r\n\t\t\t}\r\n\r\n\t\t\tevent.preventDefault && event.preventDefault();\r\n\t\t}\r\n\r\n\t\t// If auto-sliding is enabled we need to cue up\r\n\t\t// another timeout\r\n\t\tthis.Reveal.cueAutoSlide();\r\n\r\n\t}\r\n\r\n}","import { supportsHistoryAPI } from '../utils/device.js'\r\n\r\n/**\r\n * Reads and writes the URL based on reveal.js' current state.\r\n */\r\nexport default class Location {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\r\n\t\tthis.writeURLTimeout = 0;\r\n\r\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the current URL (hash) and navigates accordingly.\r\n\t */\r\n\treadURL() {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\t\tlet indices = this.Reveal.getIndices();\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\r\n\t\tlet hash = window.location.hash;\r\n\r\n\t\t// Attempt to parse the hash as either an index or name\r\n\t\tlet bits = hash.slice( 2 ).split( '/' ),\r\n\t\t\tname = hash.replace( /#\\/?/gi, '' );\r\n\r\n\t\t// If the first bit is not fully numeric and there is a name we\r\n\t\t// can assume that this is a named link\r\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\r\n\t\t\tlet element;\r\n\r\n\t\t\tlet f;\r\n\r\n\t\t\t// Parse named links with fragments (#/named-link/2)\r\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\r\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\r\n\t\t\t\tf = isNaN(f) ? undefined : f;\r\n\t\t\t\tname = name.split( '/' ).shift();\r\n\t\t\t}\r\n\r\n\t\t\t// Ensure the named link is a valid HTML ID attribute\r\n\t\t\ttry {\r\n\t\t\t\telement = document.getElementById( decodeURIComponent( name ) );\r\n\t\t\t}\r\n\t\t\tcatch ( error ) { }\r\n\r\n\t\t\t// Ensure that we're not already on a slide with the same name\r\n\t\t\tlet isSameNameAsCurrentSlide = currentSlide ? currentSlide.getAttribute( 'id' ) === name : false;\r\n\r\n\t\t\tif( element ) {\r\n\t\t\t\t// If the slide exists and is not the current slide...\r\n\t\t\t\tif ( !isSameNameAsCurrentSlide || typeof f !== 'undefined' ) {\r\n\t\t\t\t\t// ...find the position of the named slide and navigate to it\r\n\t\t\t\t\tlet slideIndices = this.Reveal.getIndices( element );\r\n\t\t\t\t\tthis.Reveal.slide( slideIndices.h, slideIndices.v, f );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// If the slide doesn't exist, navigate to the current slide\r\n\t\t\telse {\r\n\t\t\t\tthis.Reveal.slide( indices.h || 0, indices.v || 0 );\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex ? 1 : 0;\r\n\r\n\t\t\t// Read the index components of the hash\r\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\r\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\r\n\t\t\t\tf;\r\n\r\n\t\t\tif( config.fragmentInURL ) {\r\n\t\t\t\tf = parseInt( bits[2], 10 );\r\n\t\t\t\tif( isNaN( f ) ) {\r\n\t\t\t\t\tf = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif( h !== indices.h || v !== indices.v || f !== undefined ) {\r\n\t\t\t\tthis.Reveal.slide( h, v, f );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the page URL (hash) to reflect the current\r\n\t * state.\r\n\t *\r\n\t * @param {number} delay The time in ms to wait before\r\n\t * writing the hash\r\n\t */\r\n\twriteURL( delay ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\r\n\t\t// Make sure there's never more than one timeout running\r\n\t\tclearTimeout( this.writeURLTimeout );\r\n\r\n\t\t// If a delay is specified, timeout this call\r\n\t\tif( typeof delay === 'number' ) {\r\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\r\n\t\t}\r\n\t\telse if( currentSlide ) {\r\n\t\t\t// If we're configured to push to history OR the history\r\n\t\t\t// API is not avaialble.\r\n\t\t\tif( config.history || supportsHistoryAPI === false ) {\r\n\t\t\t\twindow.location.hash = this.getHash();\r\n\t\t\t}\r\n\t\t\t// If we're configured to reflect the current slide in the\r\n\t\t\t// URL without pushing to history.\r\n\t\t\telse if( config.hash ) {\r\n\t\t\t\twindow.history.replaceState( null, null, '#' + this.getHash() );\r\n\t\t\t}\r\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\r\n\t\t\t// anchors on pages where reveal.js is running. Removed\r\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\r\n\t\t\t//\r\n\t\t\t// If history and hash are both disabled, a hash may still\r\n\t\t\t// be added to the URL by clicking on a href with a hash\r\n\t\t\t// target. Counter this by always removing the hash.\r\n\t\t\t// else {\r\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\r\n\t\t\t// }\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Return a hash URL that will resolve to the given slide location.\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\r\n\t */\r\n\tgetHash( slide ) {\r\n\r\n\t\tlet url = '/';\r\n\r\n\t\t// Attempt to create a named link based on the slide's ID\r\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\r\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\r\n\t\tif( id ) {\r\n\t\t\tid = encodeURIComponent( id );\r\n\t\t}\r\n\r\n\t\tlet index = this.Reveal.getIndices( slide );\r\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\r\n\t\t\tindex.f = undefined;\r\n\t\t}\r\n\r\n\t\t// If the current slide has an ID, use that as a named link,\r\n\t\t// but we don't support named links with a fragment index\r\n\t\tif( typeof id === 'string' && id.length ) {\r\n\t\t\turl = '/' + id;\r\n\r\n\t\t\t// If there is also a fragment, append that at the end\r\n\t\t\t// of the named link, like: #/named-link/2\r\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\r\n\t\t}\r\n\t\t// Otherwise use the /h/v index\r\n\t\telse {\r\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\r\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\r\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\r\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the window level 'hashchange' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tonWindowHashChange( event ) {\r\n\r\n\t\tthis.readURL();\r\n\r\n\t}\r\n\r\n}","import { queryAll } from '../utils/util.js'\r\nimport { isAndroid } from '../utils/device.js'\r\n\r\n/**\r\n * Manages our presentation controls. This includes both\r\n * the built-in control arrows as well as event monitoring\r\n * of any elements within the presentation with either of the\r\n * following helper classes:\r\n * - .navigate-up\r\n * - .navigate-right\r\n * - .navigate-down\r\n * - .navigate-left\r\n * - .navigate-next\r\n * - .navigate-prev\r\n */\r\nexport default class Controls {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\r\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\r\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\r\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\r\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\r\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst rtl = this.Reveal.getConfig().rtl;\r\n\t\tconst revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\tthis.element = document.createElement( 'aside' );\r\n\t\tthis.element.className = 'controls';\r\n\t\tthis.element.innerHTML =\r\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\r\n\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t\t// There can be multiple instances of controls throughout the page\r\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\r\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\r\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\r\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\r\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\r\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\r\n\r\n\t\t// The left, right and down arrows in the standard reveal.js controls\r\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\r\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\r\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\r\n\r\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\r\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\t// Listen to both touch and click events, in case the device\r\n\t\t// supports both\r\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\r\n\r\n\t\t// Only support touch for Android, fixes double navigations in\r\n\t\t// stock browser\r\n\t\tif( isAndroid ) {\r\n\t\t\tpointerEvents = [ 'touchstart' ];\r\n\t\t}\r\n\r\n\t\tpointerEvents.forEach( eventName => {\r\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\r\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\r\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\r\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\r\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\r\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\r\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\r\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\r\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\r\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\r\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\r\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the state of all control/navigation arrows.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\tlet routes = this.Reveal.availableRoutes();\r\n\r\n\t\t// Remove the 'enabled' class from all directions\r\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\r\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\r\n\r\n\t\t\t// Set 'disabled' attribute on all directions\r\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\r\n\t\t} );\r\n\r\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\r\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\r\n\t\t// Prev/next buttons\r\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\r\n\t\t// Highlight fragment directions\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide ) {\r\n\r\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\r\n\r\n\t\t\t// Always apply fragment decorator to prev/next buttons\r\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\r\n\t\t\t// Apply fragment decorators to directional buttons based on\r\n\t\t\t// what slide axis they are in\r\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\r\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\r\n\r\n\t\t\tlet indices = this.Reveal.getIndices();\r\n\r\n\t\t\t// Highlight control arrows with an animation to ensure\r\n\t\t\t// that the viewer knows how to navigate\r\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\r\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\r\n\r\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\r\n\r\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\r\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\r\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Event handlers for navigation control buttons.\r\n\t */\r\n\tonNavigateLeftClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\r\n\t\t\tthis.Reveal.prev();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.Reveal.left();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tonNavigateRightClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\r\n\t\t\tthis.Reveal.next();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.Reveal.right();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tonNavigateUpClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.up();\r\n\r\n\t}\r\n\r\n\tonNavigateDownClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.down();\r\n\r\n\t}\r\n\r\n\tonNavigatePrevClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.prev();\r\n\r\n\t}\r\n\r\n\tonNavigateNextClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.next();\r\n\r\n\t}\r\n\r\n\r\n}","/**\r\n * Creates a visual progress bar for the presentation.\r\n */\r\nexport default class Progress {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'progress';\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t\tthis.bar = document.createElement( 'span' );\r\n\t\tthis.element.appendChild( this.bar );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\r\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\r\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the progress bar to reflect the current slide.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\t// Update progress if enabled\r\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\r\n\r\n\t\t\tthis.bar.style.transform = 'scaleX('+ this.Reveal.getProgress() +')';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetMaxWidth() {\r\n\r\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clicking on the progress bar results in a navigation to the\r\n\t * closest approximate horizontal slide using this equation:\r\n\t *\r\n\t * ( clickX / presentationWidth ) * numberOfSlides\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonProgressClicked( event ) {\r\n\r\n\t\tthis.Reveal.onUserInput( event );\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tlet slidesTotal = this.Reveal.getHorizontalSlides().length;\r\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\r\n\r\n\t\tif( this.Reveal.getConfig().rtl ) {\r\n\t\t\tslideIndex = slidesTotal - slideIndex;\r\n\t\t}\r\n\r\n\t\tthis.Reveal.slide( slideIndex );\r\n\r\n\t}\r\n\r\n\r\n}","/**\r\n * Handles hiding of the pointer/cursor when inactive.\r\n */\r\nexport default class Pointer {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Throttles mouse wheel navigation\r\n\t\tthis.lastMouseWheelStep = 0;\r\n\r\n\t\t// Is the mouse pointer currently hidden from view\r\n\t\tthis.cursorHidden = false;\r\n\r\n\t\t// Timeout used to determine when the cursor is inactive\r\n\t\tthis.cursorInactiveTimeout = 0;\r\n\r\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\r\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.mouseWheel ) {\r\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\r\n\t\t\tdocument.addEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\r\n\t\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\r\n\t\t}\r\n\r\n\t\t// Auto-hide the mouse pointer when its inactive\r\n\t\tif( config.hideInactiveCursor ) {\r\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\r\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.showCursor();\r\n\r\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\r\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the mouse pointer after it has been hidden with\r\n\t * #hideCursor.\r\n\t */\r\n\tshowCursor() {\r\n\r\n\t\tif( this.cursorHidden ) {\r\n\t\t\tthis.cursorHidden = false;\r\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the mouse pointer when it's on top of the .reveal\r\n\t * container.\r\n\t */\r\n\thideCursor() {\r\n\r\n\t\tif( this.cursorHidden === false ) {\r\n\t\t\tthis.cursorHidden = true;\r\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called whenever there is mouse input at the document level\r\n\t * to determine if the cursor is active or not.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentCursorActive( event ) {\r\n\r\n\t\tthis.showCursor();\r\n\r\n\t\tclearTimeout( this.cursorInactiveTimeout );\r\n\r\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\r\n\t * multiple slides.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentMouseScroll( event ) {\r\n\r\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\r\n\r\n\t\t\tthis.lastMouseWheelStep = Date.now();\r\n\r\n\t\t\tlet delta = event.detail || -event.wheelDelta;\r\n\t\t\tif( delta > 0 ) {\r\n\t\t\t\tthis.Reveal.next();\r\n\t\t\t}\r\n\t\t\telse if( delta < 0 ) {\r\n\t\t\t\tthis.Reveal.prev();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * Loads a JavaScript file from the given URL and executes it.\r\n *\r\n * @param {string} url Address of the .js file to load\r\n * @param {function} callback Method to invoke when the script\r\n * has loaded and executed\r\n */\r\nexport const loadScript = ( url, callback ) => {\r\n\r\n\tconst script = document.createElement( 'script' );\r\n\tscript.type = 'text/javascript';\r\n\tscript.async = false;\r\n\tscript.defer = false;\r\n\tscript.src = url;\r\n\r\n\tif( typeof callback === 'function' ) {\r\n\r\n\t\t// Success callback\r\n\t\tscript.onload = script.onreadystatechange = event => {\r\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\r\n\r\n\t\t\t\t// Kill event listeners\r\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\r\n\r\n\t\t\t\tcallback();\r\n\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Error callback\r\n\t\tscript.onerror = err => {\r\n\r\n\t\t\t// Kill event listeners\r\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\r\n\r\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t// Append the script at the end of <head>\r\n\tconst head = document.querySelector( 'head' );\r\n\thead.insertBefore( script, head.lastChild );\r\n\r\n}","import { loadScript } from '../utils/loader.js'\r\n\r\n/**\r\n * Manages loading and registering of reveal.js plugins.\r\n */\r\nexport default class Plugins {\r\n\r\n\tconstructor( reveal ) {\r\n\r\n\t\tthis.Reveal = reveal;\r\n\r\n\t\t// Flags our current state (idle -> loading -> loaded)\r\n\t\tthis.state = 'idle';\r\n\r\n\t\t// An id:instance map of currently registed plugins\r\n\t\tthis.registeredPlugins = {};\r\n\r\n\t\tthis.asyncDependencies = [];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Loads reveal.js dependencies, registers and\r\n\t * initializes plugins.\r\n\t *\r\n\t * Plugins are direct references to a reveal.js plugin\r\n\t * object that we register and initialize after any\r\n\t * synchronous dependencies have loaded.\r\n\t *\r\n\t * Dependencies are defined via the 'dependencies' config\r\n\t * option and will be loaded prior to starting reveal.js.\r\n\t * Some dependencies may have an 'async' flag, if so they\r\n\t * will load after reveal.js has been started up.\r\n\t */\r\n\tload( plugins, dependencies ) {\r\n\r\n\t\tthis.state = 'loading';\r\n\r\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\r\n\r\n\t\treturn new Promise( resolve => {\r\n\r\n\t\t\tlet scripts = [],\r\n\t\t\t\tscriptsToLoad = 0;\r\n\r\n\t\t\tdependencies.forEach( s => {\r\n\t\t\t\t// Load if there's no condition or the condition is truthy\r\n\t\t\t\tif( !s.condition || s.condition() ) {\r\n\t\t\t\t\tif( s.async ) {\r\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tscripts.push( s );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tif( scripts.length ) {\r\n\t\t\t\tscriptsToLoad = scripts.length;\r\n\r\n\t\t\t\tconst scriptLoadedCallback = (s) => {\r\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\r\n\r\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\r\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Load synchronous scripts\r\n\t\t\t\tscripts.forEach( s => {\r\n\t\t\t\t\tif( typeof s.id === 'string' ) {\r\n\t\t\t\t\t\tthis.registerPlugin( s );\r\n\t\t\t\t\t\tscriptLoadedCallback( s );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\r\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\r\n\t\t\t\t\t\tscriptLoadedCallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.initPlugins().then( resolve );\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes our plugins and waits for them to be ready\r\n\t * before proceeding.\r\n\t */\r\n\tinitPlugins() {\r\n\r\n\t\treturn new Promise( resolve => {\r\n\r\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\r\n\t\t\tlet pluginsToInitialize = pluginValues.length;\r\n\r\n\t\t\t// If there are no plugins, skip this step\r\n\t\t\tif( pluginsToInitialize === 0 ) {\r\n\t\t\t\tthis.loadAsync().then( resolve );\r\n\t\t\t}\r\n\t\t\t// ... otherwise initialize plugins\r\n\t\t\telse {\r\n\r\n\t\t\t\tlet initNextPlugin;\r\n\r\n\t\t\t\tlet afterPlugInitialized = () => {\r\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\r\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinitNextPlugin();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet i = 0;\r\n\r\n\t\t\t\t// Initialize plugins serially\r\n\t\t\t\tinitNextPlugin = () => {\r\n\r\n\t\t\t\t\tlet plugin = pluginValues[i++];\r\n\r\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\r\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\r\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\r\n\r\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\r\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\r\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tafterPlugInitialized();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tafterPlugInitialized();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinitNextPlugin();\r\n\r\n\t\t\t}\r\n\r\n\t\t} )\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Loads all async reveal.js dependencies.\r\n\t */\r\n\tloadAsync() {\r\n\r\n\t\tthis.state = 'loaded';\r\n\r\n\t\tif( this.asyncDependencies.length ) {\r\n\t\t\tthis.asyncDependencies.forEach( s => {\r\n\t\t\t\tloadScript( s.src, s.callback );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn Promise.resolve();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a new plugin with this reveal.js instance.\r\n\t *\r\n\t * reveal.js waits for all regisered plugins to initialize\r\n\t * before considering itself ready, as long as the plugin\r\n\t * is registered before calling `Reveal.initialize()`.\r\n\t */\r\n\tregisterPlugin( plugin ) {\r\n\r\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\r\n\t\t// plugins work with reveal.js 4.0.0\r\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\r\n\t\t\tplugin = arguments[1];\r\n\t\t\tplugin.id = arguments[0];\r\n\t\t}\r\n\t\t// Plugin can optionally be a function which we call\r\n\t\t// to create an instance of the plugin\r\n\t\telse if( typeof plugin === 'function' ) {\r\n\t\t\tplugin = plugin();\r\n\t\t}\r\n\r\n\t\tlet id = plugin.id;\r\n\r\n\t\tif( typeof id !== 'string' ) {\r\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\r\n\t\t}\r\n\t\telse if( this.registeredPlugins[id] === undefined ) {\r\n\t\t\tthis.registeredPlugins[id] = plugin;\r\n\r\n\t\t\t// If a plugin is registered after reveal.js is loaded,\r\n\t\t\t// initialize it right away\r\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\r\n\t\t\t\tplugin.init( this.Reveal );\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a specific plugin has been registered.\r\n\t *\r\n\t * @param {String} id Unique plugin identifier\r\n\t */\r\n\thasPlugin( id ) {\r\n\r\n\t\treturn !!this.registeredPlugins[id];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the specific plugin instance, if a plugin\r\n\t * with the given ID has been registered.\r\n\t *\r\n\t * @param {String} id Unique plugin identifier\r\n\t */\r\n\tgetPlugin( id ) {\r\n\r\n\t\treturn this.registeredPlugins[id];\r\n\r\n\t}\r\n\r\n\tgetRegisteredPlugins() {\r\n\r\n\t\treturn this.registeredPlugins;\r\n\r\n\t}\r\n\r\n}\r\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\r\nimport { queryAll, createStyleSheet } from '../utils/util.js'\r\n\r\n/**\r\n * Setups up our presentation for printing/exporting to PDF.\r\n */\r\nexport default class Print {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Configures the presentation for printing to a static\r\n\t * PDF.\r\n\t */\r\n\tsetupPDF() {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\r\n\t\tlet slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\r\n\r\n\t\t// Dimensions of the PDF pages\r\n\t\tlet pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\r\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\r\n\r\n\t\t// Dimensions of slides within the pages\r\n\t\tlet slideWidth = slideSize.width,\r\n\t\t\tslideHeight = slideSize.height;\r\n\r\n\t\t// Let the browser know what page size we want to print\r\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\r\n\r\n\t\t// Limit the size of certain elements to the dimensions of the slide\r\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\r\n\r\n\t\tdocument.documentElement.classList.add( 'print-pdf' );\r\n\t\tdocument.body.style.width = pageWidth + 'px';\r\n\t\tdocument.body.style.height = pageHeight + 'px';\r\n\r\n\t\t// Make sure stretch elements fit on slide\r\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\r\n\r\n\t\t// Compute slide numbers now, before we start duplicating slides\r\n\t\tlet doingSlideNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\r\n\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( function( slide ) {\r\n\t\t\tslide.setAttribute( 'data-slide-number', this.Reveal.slideNumber.getSlideNumber( slide ) );\r\n\t\t}, this );\r\n\r\n\t\t// Slide and slide background layout\r\n\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( function( slide ) {\r\n\r\n\t\t\t// Vertical stacks are not centred since their section\r\n\t\t\t// children will be\r\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\r\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\r\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2,\r\n\t\t\t\t\ttop = ( pageHeight - slideHeight ) / 2;\r\n\r\n\t\t\t\tlet contentHeight = slide.scrollHeight;\r\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\r\n\r\n\t\t\t\t// Adhere to configured pages per slide limit\r\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\r\n\r\n\t\t\t\t// Center slides vertically\r\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\r\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\r\n\t\t\t\t// so that no page ever flows onto another\r\n\t\t\t\tlet page = document.createElement( 'div' );\r\n\t\t\t\tpage.className = 'pdf-page';\r\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\r\n\t\t\t\tslide.parentNode.insertBefore( page, slide );\r\n\t\t\t\tpage.appendChild( slide );\r\n\r\n\t\t\t\t// Position the slide inside of the page\r\n\t\t\t\tslide.style.left = left + 'px';\r\n\t\t\t\tslide.style.top = top + 'px';\r\n\t\t\t\tslide.style.width = slideWidth + 'px';\r\n\r\n\t\t\t\tif( slide.slideBackgroundElement ) {\r\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Inject notes if `showNotes` is enabled\r\n\t\t\t\tif( config.showNotes ) {\r\n\r\n\t\t\t\t\t// Are there notes for this slide?\r\n\t\t\t\t\tlet notes = getSlideNotes( slide );\r\n\t\t\t\t\tif( notes ) {\r\n\r\n\t\t\t\t\t\tlet notesSpacing = 8;\r\n\t\t\t\t\t\tlet notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\r\n\t\t\t\t\t\tlet notesElement = document.createElement( 'div' );\r\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\r\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\r\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\r\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\r\n\r\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\r\n\t\t\t\t\t\t\tpage.parentNode.insertBefore( notesElement, page.nextSibling );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\r\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\r\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\r\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Inject slide numbers if `slideNumbers` are enabled\r\n\t\t\t\tif( doingSlideNumbers ) {\r\n\t\t\t\t\tlet numberElement = document.createElement( 'div' );\r\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\r\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\r\n\t\t\t\t\tnumberElement.innerHTML = slide.getAttribute( 'data-slide-number' );\r\n\t\t\t\t\tpage.appendChild( numberElement );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Copy page and show fragments one after another\r\n\t\t\t\tif( config.pdfSeparateFragments ) {\r\n\r\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\r\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\r\n\t\t\t\t\t// are part of the same group.\r\n\t\t\t\t\tlet fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\r\n\r\n\t\t\t\t\tlet previousFragmentStep;\r\n\t\t\t\t\tlet previousPage;\r\n\r\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\r\n\r\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\r\n\t\t\t\t\t\tif( previousFragmentStep ) {\r\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\r\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Show the fragments for the current index\r\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\r\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\r\n\t\t\t\t\t\t}, this );\r\n\r\n\t\t\t\t\t\t// Create a separate page for the current fragment state\r\n\t\t\t\t\t\tlet clonedPage = page.cloneNode( true );\r\n\t\t\t\t\t\tpage.parentNode.insertBefore( clonedPage, ( previousPage || page ).nextSibling );\r\n\r\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\r\n\t\t\t\t\t\tpreviousPage = clonedPage;\r\n\r\n\t\t\t\t\t}, this );\r\n\r\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\r\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\r\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\r\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// Show all fragments\r\n\t\t\t\telse {\r\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\r\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}, this );\r\n\r\n\t\t// Notify subscribers that the PDF layout is good to go\r\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this instance is being used to print a PDF.\r\n\t */\r\n\tisPrintingPDF() {\r\n\r\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\r\n\r\n\t}\r\n\r\n}","import { isAndroid } from '../utils/device.js'\r\n\r\nconst SWIPE_THRESHOLD = 40;\r\n\r\n/**\r\n * Controls all touch interactions and navigations for\r\n * a presentation.\r\n */\r\nexport default class Touch {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Holds information about the currently ongoing touch interaction\r\n\t\tthis.touchStartX = 0;\r\n\t\tthis.touchStartY = 0;\r\n\t\tthis.touchStartCount = 0;\r\n\t\tthis.touchCaptured = false;\r\n\r\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\r\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\r\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\r\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\r\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\r\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tbind() {\r\n\r\n\t\tlet revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\tif( 'onpointerdown' in window ) {\r\n\t\t\t// Use W3C pointer events\r\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\r\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\r\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\r\n\t\t}\r\n\t\telse if( window.navigator.msPointerEnabled ) {\r\n\t\t\t// IE 10 uses prefixed version of pointer events\r\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\r\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\r\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Fall back to touch events\r\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\r\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\r\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tunbind() {\r\n\r\n\t\tlet revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\r\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\r\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\r\n\r\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\r\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\r\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\r\n\r\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\r\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\r\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the target element prevents the triggering of\r\n\t * swipe navigation.\r\n\t */\r\n\tisSwipePrevented( target ) {\r\n\r\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\r\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\r\n\t\t\ttarget = target.parentNode;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchstart' event, enables support for\r\n\t * swipe and pinch gestures.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchStart( event ) {\r\n\r\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\r\n\r\n\t\tthis.touchStartX = event.touches[0].clientX;\r\n\t\tthis.touchStartY = event.touches[0].clientY;\r\n\t\tthis.touchStartCount = event.touches.length;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchmove' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchMove( event ) {\r\n\r\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\r\n\t\t// Each touch should only trigger one action\r\n\t\tif( !this.touchCaptured ) {\r\n\t\t\tthis.Reveal.onUserInput( event );\r\n\r\n\t\t\tlet currentX = event.touches[0].clientX;\r\n\t\t\tlet currentY = event.touches[0].clientY;\r\n\r\n\t\t\t// There was only one touch point, look for a swipe\r\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\r\n\r\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\r\n\r\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\r\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\r\n\r\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tif( config.rtl ) {\r\n\t\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.left();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tif( config.rtl ) {\r\n\t\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.right();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.up();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.down();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If we're embedded, only block touch events if they have\r\n\t\t\t\t// triggered an action\r\n\t\t\t\tif( config.embedded ) {\r\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\r\n\t\t\t\t// around of the viewport in iOS\r\n\t\t\t\telse {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\t// There's a bug with swiping on some Android devices unless\r\n\t\t// the default action is always prevented\r\n\t\telse if( isAndroid ) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchend' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchEnd( event ) {\r\n\r\n\t\tthis.touchCaptured = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer down to touch start.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerDown( event ) {\r\n\r\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchStart( event );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer move to touch move.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerMove( event ) {\r\n\r\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchMove( event );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer up to touch end.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerUp( event ) {\r\n\r\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchEnd( event );\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * Manages focus when a presentation is embedded. This\r\n * helps us only capture keyboard from the presentation\r\n * a user is currently interacting with in a page where\r\n * multiple presentations are embedded.\r\n */\r\n\r\nconst STATE_FOCUS = 'focus';\r\nconst STATE_BLUR = 'blur';\r\n\r\nexport default class Focus {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\r\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.embedded ) {\r\n\t\t\tthis.blur();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.focus();\r\n\t\t\tthis.unbind();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\tif( this.Reveal.getConfig().embedded ) {\r\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\r\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\r\n\r\n\t}\r\n\r\n\tfocus() {\r\n\r\n\t\tif( this.state !== STATE_FOCUS ) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\r\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\r\n\t\t}\r\n\r\n\t\tthis.state = STATE_FOCUS;\r\n\r\n\t}\r\n\r\n\tblur() {\r\n\r\n\t\tif( this.state !== STATE_BLUR ) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\r\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\r\n\t\t}\r\n\r\n\t\tthis.state = STATE_BLUR;\r\n\r\n\t}\r\n\r\n\tisFocused() {\r\n\r\n\t\treturn this.state === STATE_FOCUS;\r\n\r\n\t}\r\n\r\n\tonRevealPointerDown( event ) {\r\n\r\n\t\tthis.focus();\r\n\r\n\t}\r\n\r\n\tonDocumentPointerDown( event ) {\r\n\r\n\t\tlet revealElement = event.target.closest( '.reveal' );\r\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\r\n\t\t\tthis.blur();\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * Handles the showing and \r\n */\r\nexport default class Notes {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'speaker-notes';\r\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\r\n\t\tthis.element.setAttribute( 'tabindex', '0' );\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.showNotes ) {\r\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Pick up notes from the current slide and display them\r\n\t * to the viewer.\r\n\t *\r\n\t * @see {@link config.showNotes}\r\n\t */\r\n\tupdate() {\r\n\r\n\t\tif( this.Reveal.getConfig().showNotes && this.element && this.Reveal.getCurrentSlide() && !this.Reveal.print.isPrintingPDF() ) {\r\n\r\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the visibility of the speaker notes sidebar that\r\n\t * is used to share annotated slides. The notes sidebar is\r\n\t * only visible if showNotes is true and there are notes on\r\n\t * one or more slides in the deck.\r\n\t */\r\n\tupdateVisibility() {\r\n\r\n\t\tif( this.Reveal.getConfig().showNotes && this.hasNotes() ) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if there are speaker notes for ANY slide in the\r\n\t * presentation.\r\n\t */\r\n\thasNotes() {\r\n\r\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this presentation is running inside of the\r\n\t * speaker notes window.\r\n\t *\r\n\t * @return {boolean}\r\n\t */\r\n\tisSpeakerNotesWindow() {\r\n\r\n\t\treturn !!window.location.search.match( /receiver/gi );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the speaker notes from a slide. Notes can be\r\n\t * defined in two ways:\r\n\t * 1. As a data-notes attribute on the slide <section>\r\n\t * 2. As an <aside class=\"notes\"> inside of the slide\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide]\r\n\t * @return {(string|null)}\r\n\t */\r\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\r\n\r\n\t\t// Notes can be specified via the data-notes attribute...\r\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\r\n\t\t\treturn slide.getAttribute( 'data-notes' );\r\n\t\t}\r\n\r\n\t\t// ... or using an <aside class=\"notes\"> element\r\n\t\tlet notesElement = slide.querySelector( 'aside.notes' );\r\n\t\tif( notesElement ) {\r\n\t\t\treturn notesElement.innerHTML;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n}","/**\r\n * UI component that lets the use control auto-slide\r\n * playback via play/pause.\r\n */\r\nexport default class Playback {\r\n\r\n\t/**\r\n\t * @param {HTMLElement} container The component will append\r\n\t * itself to this\r\n\t * @param {function} progressCheck A method which will be\r\n\t * called frequently to get the current playback progress on\r\n\t * a range of 0-1\r\n\t */\r\n\tconstructor( container, progressCheck ) {\r\n\r\n\t\t// Cosmetics\r\n\t\tthis.diameter = 100;\r\n\t\tthis.diameter2 = this.diameter/2;\r\n\t\tthis.thickness = 6;\r\n\r\n\t\t// Flags if we are currently playing\r\n\t\tthis.playing = false;\r\n\r\n\t\t// Current progress on a 0-1 range\r\n\t\tthis.progress = 0;\r\n\r\n\t\t// Used to loop the animation smoothly\r\n\t\tthis.progressOffset = 1;\r\n\r\n\t\tthis.container = container;\r\n\t\tthis.progressCheck = progressCheck;\r\n\r\n\t\tthis.canvas = document.createElement( 'canvas' );\r\n\t\tthis.canvas.className = 'playback';\r\n\t\tthis.canvas.width = this.diameter;\r\n\t\tthis.canvas.height = this.diameter;\r\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\r\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\r\n\t\tthis.context = this.canvas.getContext( '2d' );\r\n\r\n\t\tthis.container.appendChild( this.canvas );\r\n\r\n\t\tthis.render();\r\n\r\n\t}\r\n\r\n\tsetPlaying( value ) {\r\n\r\n\t\tconst wasPlaying = this.playing;\r\n\r\n\t\tthis.playing = value;\r\n\r\n\t\t// Start repainting if we weren't already\r\n\t\tif( !wasPlaying && this.playing ) {\r\n\t\t\tthis.animate();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tanimate() {\r\n\r\n\t\tconst progressBefore = this.progress;\r\n\r\n\t\tthis.progress = this.progressCheck();\r\n\r\n\t\t// When we loop, offset the progress so that it eases\r\n\t\t// smoothly rather than immediately resetting\r\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\r\n\t\t\tthis.progressOffset = this.progress;\r\n\t\t}\r\n\r\n\t\tthis.render();\r\n\r\n\t\tif( this.playing ) {\r\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the current progress and playback state.\r\n\t */\r\n\trender() {\r\n\r\n\t\tlet progress = this.playing ? this.progress : 0,\r\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\r\n\t\t\tx = this.diameter2,\r\n\t\t\ty = this.diameter2,\r\n\t\t\ticonSize = 28;\r\n\r\n\t\t// Ease towards 1\r\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\r\n\r\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\r\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\r\n\r\n\t\tthis.context.save();\r\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\r\n\r\n\t\t// Solid background color\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\r\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\r\n\t\tthis.context.fill();\r\n\r\n\t\t// Draw progress track\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\r\n\t\tthis.context.lineWidth = this.thickness;\r\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\r\n\t\tthis.context.stroke();\r\n\r\n\t\tif( this.playing ) {\r\n\t\t\t// Draw progress on top of track\r\n\t\t\tthis.context.beginPath();\r\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\r\n\t\t\tthis.context.lineWidth = this.thickness;\r\n\t\t\tthis.context.strokeStyle = '#fff';\r\n\t\t\tthis.context.stroke();\r\n\t\t}\r\n\r\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\r\n\r\n\t\t// Draw play/pause icons\r\n\t\tif( this.playing ) {\r\n\t\t\tthis.context.fillStyle = '#fff';\r\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\r\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.context.beginPath();\r\n\t\t\tthis.context.translate( 4, 0 );\r\n\t\t\tthis.context.moveTo( 0, 0 );\r\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\r\n\t\t\tthis.context.lineTo( 0, iconSize );\r\n\t\t\tthis.context.fillStyle = '#fff';\r\n\t\t\tthis.context.fill();\r\n\t\t}\r\n\r\n\t\tthis.context.restore();\r\n\r\n\t}\r\n\r\n\ton( type, listener ) {\r\n\t\tthis.canvas.addEventListener( type, listener, false );\r\n\t}\r\n\r\n\toff( type, listener ) {\r\n\t\tthis.canvas.removeEventListener( type, listener, false );\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.playing = false;\r\n\r\n\t\tif( this.canvas.parentNode ) {\r\n\t\t\tthis.container.removeChild( this.canvas );\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * The default reveal.js config object.\r\n */\r\nexport default {\r\n\r\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\r\n\t// when the presentation is scaled to fit different resolutions\r\n\twidth: 960,\r\n\theight: 700,\r\n\r\n\t// Factor of the display size that should remain empty around the content\r\n\tmargin: 0.04,\r\n\r\n\t// Bounds for smallest/largest possible scale to apply to content\r\n\tminScale: 0.2,\r\n\tmaxScale: 2.0,\r\n\r\n\t// Display presentation control arrows\r\n\tcontrols: true,\r\n\r\n\t// Help the user learn the controls by providing hints, for example by\r\n\t// bouncing the down arrow when they first encounter a vertical slide\r\n\tcontrolsTutorial: true,\r\n\r\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\r\n\tcontrolsLayout: 'bottom-right',\r\n\r\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\r\n\t// or \"visible\"\r\n\tcontrolsBackArrows: 'faded',\r\n\r\n\t// Display a presentation progress bar\r\n\tprogress: true,\r\n\r\n\t// Display the page number of the current slide\r\n\t// - true:    Show slide number\r\n\t// - false:   Hide slide number\r\n\t//\r\n\t// Can optionally be set as a string that specifies the number formatting:\r\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\r\n\t// - \"h/v\":\t  Horizontal / vertical slide number\r\n\t// - \"c\":\t  Flattened slide number\r\n\t// - \"c/t\":\t  Flattened slide number / total slides\r\n\t//\r\n\t// Alternatively, you can provide a function that returns the slide\r\n\t// number for the current slide. The function should take in a slide\r\n\t// object and return an array with one string [slideNumber] or\r\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\r\n\tslideNumber: false,\r\n\r\n\t// Can be used to limit the contexts in which the slide number appears\r\n\t// - \"all\":      Always show the slide number\r\n\t// - \"print\":    Only when printing to PDF\r\n\t// - \"speaker\":  Only in the speaker view\r\n\tshowSlideNumber: 'all',\r\n\r\n\t// Use 1 based indexing for # links to match slide number (default is zero\r\n\t// based)\r\n\thashOneBasedIndex: false,\r\n\r\n\t// Add the current slide number to the URL hash so that reloading the\r\n\t// page/copying the URL will return you to the same slide\r\n\thash: false,\r\n\r\n\t// Flags if we should monitor the hash and change slides accordingly\r\n\trespondToHashChanges: true,\r\n\r\n\t// Push each slide change to the browser history.  Implies `hash: true`\r\n\thistory: false,\r\n\r\n\t// Enable keyboard shortcuts for navigation\r\n\tkeyboard: true,\r\n\r\n\t// Optional function that blocks keyboard events when retuning false\r\n\t//\r\n\t// If you set this to 'foucsed', we will only capture keyboard events\r\n\t// for embdedded decks when they are in focus\r\n\tkeyboardCondition: null,\r\n\r\n\t// Disables the default reveal.js slide layout (scaling and centering)\r\n\t// so that you can use custom CSS layout\r\n\tdisableLayout: false,\r\n\r\n\t// Enable the slide overview mode\r\n\toverview: true,\r\n\r\n\t// Vertical centering of slides\r\n\tcenter: true,\r\n\r\n\t// Enables touch navigation on devices with touch input\r\n\ttouch: true,\r\n\r\n\t// Loop the presentation\r\n\tloop: false,\r\n\r\n\t// Change the presentation direction to be RTL\r\n\trtl: false,\r\n\r\n\t// Changes the behavior of our navigation directions.\r\n\t//\r\n\t// \"default\"\r\n\t// Left/right arrow keys step between horizontal slides, up/down\r\n\t// arrow keys step between vertical slides. Space key steps through\r\n\t// all slides (both horizontal and vertical).\r\n\t//\r\n\t// \"linear\"\r\n\t// Removes the up/down arrows. Left/right arrows step through all\r\n\t// slides (both horizontal and vertical).\r\n\t//\r\n\t// \"grid\"\r\n\t// When this is enabled, stepping left/right from a vertical stack\r\n\t// to an adjacent vertical stack will land you at the same vertical\r\n\t// index.\r\n\t//\r\n\t// Consider a deck with six slides ordered in two vertical stacks:\r\n\t// 1.1    2.1\r\n\t// 1.2    2.2\r\n\t// 1.3    2.3\r\n\t//\r\n\t// If you're on slide 1.3 and navigate right, you will normally move\r\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\r\n\t// from 1.3 -> 2.3.\r\n\tnavigationMode: 'default',\r\n\r\n\t// Randomizes the order of slides each time the presentation loads\r\n\tshuffle: false,\r\n\r\n\t// Turns fragments on and off globally\r\n\tfragments: true,\r\n\r\n\t// Flags whether to include the current fragment in the URL,\r\n\t// so that reloading brings you to the same fragment position\r\n\tfragmentInURL: true,\r\n\r\n\t// Flags if the presentation is running in an embedded mode,\r\n\t// i.e. contained within a limited portion of the screen\r\n\tembedded: false,\r\n\r\n\t// Flags if we should show a help overlay when the question-mark\r\n\t// key is pressed\r\n\thelp: true,\r\n\r\n\t// Flags if it should be possible to pause the presentation (blackout)\r\n\tpause: true,\r\n\r\n\t// Flags if speaker notes should be visible to all viewers\r\n\tshowNotes: false,\r\n\r\n\t// Global override for autolaying embedded media (video/audio/iframe)\r\n\t// - null:   Media will only autoplay if data-autoplay is present\r\n\t// - true:   All media will autoplay, regardless of individual setting\r\n\t// - false:  No media will autoplay, regardless of individual setting\r\n\tautoPlayMedia: null,\r\n\r\n\t// Global override for preloading lazy-loaded iframes\r\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\r\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\r\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\r\n\t// - false:  All iframes with data-src will be loaded only when visible\r\n\tpreloadIframes: null,\r\n\r\n\t// Can be used to globally disable auto-animation\r\n\tautoAnimate: true,\r\n\r\n\t// Optionally provide a custom element matcher that will be\r\n\t// used to dictate which elements we can animate between.\r\n\tautoAnimateMatcher: null,\r\n\r\n\t// Default settings for our auto-animate transitions, can be\r\n\t// overridden per-slide or per-element via data arguments\r\n\tautoAnimateEasing: 'ease',\r\n\tautoAnimateDuration: 1.0,\r\n\tautoAnimateUnmatched: true,\r\n\r\n\t// CSS properties that can be auto-animated. Position & scale\r\n\t// is matched separately so there's no need to include styles\r\n\t// like top/right/bottom/left, width/height or margin.\r\n\tautoAnimateStyles: [\r\n\t\t'opacity',\r\n\t\t'color',\r\n\t\t'background-color',\r\n\t\t'padding',\r\n\t\t'font-size',\r\n\t\t'line-height',\r\n\t\t'letter-spacing',\r\n\t\t'border-width',\r\n\t\t'border-color',\r\n\t\t'border-radius',\r\n\t\t'outline',\r\n\t\t'outline-offset'\r\n\t],\r\n\r\n\t// Controls automatic progression to the next slide\r\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\r\n\t//           is present on the current slide or fragment\r\n\t// - 1+:     All slides will progress automatically at the given interval\r\n\t// - false:  No auto-sliding, even if data-autoslide is present\r\n\tautoSlide: 0,\r\n\r\n\t// Stop auto-sliding after user input\r\n\tautoSlideStoppable: true,\r\n\r\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\r\n\tautoSlideMethod: null,\r\n\r\n\t// Specify the average time in seconds that you think you will spend\r\n\t// presenting each slide. This is used to show a pacing timer in the\r\n\t// speaker view\r\n\tdefaultTiming: null,\r\n\r\n\t// Enable slide navigation via mouse wheel\r\n\tmouseWheel: false,\r\n\r\n\t// Opens links in an iframe preview overlay\r\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\r\n\t// individually\r\n\tpreviewLinks: false,\r\n\r\n\t// Exposes the reveal.js API through window.postMessage\r\n\tpostMessage: true,\r\n\r\n\t// Dispatches all reveal.js events to the parent window through postMessage\r\n\tpostMessageEvents: false,\r\n\r\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\r\n\tfocusBodyOnPageVisibilityChange: true,\r\n\r\n\t// Transition style\r\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\r\n\r\n\t// Transition speed\r\n\ttransitionSpeed: 'default', // default/fast/slow\r\n\r\n\t// Transition style for full page slide backgrounds\r\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\r\n\r\n\t// Parallax background image\r\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\r\n\r\n\t// Parallax background size\r\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\r\n\r\n\t// Parallax background repeat\r\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\r\n\r\n\t// Parallax background position\r\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\r\n\r\n\t// Amount of pixels to move the parallax background per slide step\r\n\tparallaxBackgroundHorizontal: null,\r\n\tparallaxBackgroundVertical: null,\r\n\r\n\t// The maximum number of pages a single slide can expand onto when printing\r\n\t// to PDF, unlimited by default\r\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\r\n\r\n\t// Prints each fragment on a separate slide\r\n\tpdfSeparateFragments: true,\r\n\r\n\t// Offset used to reduce the height of content within exported PDF pages.\r\n\t// This exists to account for environment differences based on how you\r\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\r\n\t// on precisely the total height of the document whereas in-browser\r\n\t// printing has to end one pixel before.\r\n\tpdfPageHeightOffset: -1,\r\n\r\n\t// Number of slides away from the current that are visible\r\n\tviewDistance: 3,\r\n\r\n\t// Number of slides away from the current that are visible on mobile\r\n\t// devices. It is advisable to set this to a lower number than\r\n\t// viewDistance in order to save resources.\r\n\tmobileViewDistance: 2,\r\n\r\n\t// The display mode that will be used to show slides\r\n\tdisplay: 'block',\r\n\r\n\t// Hide cursor if inactive\r\n\thideInactiveCursor: true,\r\n\r\n\t// Time before the cursor is hidden (in ms)\r\n\thideCursorTime: 5000,\r\n\r\n\t// Script dependencies to load\r\n\tdependencies: [],\r\n\r\n\t// Plugin objects to register and use for this presentation\r\n\tplugins: []\r\n\r\n}","import SlideContent from './controllers/slidecontent.js'\r\nimport SlideNumber from './controllers/slidenumber.js'\r\nimport Backgrounds from './controllers/backgrounds.js'\r\nimport AutoAnimate from './controllers/autoanimate.js'\r\nimport Fragments from './controllers/fragments.js'\r\nimport Overview from './controllers/overview.js'\r\nimport Keyboard from './controllers/keyboard.js'\r\nimport Location from './controllers/location.js'\r\nimport Controls from './controllers/controls.js'\r\nimport Progress from './controllers/progress.js'\r\nimport Pointer from './controllers/pointer.js'\r\nimport Plugins from './controllers/plugins.js'\r\nimport Print from './controllers/print.js'\r\nimport Touch from './controllers/touch.js'\r\nimport Focus from './controllers/focus.js'\r\nimport Notes from './controllers/notes.js'\r\nimport Playback from './components/playback.js'\r\nimport defaultConfig from './config.js'\r\nimport * as Util from './utils/util.js'\r\nimport * as Device from './utils/device.js'\r\nimport {\r\n\tSLIDES_SELECTOR,\r\n\tHORIZONTAL_SLIDES_SELECTOR,\r\n\tVERTICAL_SLIDES_SELECTOR,\r\n\tPOST_MESSAGE_METHOD_BLACKLIST\r\n} from './utils/constants.js'\r\n\r\n// The reveal.js version\r\nexport const VERSION = '4.0.0';\r\n\r\n/**\r\n * reveal.js\r\n * https://revealjs.com\r\n * MIT licensed\r\n *\r\n * Copyright (C) 2020 Hakim El Hattab, https://hakim.se\r\n */\r\nexport default function( revealElement, options ) {\r\n\r\n\t// Support initialization with no args, one arg\r\n\t// [options] or two args [revealElement, options]\r\n\tif( arguments.length < 2 ) {\r\n\t\toptions = arguments[0];\r\n\t\trevealElement = document.querySelector( '.reveal' );\r\n\t}\r\n\r\n\tconst Reveal = {};\r\n\r\n\t// Configuration defaults, can be overridden at initialization time\r\n\tlet config,\r\n\r\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\r\n\t\tready = false,\r\n\r\n\t\t// The horizontal and vertical index of the currently active slide\r\n\t\tindexh,\r\n\t\tindexv,\r\n\r\n\t\t// The previous and current slide HTML elements\r\n\t\tpreviousSlide,\r\n\t\tcurrentSlide,\r\n\r\n\t\t// Remember which directions that the user has navigated towards\r\n\t\tnavigationHistory = {\r\n\t\t\thasNavigatedHorizontally: false,\r\n\t\t\thasNavigatedVertically: false\r\n\t\t},\r\n\r\n\t\t// Slides may have a data-state attribute which we pick up and apply\r\n\t\t// as a class to the body. This list contains the combined state of\r\n\t\t// all current slides.\r\n\t\tstate = [],\r\n\r\n\t\t// The current scale of the presentation (see width/height config)\r\n\t\tscale = 1,\r\n\r\n\t\t// CSS transform that is currently applied to the slides container,\r\n\t\t// split into two groups\r\n\t\tslidesTransform = { layout: '', overview: '' },\r\n\r\n\t\t// Cached references to DOM elements\r\n\t\tdom = {},\r\n\r\n\t\t// Flags if the interaction event listeners are bound\r\n\t\teventsAreBound = false,\r\n\r\n\t\t// The current slide transition state; idle or running\r\n\t\ttransition = 'idle',\r\n\r\n\t\t// The current auto-slide duration\r\n\t\tautoSlide = 0,\r\n\r\n\t\t// Auto slide properties\r\n\t\tautoSlidePlayer,\r\n\t\tautoSlideTimeout = 0,\r\n\t\tautoSlideStartTime = -1,\r\n\t\tautoSlidePaused = false,\r\n\r\n\t\t// Controllers for different aspects of our presentation. They're\r\n\t\t// all given direct references to this Reveal instance since there\r\n\t\t// may be multiple presentations running in parallel.\r\n\t\tslideContent = new SlideContent( Reveal ),\r\n\t\tslideNumber = new SlideNumber( Reveal ),\r\n\t\tautoAnimate = new AutoAnimate( Reveal ),\r\n\t\tbackgrounds = new Backgrounds( Reveal ),\r\n\t\tfragments = new Fragments( Reveal ),\r\n\t\toverview = new Overview( Reveal ),\r\n\t\tkeyboard = new Keyboard( Reveal ),\r\n\t\tlocation = new Location( Reveal ),\r\n\t\tcontrols = new Controls( Reveal ),\r\n\t\tprogress = new Progress( Reveal ),\r\n\t\tpointer = new Pointer( Reveal ),\r\n\t\tplugins = new Plugins( Reveal ),\r\n\t\tprint = new Print( Reveal ),\r\n\t\tfocus = new Focus( Reveal ),\r\n\t\ttouch = new Touch( Reveal ),\r\n\t\tnotes = new Notes( Reveal );\r\n\r\n\t/**\r\n\t * Starts up the presentation.\r\n\t */\r\n\tfunction initialize( initOptions ) {\r\n\r\n\t\t// Cache references to key DOM elements\r\n\t\tdom.wrapper = revealElement;\r\n\t\tdom.slides = revealElement.querySelector( '.slides' );\r\n\r\n\t\t// Compose our config object\r\n\t\tconfig = { ...defaultConfig, ...options, ...initOptions, ...Util.getQueryHash() };\r\n\r\n\t\tsetViewport();\r\n\r\n\t\t// Force a layout when the whole page, incl fonts, has loaded\r\n\t\twindow.addEventListener( 'load', layout, false );\r\n\r\n\t\t// Register plugins and load dependencies, then move on to #start()\r\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\r\n\r\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Encase the presentation in a reveal.js viewport. The\r\n\t * extent of the viewport differs based on configuration.\r\n\t */\r\n\tfunction setViewport() {\r\n\r\n\t\t// Embedded decks use the reveal element as their viewport\r\n\t\tif( config.embedded === true ) {\r\n\t\t\tdom.viewport = revealElement.closest( '.reveal-viewport' ) || revealElement;\r\n\t\t}\r\n\t\t// Full-page decks use the body as their viewport\r\n\t\telse {\r\n\t\t\tdom.viewport = document.body;\r\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\r\n\t\t}\r\n\r\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Starts up reveal.js by binding input events and navigating\r\n\t * to the current URL deeplink if there is one.\r\n\t */\r\n\tfunction start() {\r\n\r\n\t\tready = true;\r\n\r\n\t\t// Make sure we've got all the DOM elements we need\r\n\t\tsetupDOM();\r\n\r\n\t\t// Listen to messages posted to this window\r\n\t\tsetupPostMessage();\r\n\r\n\t\t// Prevent the slides from being scrolled out of view\r\n\t\tsetupScrollPrevention();\r\n\r\n\t\t// Resets all vertical slides so that only the first is visible\r\n\t\tresetVerticalSlides();\r\n\r\n\t\t// Updates the presentation to match the current configuration values\r\n\t\tconfigure();\r\n\r\n\t\t// Read the initial hash\r\n\t\tlocation.readURL();\r\n\r\n\t\t// Create slide backgrounds\r\n\t\tbackgrounds.update( true );\r\n\r\n\t\t// Notify listeners that the presentation is ready but use a 1ms\r\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\r\n\t\tsetTimeout( () => {\r\n\t\t\t// Enable transitions now that we're loaded\r\n\t\t\tdom.slides.classList.remove( 'no-transition' );\r\n\r\n\t\t\tdom.wrapper.classList.add( 'ready' );\r\n\r\n\t\t\tdispatchEvent({\r\n\t\t\t\ttype: 'ready',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tindexh,\r\n\t\t\t\t\tindexv,\r\n\t\t\t\t\tcurrentSlide\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}, 1 );\r\n\r\n\t\t// Special setup and config is required when printing to PDF\r\n\t\tif( print.isPrintingPDF() ) {\r\n\t\t\tremoveEventListeners();\r\n\r\n\t\t\t// The document needs to have loaded for the PDF layout\r\n\t\t\t// measurements to be accurate\r\n\t\t\tif( document.readyState === 'complete' ) {\r\n\t\t\t\tprint.setupPDF();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twindow.addEventListener( 'load', () => {\r\n\t\t\t\t\tprint.setupPDF();\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finds and stores references to DOM elements which are\r\n\t * required by the presentation. If a required element is\r\n\t * not found, it is created.\r\n\t */\r\n\tfunction setupDOM() {\r\n\r\n\t\t// Prevent transitions while we're loading\r\n\t\tdom.slides.classList.add( 'no-transition' );\r\n\r\n\t\tif( Device.isMobile ) {\r\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\r\n\t\t}\r\n\r\n\t\tbackgrounds.render();\r\n\t\tslideNumber.render();\r\n\t\tcontrols.render();\r\n\t\tprogress.render();\r\n\t\tnotes.render();\r\n\r\n\t\t// Overlay graphic which is displayed during the paused mode\r\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\r\n\r\n\t\tdom.statusElement = createStatusElement();\r\n\r\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a hidden div with role aria-live to announce the\r\n\t * current slide content. Hide the div off-screen to make it\r\n\t * available only to Assistive Technologies.\r\n\t *\r\n\t * @return {HTMLElement}\r\n\t */\r\n\tfunction createStatusElement() {\r\n\r\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\r\n\t\tif( !statusElement ) {\r\n\t\t\tstatusElement = document.createElement( 'div' );\r\n\t\t\tstatusElement.style.position = 'absolute';\r\n\t\t\tstatusElement.style.height = '1px';\r\n\t\t\tstatusElement.style.width = '1px';\r\n\t\t\tstatusElement.style.overflow = 'hidden';\r\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\r\n\t\t\tstatusElement.classList.add( 'aria-status' );\r\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\r\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\r\n\t\t\tdom.wrapper.appendChild( statusElement );\r\n\t\t}\r\n\t\treturn statusElement;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Announces the given text to screen readers.\r\n\t */\r\n\tfunction announceStatus( value ) {\r\n\r\n\t\tdom.statusElement.textContent = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the given HTML element into a string of text\r\n\t * that can be announced to a screen reader. Hidden\r\n\t * elements are excluded.\r\n\t */\r\n\tfunction getStatusText( node ) {\r\n\r\n\t\tlet text = '';\r\n\r\n\t\t// Text node\r\n\t\tif( node.nodeType === 3 ) {\r\n\t\t\ttext += node.textContent;\r\n\t\t}\r\n\t\t// Element node\r\n\t\telse if( node.nodeType === 1 ) {\r\n\r\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\r\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\r\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\r\n\r\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\r\n\t\t\t\t\ttext += getStatusText( child );\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\ttext = text.trim();\r\n\r\n\t\treturn text === '' ? '' : text + ' ';\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * This is an unfortunate necessity. Some actions – such as\r\n\t * an input field being focused in an iframe or using the\r\n\t * keyboard to expand text selection beyond the bounds of\r\n\t * a slide – can trigger our content to be pushed out of view.\r\n\t * This scrolling can not be prevented by hiding overflow in\r\n\t * CSS (we already do) so we have to resort to repeatedly\r\n\t * checking if the slides have been offset :(\r\n\t */\r\n\tfunction setupScrollPrevention() {\r\n\r\n\t\tsetInterval( () => {\r\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\r\n\t\t\t\tdom.wrapper.scrollTop = 0;\r\n\t\t\t\tdom.wrapper.scrollLeft = 0;\r\n\t\t\t}\r\n\t\t}, 1000 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a listener to postMessage events, this makes it\r\n\t * possible to call all reveal.js API methods from another\r\n\t * window. For example:\r\n\t *\r\n\t * revealWindow.postMessage( JSON.stringify({\r\n\t *   method: 'slide',\r\n\t *   args: [ 2 ]\r\n\t * }), '*' );\r\n\t */\r\n\tfunction setupPostMessage() {\r\n\r\n\t\tif( config.postMessage ) {\r\n\t\t\twindow.addEventListener( 'message', event => {\r\n\t\t\t\tlet data = event.data;\r\n\r\n\t\t\t\t// Make sure we're dealing with JSON\r\n\t\t\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\r\n\t\t\t\t\tdata = JSON.parse( data );\r\n\r\n\t\t\t\t\t// Check if the requested method can be found\r\n\t\t\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\r\n\r\n\t\t\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\r\n\r\n\t\t\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\r\n\r\n\t\t\t\t\t\t\t// Dispatch a postMessage event with the returned value from\r\n\t\t\t\t\t\t\t// our method invocation for getter functions\r\n\t\t\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the configuration settings from the config\r\n\t * object. May be called multiple times.\r\n\t *\r\n\t * @param {object} options\r\n\t */\r\n\tfunction configure( options ) {\r\n\r\n\t\tconst oldConfig = { ...config }\r\n\r\n\t\t// New config options may be passed when this method\r\n\t\t// is invoked through the API after initialization\r\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\r\n\r\n\t\t// Abort if reveal.js hasn't finished loading, config\r\n\t\t// changes will be applied automatically once ready\r\n\t\tif( Reveal.isReady() ===  false ) return;\r\n\r\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\r\n\r\n\t\t// The transition is added as a class on the .reveal element\r\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\r\n\t\tdom.wrapper.classList.add( config.transition );\r\n\r\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\r\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\r\n\r\n\t\tif( config.shuffle ) {\r\n\t\t\tshuffle();\r\n\t\t}\r\n\r\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\r\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\r\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\r\n\r\n\t\t// Exit the paused mode if it was configured off\r\n\t\tif( config.pause === false ) {\r\n\t\t\tresume();\r\n\t\t}\r\n\r\n\t\t// Iframe link previews\r\n\t\tif( config.previewLinks ) {\r\n\t\t\tenablePreviewLinks();\r\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdisablePreviewLinks();\r\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\r\n\t\t}\r\n\r\n\t\t// Reset all changes made by auto-animations\r\n\t\tautoAnimate.reset();\r\n\r\n\t\t// Remove existing auto-slide controls\r\n\t\tif( autoSlidePlayer ) {\r\n\t\t\tautoSlidePlayer.destroy();\r\n\t\t\tautoSlidePlayer = null;\r\n\t\t}\r\n\r\n\t\t// Generate auto-slide controls if needed\r\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\r\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\r\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\r\n\t\t\t} );\r\n\r\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\r\n\t\t\tautoSlidePaused = false;\r\n\t\t}\r\n\r\n\t\t// Add the navigation mode to the DOM so we can adjust styling\r\n\t\tif( config.navigationMode !== 'default' ) {\r\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\r\n\t\t}\r\n\r\n\t\tnotes.configure( config, oldConfig );\r\n\t\tfocus.configure( config, oldConfig );\r\n\t\tpointer.configure( config, oldConfig );\r\n\t\tcontrols.configure( config, oldConfig );\r\n\t\tprogress.configure( config, oldConfig );\r\n\t\tkeyboard.configure( config, oldConfig );\r\n\t\tfragments.configure( config, oldConfig );\r\n\t\tslideNumber.configure( config, oldConfig );\r\n\r\n\t\tsync();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Binds all event listeners.\r\n\t */\r\n\tfunction addEventListeners() {\r\n\r\n\t\teventsAreBound = true;\r\n\r\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\r\n\r\n\t\tif( config.touch ) touch.bind();\r\n\t\tif( config.keyboard ) keyboard.bind();\r\n\t\tif( config.progress ) progress.bind();\r\n\t\tif( config.respondToHashChanges ) location.bind();\r\n\t\tcontrols.bind();\r\n\t\tfocus.bind();\r\n\r\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\r\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\r\n\r\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\r\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unbinds all event listeners.\r\n\t */\r\n\tfunction removeEventListeners() {\r\n\r\n\t\teventsAreBound = false;\r\n\r\n\t\ttouch.unbind();\r\n\t\tfocus.unbind();\r\n\t\tkeyboard.unbind();\r\n\t\tcontrols.unbind();\r\n\t\tprogress.unbind();\r\n\t\tlocation.unbind();\r\n\r\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\r\n\r\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\r\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a listener to one of our custom reveal.js events,\r\n\t * like slidechanged.\r\n\t */\r\n\tfunction on( type, listener, useCapture ) {\r\n\r\n\t\trevealElement.addEventListener( type, listener, useCapture );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unsubscribes from a reveal.js event.\r\n\t */\r\n\tfunction off( type, listener, useCapture ) {\r\n\r\n\t\trevealElement.removeEventListener( type, listener, useCapture );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies CSS transforms to the slides container. The container\r\n\t * is transformed from two separate sources: layout and the overview\r\n\t * mode.\r\n\t *\r\n\t * @param {object} transforms\r\n\t */\r\n\tfunction transformSlides( transforms ) {\r\n\r\n\t\t// Pick up new transforms from arguments\r\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\r\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\r\n\r\n\t\t// Apply the transforms to the slides container\r\n\t\tif( slidesTransform.layout ) {\r\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches an event of the specified type from the\r\n\t * reveal DOM element.\r\n\t */\r\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\r\n\r\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\r\n\t\tevent.initEvent( type, bubbles, true );\r\n\t\tUtil.extend( event, data );\r\n\t\ttarget.dispatchEvent( event );\r\n\r\n\t\tif( target === dom.wrapper ) {\r\n\t\t\t// If we're in an iframe, post each reveal.js event to the\r\n\t\t\t// parent window. Used by the notes plugin\r\n\t\t\tdispatchPostMessage( type );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatched a postMessage of the given type from our window.\r\n\t */\r\n\tfunction dispatchPostMessage( type, data ) {\r\n\r\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\r\n\t\t\tlet message = {\r\n\t\t\t\tnamespace: 'reveal',\r\n\t\t\t\teventName: type,\r\n\t\t\t\tstate: getState()\r\n\t\t\t};\r\n\r\n\t\t\tUtil.extend( message, data );\r\n\r\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Bind preview frame links.\r\n\t *\r\n\t * @param {string} [selector=a] - selector for anchors\r\n\t */\r\n\tfunction enablePreviewLinks( selector = 'a' ) {\r\n\r\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\r\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\r\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unbind preview frame links.\r\n\t */\r\n\tfunction disablePreviewLinks( selector = 'a' ) {\r\n\r\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\r\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\r\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a preview window for the target URL.\r\n\t *\r\n\t * @param {string} url - url for preview iframe src\r\n\t */\r\n\tfunction showPreview( url ) {\r\n\r\n\t\tcloseOverlay();\r\n\r\n\t\tdom.overlay = document.createElement( 'div' );\r\n\t\tdom.overlay.classList.add( 'overlay' );\r\n\t\tdom.overlay.classList.add( 'overlay-preview' );\r\n\t\tdom.wrapper.appendChild( dom.overlay );\r\n\r\n\t\tdom.overlay.innerHTML =\r\n\t\t\t`<header>\r\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\r\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\r\n\t\t\t</header>\r\n\t\t\t<div class=\"spinner\"></div>\r\n\t\t\t<div class=\"viewport\">\r\n\t\t\t\t<iframe src=\"${url}\"></iframe>\r\n\t\t\t\t<small class=\"viewport-inner\">\r\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\r\n\t\t\t\t</small>\r\n\t\t\t</div>`;\r\n\r\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\r\n\t\t\tdom.overlay.classList.add( 'loaded' );\r\n\t\t}, false );\r\n\r\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\r\n\t\t\tcloseOverlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}, false );\r\n\r\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\r\n\t\t\tcloseOverlay();\r\n\t\t}, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Open or close help overlay window.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which overrides the\r\n\t * toggle logic and forcibly sets the desired state. True means\r\n\t * help is open, false means it's closed.\r\n\t */\r\n\tfunction toggleHelp( override ){\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? showHelp() : closeOverlay();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif( dom.overlay ) {\r\n\t\t\t\tcloseOverlay();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshowHelp();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Opens an overlay window with help material.\r\n\t */\r\n\tfunction showHelp() {\r\n\r\n\t\tif( config.help ) {\r\n\r\n\t\t\tcloseOverlay();\r\n\r\n\t\t\tdom.overlay = document.createElement( 'div' );\r\n\t\t\tdom.overlay.classList.add( 'overlay' );\r\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\r\n\t\t\tdom.wrapper.appendChild( dom.overlay );\r\n\r\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\r\n\r\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\r\n\t\t\t\tbindings = keyboard.getBindings();\r\n\r\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\r\n\t\t\tfor( let key in shortcuts ) {\r\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\r\n\t\t\t}\r\n\r\n\t\t\t// Add custom key bindings that have associated descriptions\r\n\t\t\tfor( let binding in bindings ) {\r\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\r\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\thtml += '</table>';\r\n\r\n\t\t\tdom.overlay.innerHTML = `\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\r\n\t\t\t\t</header>\r\n\t\t\t\t<div class=\"viewport\">\r\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\r\n\t\t\t\t</div>\r\n\t\t\t`;\r\n\r\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\r\n\t\t\t\tcloseOverlay();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Closes any currently open overlay.\r\n\t */\r\n\tfunction closeOverlay() {\r\n\r\n\t\tif( dom.overlay ) {\r\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\r\n\t\t\tdom.overlay = null;\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies JavaScript-controlled layout rules to the\r\n\t * presentation.\r\n\t */\r\n\tfunction layout() {\r\n\r\n\t\tif( dom.wrapper && !print.isPrintingPDF() ) {\r\n\r\n\t\t\tif( !config.disableLayout ) {\r\n\r\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\r\n\t\t\t\t// viewport which leads to part of the presentation being\r\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\r\n\t\t\t\t// property where 100x adds up to the correct height.\r\n\t\t\t\t//\r\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\r\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\r\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst size = getComputedSlideSize();\r\n\r\n\t\t\t\tconst oldScale = scale;\r\n\r\n\t\t\t\t// Layout the contents of the slides\r\n\t\t\t\tlayoutSlideContents( config.width, config.height );\r\n\r\n\t\t\t\tdom.slides.style.width = size.width + 'px';\r\n\t\t\t\tdom.slides.style.height = size.height + 'px';\r\n\r\n\t\t\t\t// Determine scale of content to fit within available space\r\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\r\n\r\n\t\t\t\t// Respect max/min scale settings\r\n\t\t\t\tscale = Math.max( scale, config.minScale );\r\n\t\t\t\tscale = Math.min( scale, config.maxScale );\r\n\r\n\t\t\t\t// Don't apply any scaling styles if scale is 1\r\n\t\t\t\tif( scale === 1 ) {\r\n\t\t\t\t\tdom.slides.style.zoom = '';\r\n\t\t\t\t\tdom.slides.style.left = '';\r\n\t\t\t\t\tdom.slides.style.top = '';\r\n\t\t\t\t\tdom.slides.style.bottom = '';\r\n\t\t\t\t\tdom.slides.style.right = '';\r\n\t\t\t\t\ttransformSlides( { layout: '' } );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Zoom Scaling\r\n\t\t\t\t\t// Content remains crisp no matter how much we scale. Side\r\n\t\t\t\t\t// effects are minor differences in text layout and iframe\r\n\t\t\t\t\t// viewports changing size. A 200x200 iframe viewport in a\r\n\t\t\t\t\t// 2x zoomed presentation ends up having a 400x400 viewport.\r\n\t\t\t\t\tif( scale > 1 && Device.supportsZoom && window.devicePixelRatio < 2 ) {\r\n\t\t\t\t\t\tdom.slides.style.zoom = scale;\r\n\t\t\t\t\t\tdom.slides.style.left = '';\r\n\t\t\t\t\t\tdom.slides.style.top = '';\r\n\t\t\t\t\t\tdom.slides.style.bottom = '';\r\n\t\t\t\t\t\tdom.slides.style.right = '';\r\n\t\t\t\t\t\ttransformSlides( { layout: '' } );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Transform Scaling\r\n\t\t\t\t\t// Content layout remains the exact same when scaled up.\r\n\t\t\t\t\t// Side effect is content becoming blurred, especially with\r\n\t\t\t\t\t// high scale values on ldpi screens.\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdom.slides.style.zoom = '';\r\n\t\t\t\t\t\tdom.slides.style.left = '50%';\r\n\t\t\t\t\t\tdom.slides.style.top = '50%';\r\n\t\t\t\t\t\tdom.slides.style.bottom = 'auto';\r\n\t\t\t\t\t\tdom.slides.style.right = 'auto';\r\n\t\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Select all slides, vertical and horizontal\r\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\r\n\r\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\r\n\t\t\t\t\tconst slide = slides[ i ];\r\n\r\n\t\t\t\t\t// Don't bother updating invisible slides\r\n\t\t\t\t\tif( slide.style.display === 'none' ) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( config.center || slide.classList.contains( 'center' ) ) {\r\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\r\n\t\t\t\t\t\t// children will be\r\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\r\n\t\t\t\t\t\t\tslide.style.top = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tslide.style.top = '';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( oldScale !== scale ) {\r\n\t\t\t\t\tdispatchEvent({\r\n\t\t\t\t\t\ttype: 'resize',\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\toldScale,\r\n\t\t\t\t\t\t\tscale,\r\n\t\t\t\t\t\t\tsize\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tprogress.update();\r\n\t\t\tbackgrounds.updateParallax();\r\n\r\n\t\t\tif( overview.isActive() ) {\r\n\t\t\t\toverview.update();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies layout logic to the contents of all slides in\r\n\t * the presentation.\r\n\t *\r\n\t * @param {string|number} width\r\n\t * @param {string|number} height\r\n\t */\r\n\tfunction layoutSlideContents( width, height ) {\r\n\r\n\t\t// Handle sizing of elements with the 'r-stretch' class\r\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\r\n\r\n\t\t\t// Determine how much vertical space we can use\r\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\r\n\r\n\t\t\t// Consider the aspect ratio of media elements\r\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\r\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\r\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\r\n\r\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\r\n\r\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\r\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telement.style.width = width + 'px';\r\n\t\t\t\telement.style.height = remainingHeight + 'px';\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the computed pixel size of our slides. These\r\n\t * values are based on the width and height configuration\r\n\t * options.\r\n\t *\r\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\r\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\r\n\t */\r\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\r\n\r\n\t\tconst size = {\r\n\t\t\t// Slide size\r\n\t\t\twidth: config.width,\r\n\t\t\theight: config.height,\r\n\r\n\t\t\t// Presentation size\r\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\r\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\r\n\t\t};\r\n\r\n\t\t// Reduce available space by margin\r\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\r\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\r\n\r\n\t\t// Slide width may be a percentage of available width\r\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\r\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\r\n\t\t}\r\n\r\n\t\t// Slide height may be a percentage of available height\r\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\r\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\r\n\t\t}\r\n\r\n\t\treturn size;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Stores the vertical index of a stack so that the same\r\n\t * vertical slide can be selected when navigating to and\r\n\t * from the stack.\r\n\t *\r\n\t * @param {HTMLElement} stack The vertical stack element\r\n\t * @param {string|number} [v=0] Index to memorize\r\n\t */\r\n\tfunction setPreviousVerticalIndex( stack, v ) {\r\n\r\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\r\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the vertical index which was stored using\r\n\t * #setPreviousVerticalIndex() or 0 if no previous index\r\n\t * exists.\r\n\t *\r\n\t * @param {HTMLElement} stack The vertical stack element\r\n\t */\r\n\tfunction getPreviousVerticalIndex( stack ) {\r\n\r\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\r\n\t\t\t// Prefer manually defined start-indexv\r\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\r\n\r\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the current or specified slide is vertical\r\n\t * (nested within another slide).\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\r\n\t * orientation of\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isVerticalSlide( slide = currentSlide ) {\r\n\r\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're on the last slide in the current\r\n\t * vertical stack.\r\n\t */\r\n\tfunction isLastVerticalSlide() {\r\n\r\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\r\n\t\t\t// Does this slide have a next sibling?\r\n\t\t\tif( currentSlide.nextElementSibling ) return false;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're currently on the first slide in\r\n\t * the presentation.\r\n\t */\r\n\tfunction isFirstSlide() {\r\n\r\n\t\treturn indexh === 0 && indexv === 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're currently on the last slide in\r\n\t * the presenation. If the last slide is a stack, we only\r\n\t * consider this the last slide if it's at the end of the\r\n\t * stack.\r\n\t */\r\n\tfunction isLastSlide() {\r\n\r\n\t\tif( currentSlide ) {\r\n\t\t\t// Does this slide have a next sibling?\r\n\t\t\tif( currentSlide.nextElementSibling ) return false;\r\n\r\n\t\t\t// If it's vertical, does its parent have a next sibling?\r\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Enters the paused mode which fades everything on screen to\r\n\t * black.\r\n\t */\r\n\tfunction pause() {\r\n\r\n\t\tif( config.pause ) {\r\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\r\n\r\n\t\t\tcancelAutoSlide();\r\n\t\t\tdom.wrapper.classList.add( 'paused' );\r\n\r\n\t\t\tif( wasPaused === false ) {\r\n\t\t\t\tdispatchEvent({ type: 'paused' });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Exits from the paused mode.\r\n\t */\r\n\tfunction resume() {\r\n\r\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\r\n\t\tdom.wrapper.classList.remove( 'paused' );\r\n\r\n\t\tcueAutoSlide();\r\n\r\n\t\tif( wasPaused ) {\r\n\t\t\tdispatchEvent({ type: 'resumed' });\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the paused mode on and off.\r\n\t */\r\n\tfunction togglePause( override ) {\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? pause() : resume();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tisPaused() ? resume() : pause();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if we are currently in the paused mode.\r\n\t *\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isPaused() {\r\n\r\n\t\treturn dom.wrapper.classList.contains( 'paused' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the auto slide mode on and off.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which sets the desired state.\r\n\t * True means autoplay starts, false means it stops.\r\n\t */\r\n\r\n\tfunction toggleAutoSlide( override ) {\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the auto slide mode is currently on.\r\n\t *\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isAutoSliding() {\r\n\r\n\t\treturn !!( autoSlide && !autoSlidePaused );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Steps from the current point in the presentation to the\r\n\t * slide which matches the specified horizontal and vertical\r\n\t * indices.\r\n\t *\r\n\t * @param {number} [h=indexh] Horizontal index of the target slide\r\n\t * @param {number} [v=indexv] Vertical index of the target slide\r\n\t * @param {number} [f] Index of a fragment within the\r\n\t * target slide to activate\r\n\t * @param {number} [o] Origin for use in multimaster environments\r\n\t */\r\n\tfunction slide( h, v, f, o ) {\r\n\r\n\t\t// Remember where we were at before\r\n\t\tpreviousSlide = currentSlide;\r\n\r\n\t\t// Query all horizontal slides in the deck\r\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\r\n\r\n\t\t// Abort if there are no slides\r\n\t\tif( horizontalSlides.length === 0 ) return;\r\n\r\n\t\t// If no vertical index is specified and the upcoming slide is a\r\n\t\t// stack, resume at its previous vertical index\r\n\t\tif( v === undefined && !overview.isActive() ) {\r\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\r\n\t\t}\r\n\r\n\t\t// If we were on a vertical stack, remember what vertical index\r\n\t\t// it was on so we can resume at the same position when returning\r\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\r\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\r\n\t\t}\r\n\r\n\t\t// Remember the state before this slide\r\n\t\tconst stateBefore = state.concat();\r\n\r\n\t\t// Reset the state array\r\n\t\tstate.length = 0;\r\n\r\n\t\tlet indexhBefore = indexh || 0,\r\n\t\t\tindexvBefore = indexv || 0;\r\n\r\n\t\t// Activate and transition to the new slide\r\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\r\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\r\n\r\n\t\t// Dispatch an event if the slide changed\r\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\r\n\r\n\t\t// Ensure that the previous slide is never the same as the current\r\n\t\tif( !slideChanged ) previousSlide = null;\r\n\r\n\t\t// Find the current horizontal slide and any possible vertical slides\r\n\t\t// within it\r\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\r\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\r\n\r\n\t\t// Store references to the previous and current slides\r\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\r\n\r\n\t\tlet autoAnimateTransition = false;\r\n\r\n\t\t// Detect if we're moving between two auto-animated slides\r\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\r\n\r\n\t\t\t// If this is an auto-animated transition, we disable the\r\n\t\t\t// regular slide transition\r\n\t\t\t//\r\n\t\t\t// Note 20-03-2020:\r\n\t\t\t// This needs to happen before we update slide visibility,\r\n\t\t\t// otherwise transitions will still run in Safari.\r\n\t\t\tif( previousSlide.hasAttribute( 'data-auto-animate' ) && currentSlide.hasAttribute( 'data-auto-animate' ) ) {\r\n\t\t\t\tautoAnimateTransition = true;\r\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' );\r\n\t\t\t}\r\n\r\n\t\t\ttransition = 'running';\r\n\r\n\t\t}\r\n\r\n\t\t// Update the visibility of slides now that the indices have changed\r\n\t\tupdateSlidesVisibility();\r\n\r\n\t\tlayout();\r\n\r\n\t\t// Update the overview if it's currently active\r\n\t\tif( overview.isActive() ) {\r\n\t\t\toverview.update();\r\n\t\t}\r\n\r\n\t\t// Show fragment, if specified\r\n\t\tif( typeof f !== 'undefined' ) {\r\n\t\t\tfragments.goto( f );\r\n\t\t}\r\n\r\n\t\t// Solves an edge case where the previous slide maintains the\r\n\t\t// 'present' class when navigating between adjacent vertical\r\n\t\t// stacks\r\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\r\n\t\t\tpreviousSlide.classList.remove( 'present' );\r\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\r\n\r\n\t\t\t// Reset all slides upon navigate to home\r\n\t\t\tif( isFirstSlide() ) {\r\n\t\t\t\t// Launch async task\r\n\t\t\t\tsetTimeout( () => {\r\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\r\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\r\n\t\t\t\t\t} );\r\n\t\t\t\t}, 0 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Apply the new state\r\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\r\n\t\t\t// Check if this state existed on the previous slide. If it\r\n\t\t\t// did, we will avoid adding it repeatedly\r\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\r\n\t\t\t\tif( stateBefore[j] === state[i] ) {\r\n\t\t\t\t\tstateBefore.splice( j, 1 );\r\n\t\t\t\t\tcontinue stateLoop;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdom.viewport.classList.add( state[i] );\r\n\r\n\t\t\t// Dispatch custom event matching the state's name\r\n\t\t\tdispatchEvent({ type: state[i] });\r\n\t\t}\r\n\r\n\t\t// Clean up the remains of the previous state\r\n\t\twhile( stateBefore.length ) {\r\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\r\n\t\t}\r\n\r\n\t\tif( slideChanged ) {\r\n\t\t\tdispatchEvent({\r\n\t\t\t\ttype: 'slidechanged',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tindexh,\r\n\t\t\t\t\tindexv,\r\n\t\t\t\t\tpreviousSlide,\r\n\t\t\t\t\tcurrentSlide,\r\n\t\t\t\t\torigin: o\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Handle embedded content\r\n\t\tif( slideChanged || !previousSlide ) {\r\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\r\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\r\n\t\t}\r\n\r\n\t\t// Announce the current slide contents to screen readers\r\n\t\tannounceStatus( getStatusText( currentSlide ) );\r\n\r\n\t\tprogress.update();\r\n\t\tcontrols.update();\r\n\t\tnotes.update();\r\n\t\tbackgrounds.update();\r\n\t\tbackgrounds.updateParallax();\r\n\t\tslideNumber.update();\r\n\t\tfragments.update();\r\n\r\n\t\t// Update the URL hash\r\n\t\tlocation.writeURL();\r\n\r\n\t\tcueAutoSlide();\r\n\r\n\t\t// Auto-animation\r\n\t\tif( autoAnimateTransition ) {\r\n\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\r\n\t\t\t}, 0 );\r\n\r\n\t\t\tif( config.autoAnimate ) {\r\n\t\t\t\t// Run the auto-animation between our slides\r\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Syncs the presentation with the current DOM. Useful\r\n\t * when new slides or control elements are added or when\r\n\t * the configuration has changed.\r\n\t */\r\n\tfunction sync() {\r\n\r\n\t\t// Subscribe to input\r\n\t\tremoveEventListeners();\r\n\t\taddEventListeners();\r\n\r\n\t\t// Force a layout to make sure the current config is accounted for\r\n\t\tlayout();\r\n\r\n\t\t// Reflect the current autoSlide value\r\n\t\tautoSlide = config.autoSlide;\r\n\r\n\t\t// Start auto-sliding if it's enabled\r\n\t\tcueAutoSlide();\r\n\r\n\t\t// Re-create all slide backgrounds\r\n\t\tbackgrounds.create();\r\n\r\n\t\t// Write the current hash to the URL\r\n\t\tlocation.writeURL();\r\n\r\n\t\tfragments.sortAll();\r\n\r\n\t\tcontrols.update();\r\n\t\tprogress.update();\r\n\r\n\t\tupdateSlidesVisibility();\r\n\r\n\t\tnotes.update();\r\n\t\tnotes.updateVisibility();\r\n\t\tbackgrounds.update( true );\r\n\t\tslideNumber.update();\r\n\t\tslideContent.formatEmbeddedContent();\r\n\r\n\t\t// Start or stop embedded content depending on global config\r\n\t\tif( config.autoPlayMedia === false ) {\r\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\r\n\t\t}\r\n\r\n\t\tif( overview.isActive() ) {\r\n\t\t\toverview.layout();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates reveal.js to keep in sync with new slide attributes. For\r\n\t * example, if you add a new `data-background-image` you can call\r\n\t * this to have reveal.js render the new background image.\r\n\t *\r\n\t * Similar to #sync() but more efficient when you only need to\r\n\t * refresh a specific slide.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tfunction syncSlide( slide = currentSlide ) {\r\n\r\n\t\tbackgrounds.sync( slide );\r\n\t\tfragments.sync( slide );\r\n\r\n\t\tslideContent.load( slide );\r\n\r\n\t\tbackgrounds.update();\r\n\t\tnotes.update();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Resets all vertical slides so that only the first\r\n\t * is visible.\r\n\t */\r\n\tfunction resetVerticalSlides() {\r\n\r\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\r\n\r\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\r\n\r\n\t\t\t\tif( y > 0 ) {\r\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\r\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\r\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\r\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Randomly shuffles all slides in the deck.\r\n\t */\r\n\tfunction shuffle() {\r\n\r\n\t\tgetHorizontalSlides().forEach( ( slide, i, slides ) => {\r\n\r\n\t\t\t// Insert this slide next to another random slide. This may\r\n\t\t\t// cause the slide to insert before itself but that's fine.\r\n\t\t\tdom.slides.insertBefore( slide, slides[ Math.floor( Math.random() * slides.length ) ] );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates one dimension of slides by showing the slide\r\n\t * with the specified index.\r\n\t *\r\n\t * @param {string} selector A CSS selector that will fetch\r\n\t * the group of slides we are working with\r\n\t * @param {number} index The index of the slide that should be\r\n\t * shown\r\n\t *\r\n\t * @return {number} The index of the slide that is now shown,\r\n\t * might differ from the passed in index if it was out of\r\n\t * bounds.\r\n\t */\r\n\tfunction updateSlides( selector, index ) {\r\n\r\n\t\t// Select all slides and convert the NodeList result to\r\n\t\t// an array\r\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\r\n\t\t\tslidesLength = slides.length;\r\n\r\n\t\tlet printMode = print.isPrintingPDF();\r\n\r\n\t\tif( slidesLength ) {\r\n\r\n\t\t\t// Should the index loop?\r\n\t\t\tif( config.loop ) {\r\n\t\t\t\tindex %= slidesLength;\r\n\r\n\t\t\t\tif( index < 0 ) {\r\n\t\t\t\t\tindex = slidesLength + index;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Enforce max and minimum index bounds\r\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\r\n\r\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\r\n\t\t\t\tlet element = slides[i];\r\n\r\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\r\n\r\n\t\t\t\telement.classList.remove( 'past', 'present', 'future' );\r\n\r\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\r\n\t\t\t\telement.setAttribute( 'hidden', '' );\r\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\r\n\r\n\t\t\t\t// If this element contains vertical slides\r\n\t\t\t\tif( element.querySelector( 'section' ) ) {\r\n\t\t\t\t\telement.classList.add( 'stack' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\r\n\t\t\t\tif( printMode ) {\r\n\t\t\t\t\telement.classList.add( 'present' );\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( i < index ) {\r\n\t\t\t\t\t// Any element previous to index is given the 'past' class\r\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\r\n\r\n\t\t\t\t\tif( config.fragments ) {\r\n\t\t\t\t\t\t// Show all fragments in prior slides\r\n\t\t\t\t\t\tUtil.queryAll( element, '.fragment' ).forEach( fragment => {\r\n\t\t\t\t\t\t\tfragment.classList.add( 'visible' );\r\n\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( i > index ) {\r\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\r\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\r\n\r\n\t\t\t\t\tif( config.fragments ) {\r\n\t\t\t\t\t\t// Hide all fragments in future slides\r\n\t\t\t\t\t\tUtil.queryAll( element, '.fragment.visible' ).forEach( fragment => {\r\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet slide = slides[index];\r\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\r\n\r\n\t\t\t// Mark the current slide as present\r\n\t\t\tslide.classList.add( 'present' );\r\n\t\t\tslide.removeAttribute( 'hidden' );\r\n\t\t\tslide.removeAttribute( 'aria-hidden' );\r\n\r\n\t\t\tif( !wasPresent ) {\r\n\t\t\t\t// Dispatch an event indicating the slide is now visible\r\n\t\t\t\tdispatchEvent({\r\n\t\t\t\t\ttarget: slide,\r\n\t\t\t\t\ttype: 'visible',\r\n\t\t\t\t\tbubbles: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// If this slide has a state associated with it, add it\r\n\t\t\t// onto the current state of the deck\r\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\r\n\t\t\tif( slideState ) {\r\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Since there are no slides we can't be anywhere beyond the\r\n\t\t\t// zeroth index\r\n\t\t\tindex = 0;\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Optimization method; hide all slides that are far away\r\n\t * from the present slide.\r\n\t */\r\n\tfunction updateSlidesVisibility() {\r\n\r\n\t\t// Select all slides and convert the NodeList result to\r\n\t\t// an array\r\n\t\tlet horizontalSlides = getHorizontalSlides(),\r\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\r\n\t\t\tdistanceX,\r\n\t\t\tdistanceY;\r\n\r\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\r\n\r\n\t\t\t// The number of steps away from the present slide that will\r\n\t\t\t// be visible\r\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\r\n\r\n\t\t\t// Shorten the view distance on devices that typically have\r\n\t\t\t// less resources\r\n\t\t\tif( Device.isMobile ) {\r\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\r\n\t\t\t}\r\n\r\n\t\t\t// All slides need to be visible when exporting to PDF\r\n\t\t\tif( print.isPrintingPDF() ) {\r\n\t\t\t\tviewDistance = Number.MAX_VALUE;\r\n\t\t\t}\r\n\r\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\r\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\r\n\r\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\r\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\r\n\r\n\t\t\t\t// Determine how far away this slide is from the present\r\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\r\n\r\n\t\t\t\t// If the presentation is looped, distance should measure\r\n\t\t\t\t// 1 between the first and last slides\r\n\t\t\t\tif( config.loop ) {\r\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Show the horizontal slide if it's within the view distance\r\n\t\t\t\tif( distanceX < viewDistance ) {\r\n\t\t\t\t\tslideContent.load( horizontalSlide );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tslideContent.unload( horizontalSlide );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( verticalSlidesLength ) {\r\n\r\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\r\n\r\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\r\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\r\n\r\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\r\n\r\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\r\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\r\n\t\t\tif( hasVerticalSlides() ) {\r\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\r\n\t\t\t}\r\n\r\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\r\n\t\t\tif( hasHorizontalSlides() ) {\r\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Determine what available routes there are for navigation.\r\n\t *\r\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\r\n\t */\r\n\tfunction availableRoutes({ includeFragments = false } = {}) {\r\n\r\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\r\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\r\n\r\n\t\tlet routes = {\r\n\t\t\tleft: indexh > 0,\r\n\t\t\tright: indexh < horizontalSlides.length - 1,\r\n\t\t\tup: indexv > 0,\r\n\t\t\tdown: indexv < verticalSlides.length - 1\r\n\t\t};\r\n\r\n\t\t// Looped presentations can always be navigated as long as\r\n\t\t// there are slides available\r\n\t\tif( config.loop ) {\r\n\t\t\tif( horizontalSlides.length > 1 ) {\r\n\t\t\t\troutes.left = true;\r\n\t\t\t\troutes.right = true;\r\n\t\t\t}\r\n\r\n\t\t\tif( verticalSlides.length > 1 ) {\r\n\t\t\t\troutes.up = true;\r\n\t\t\t\troutes.down = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\r\n\t\t\troutes.right = routes.right || routes.down;\r\n\t\t\troutes.left = routes.left || routes.up;\r\n\t\t}\r\n\r\n\t\t// If includeFragments is set, a route will be considered\r\n\t\t// availalbe if either a slid OR fragment is available in\r\n\t\t// the given direction\r\n\t\tif( includeFragments === true ) {\r\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\r\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\r\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\r\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\r\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\r\n\t\t}\r\n\r\n\t\t// Reverse horizontal controls for rtl\r\n\t\tif( config.rtl ) {\r\n\t\t\tlet left = routes.left;\r\n\t\t\troutes.left = routes.right;\r\n\t\t\troutes.right = left;\r\n\t\t}\r\n\r\n\t\treturn routes;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of past slides. This can be used as a global\r\n\t * flattened index for slides.\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\r\n\t *\r\n\t * @return {number} Past slide count\r\n\t */\r\n\tfunction getSlidePastCount( slide = currentSlide ) {\r\n\r\n\t\tlet horizontalSlides = getHorizontalSlides();\r\n\r\n\t\t// The number of past slides\r\n\t\tlet pastCount = 0;\r\n\r\n\t\t// Step through all slides and count the past ones\r\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\r\n\r\n\t\t\tlet horizontalSlide = horizontalSlides[i];\r\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\r\n\r\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\r\n\r\n\t\t\t\t// Stop as soon as we arrive at the present\r\n\t\t\t\tif( verticalSlides[j] === slide ) {\r\n\t\t\t\t\tbreak mainLoop;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Don't count slides with the \"uncounted\" class\r\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\r\n\t\t\t\t\tpastCount++;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Stop as soon as we arrive at the present\r\n\t\t\tif( horizontalSlide === slide ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// Don't count the wrapping section for vertical slides and\r\n\t\t\t// slides marked as uncounted\r\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && !horizontalSlide.dataset.visibility !== 'uncounted' ) {\r\n\t\t\t\tpastCount++;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn pastCount;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a value ranging from 0-1 that represents\r\n\t * how far into the presentation we have navigated.\r\n\t *\r\n\t * @return {number}\r\n\t */\r\n\tfunction getProgress() {\r\n\r\n\t\t// The number of past and total slides\r\n\t\tlet totalCount = getTotalSlides();\r\n\t\tlet pastCount = getSlidePastCount();\r\n\r\n\t\tif( currentSlide ) {\r\n\r\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\r\n\r\n\t\t\t// If there are fragments in the current slide those should be\r\n\t\t\t// accounted for in the progress.\r\n\t\t\tif( allFragments.length > 0 ) {\r\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\r\n\r\n\t\t\t\t// This value represents how big a portion of the slide progress\r\n\t\t\t\t// that is made up by its fragments (0-1)\r\n\t\t\t\tlet fragmentWeight = 0.9;\r\n\r\n\t\t\t\t// Add fragment progress to the past slide count\r\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the h/v location and fragment of the current,\r\n\t * or specified, slide.\r\n\t *\r\n\t * @param {HTMLElement} [slide] If specified, the returned\r\n\t * index will be for this slide rather than the currently\r\n\t * active one\r\n\t *\r\n\t * @return {{h: number, v: number, f: number}}\r\n\t */\r\n\tfunction getIndices( slide ) {\r\n\r\n\t\t// By default, return the current indices\r\n\t\tlet h = indexh,\r\n\t\t\tv = indexv,\r\n\t\t\tf;\r\n\r\n\t\t// If a slide is specified, return the indices of that slide\r\n\t\tif( slide ) {\r\n\t\t\tlet isVertical = isVerticalSlide( slide );\r\n\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\r\n\r\n\t\t\t// Select all horizontal slides\r\n\t\t\tlet horizontalSlides = getHorizontalSlides();\r\n\r\n\t\t\t// Now that we know which the horizontal slide is, get its index\r\n\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\r\n\r\n\t\t\t// Assume we're not vertical\r\n\t\t\tv = undefined;\r\n\r\n\t\t\t// If this is a vertical slide, grab the vertical index\r\n\t\t\tif( isVertical ) {\r\n\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( !slide && currentSlide ) {\r\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\r\n\t\t\tif( hasFragments ) {\r\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\r\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\r\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { h, v, f };\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves all slides in this presentation.\r\n\t */\r\n\tfunction getSlides() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of all horizontal slides in the deck. Each\r\n\t * vertical stack is included as one horizontal slide in the\r\n\t * resulting array.\r\n\t */\r\n\tfunction getHorizontalSlides() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all vertical slides that exist within this deck.\r\n\t */\r\n\tfunction getVerticalSlides() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all vertical stacks (each stack can contain multiple slides).\r\n\t */\r\n\tfunction getVerticalStacks() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if there are at least two horizontal slides.\r\n\t */\r\n\tfunction hasHorizontalSlides() {\r\n\r\n\t\treturn getHorizontalSlides().length > 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if there are at least two vertical slides.\r\n\t */\r\n\tfunction hasVerticalSlides() {\r\n\r\n\t\treturn getVerticalSlides().length > 1;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects where each object represents the\r\n\t * attributes on its respective slide.\r\n\t */\r\n\tfunction getSlidesAttributes() {\r\n\r\n\t\treturn getSlides().map( slide => {\r\n\r\n\t\t\tlet attributes = {};\r\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\r\n\t\t\t\tlet attribute = slide.attributes[ i ];\r\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\r\n\t\t\t}\r\n\t\t\treturn attributes;\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the total number of slides in this presentation.\r\n\t *\r\n\t * @return {number}\r\n\t */\r\n\tfunction getTotalSlides() {\r\n\r\n\t\treturn getSlides().length;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the slide element matching the specified index.\r\n\t *\r\n\t * @return {HTMLElement}\r\n\t */\r\n\tfunction getSlide( x, y ) {\r\n\r\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\r\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\r\n\r\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\r\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\r\n\t\t}\r\n\r\n\t\treturn horizontalSlide;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the background element for the given slide.\r\n\t * All slides, even the ones with no background properties\r\n\t * defined, have a background element so as long as the\r\n\t * index is valid an element will be returned.\r\n\t *\r\n\t * @param {mixed} x Horizontal background index OR a slide\r\n\t * HTML element\r\n\t * @param {number} y Vertical background index\r\n\t * @return {(HTMLElement[]|*)}\r\n\t */\r\n\tfunction getSlideBackground( x, y ) {\r\n\r\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\r\n\t\tif( slide ) {\r\n\t\t\treturn slide.slideBackgroundElement;\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the current state of the presentation as\r\n\t * an object. This state can then be restored at any\r\n\t * time.\r\n\t *\r\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\r\n\t */\r\n\tfunction getState() {\r\n\r\n\t\tlet indices = getIndices();\r\n\r\n\t\treturn {\r\n\t\t\tindexh: indices.h,\r\n\t\t\tindexv: indices.v,\r\n\t\t\tindexf: indices.f,\r\n\t\t\tpaused: isPaused(),\r\n\t\t\toverview: overview.isActive()\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Restores the presentation to the given state.\r\n\t *\r\n\t * @param {object} state As generated by getState()\r\n\t * @see {@link getState} generates the parameter `state`\r\n\t */\r\n\tfunction setState( state ) {\r\n\r\n\t\tif( typeof state === 'object' ) {\r\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\r\n\r\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\r\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\r\n\r\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\r\n\t\t\t\ttogglePause( pausedFlag );\r\n\t\t\t}\r\n\r\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\r\n\t\t\t\toverview.toggle( overviewFlag );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Cues a new automated slide if enabled in the config.\r\n\t */\r\n\tfunction cueAutoSlide() {\r\n\r\n\t\tcancelAutoSlide();\r\n\r\n\t\tif( currentSlide && config.autoSlide !== false ) {\r\n\r\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment' );\r\n\r\n\t\t\t// When the slide first appears there is no \"current\" fragment so\r\n\t\t\t// we look for a data-autoslide timing on the first fragment\r\n\t\t\tif( !fragment ) fragment = currentSlide.querySelector( '.fragment' );\r\n\r\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\r\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\r\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\r\n\r\n\t\t\t// Pick value in the following priority order:\r\n\t\t\t// 1. Current fragment's data-autoslide\r\n\t\t\t// 2. Current slide's data-autoslide\r\n\t\t\t// 3. Parent slide's data-autoslide\r\n\t\t\t// 4. Global autoSlide setting\r\n\t\t\tif( fragmentAutoSlide ) {\r\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\r\n\t\t\t}\r\n\t\t\telse if( slideAutoSlide ) {\r\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\r\n\t\t\t}\r\n\t\t\telse if( parentAutoSlide ) {\r\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tautoSlide = config.autoSlide;\r\n\t\t\t}\r\n\r\n\t\t\t// If there are media elements with data-autoplay,\r\n\t\t\t// automatically set the autoSlide duration to the\r\n\t\t\t// length of that media. Not applicable if the slide\r\n\t\t\t// is divided up into fragments.\r\n\t\t\t// playbackRate is accounted for in the duration.\r\n\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\r\n\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\r\n\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\r\n\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\r\n\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\t// Cue the next auto-slide if:\r\n\t\t\t// - There is an autoSlide value\r\n\t\t\t// - Auto-sliding isn't paused by the user\r\n\t\t\t// - The presentation isn't paused\r\n\t\t\t// - The overview isn't active\r\n\t\t\t// - The presentation isn't over\r\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\r\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\r\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\r\n\t\t\t\t\t\tconfig.autoSlideMethod()\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tnavigateNext();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcueAutoSlide();\r\n\t\t\t\t}, autoSlide );\r\n\t\t\t\tautoSlideStartTime = Date.now();\r\n\t\t\t}\r\n\r\n\t\t\tif( autoSlidePlayer ) {\r\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels any ongoing request to auto-slide.\r\n\t */\r\n\tfunction cancelAutoSlide() {\r\n\r\n\t\tclearTimeout( autoSlideTimeout );\r\n\t\tautoSlideTimeout = -1;\r\n\r\n\t}\r\n\r\n\tfunction pauseAutoSlide() {\r\n\r\n\t\tif( autoSlide && !autoSlidePaused ) {\r\n\t\t\tautoSlidePaused = true;\r\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\r\n\t\t\tclearTimeout( autoSlideTimeout );\r\n\r\n\t\t\tif( autoSlidePlayer ) {\r\n\t\t\t\tautoSlidePlayer.setPlaying( false );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction resumeAutoSlide() {\r\n\r\n\t\tif( autoSlide && autoSlidePaused ) {\r\n\t\t\tautoSlidePaused = false;\r\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\r\n\t\t\tcueAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateLeft() {\r\n\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\r\n\t\t// Reverse for RTL\r\n\t\tif( config.rtl ) {\r\n\t\t\tif( ( overview.isActive() || fragments.next() === false ) && availableRoutes().left ) {\r\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Normal navigation\r\n\t\telse if( ( overview.isActive() || fragments.prev() === false ) && availableRoutes().left ) {\r\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateRight() {\r\n\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\r\n\t\t// Reverse for RTL\r\n\t\tif( config.rtl ) {\r\n\t\t\tif( ( overview.isActive() || fragments.prev() === false ) && availableRoutes().right ) {\r\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Normal navigation\r\n\t\telse if( ( overview.isActive() || fragments.next() === false ) && availableRoutes().right ) {\r\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateUp() {\r\n\r\n\t\t// Prioritize hiding fragments\r\n\t\tif( ( overview.isActive() || fragments.prev() === false ) && availableRoutes().up ) {\r\n\t\t\tslide( indexh, indexv - 1 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateDown() {\r\n\r\n\t\tnavigationHistory.hasNavigatedVertically = true;\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif( ( overview.isActive() || fragments.next() === false ) && availableRoutes().down ) {\r\n\t\t\tslide( indexh, indexv + 1 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigates backwards, prioritized in the following order:\r\n\t * 1) Previous fragment\r\n\t * 2) Previous vertical slide\r\n\t * 3) Previous horizontal slide\r\n\t */\r\n\tfunction navigatePrev() {\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif( fragments.prev() === false ) {\r\n\t\t\tif( availableRoutes().up ) {\r\n\t\t\t\tnavigateUp();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\r\n\t\t\t\tlet previousSlide;\r\n\r\n\t\t\t\tif( config.rtl ) {\r\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( previousSlide ) {\r\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\r\n\t\t\t\t\tlet h = indexh - 1;\r\n\t\t\t\t\tslide( h, v );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The reverse of #navigatePrev().\r\n\t */\r\n\tfunction navigateNext() {\r\n\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\t\tnavigationHistory.hasNavigatedVertically = true;\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif( fragments.next() === false ) {\r\n\r\n\t\t\tlet routes = availableRoutes();\r\n\r\n\t\t\t// When looping is enabled `routes.down` is always available\r\n\t\t\t// so we need a separate check for when we've reached the\r\n\t\t\t// end of a stack and should move horizontally\r\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide( currentSlide ) ) {\r\n\t\t\t\troutes.down = false;\r\n\t\t\t}\r\n\r\n\t\t\tif( routes.down ) {\r\n\t\t\t\tnavigateDown();\r\n\t\t\t}\r\n\t\t\telse if( config.rtl ) {\r\n\t\t\t\tnavigateLeft();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnavigateRight();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// --------------------------------------------------------------------//\r\n\t// ----------------------------- EVENTS -------------------------------//\r\n\t// --------------------------------------------------------------------//\r\n\r\n\t/**\r\n\t * Called by all event handlers that are based on user\r\n\t * input.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onUserInput( event ) {\r\n\r\n\t\tif( config.autoSlideStoppable ) {\r\n\t\t\tpauseAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Event listener for transition end on the current slide.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onTransitionEnd( event ) {\r\n\r\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\r\n\t\t\ttransition = 'idle';\r\n\t\t\tdispatchEvent({\r\n\t\t\t\ttype: 'slidetransitionend',\r\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the window level 'resize' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onWindowResize( event ) {\r\n\r\n\t\tlayout();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handle for the window level 'visibilitychange' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onPageVisibilityChange( event ) {\r\n\r\n\t\t// If, after clicking a link or similar and we're coming back,\r\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\r\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\r\n\t\t\t// Not all elements support .blur() - SVGs among them.\r\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\r\n\t\t\t\tdocument.activeElement.blur();\r\n\t\t\t}\r\n\t\t\tdocument.body.focus();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles clicks on links that are set to preview in the\r\n\t * iframe overlay.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tfunction onPreviewLinkClicked( event ) {\r\n\r\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\r\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\r\n\t\t\tif( url ) {\r\n\t\t\t\tshowPreview( url );\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles click on the auto-sliding controls element.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onAutoSlidePlayerClick( event ) {\r\n\r\n\t\t// Replay\r\n\t\tif( isLastSlide() && config.loop === false ) {\r\n\t\t\tslide( 0, 0 );\r\n\t\t\tresumeAutoSlide();\r\n\t\t}\r\n\t\t// Resume\r\n\t\telse if( autoSlidePaused ) {\r\n\t\t\tresumeAutoSlide();\r\n\t\t}\r\n\t\t// Pause\r\n\t\telse {\r\n\t\t\tpauseAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// --------------------------------------------------------------------//\r\n\t// ------------------------------- API --------------------------------//\r\n\t// --------------------------------------------------------------------//\r\n\r\n\t// The public reveal.js API\r\n\tconst API = {\r\n\t\tVERSION,\r\n\r\n\t\tinitialize,\r\n\t\tconfigure,\r\n\r\n\t\tsync,\r\n\t\tsyncSlide,\r\n\t\tsyncFragments: fragments.sync.bind( fragments ),\r\n\r\n\t\t// Navigation methods\r\n\t\tslide,\r\n\t\tleft: navigateLeft,\r\n\t\tright: navigateRight,\r\n\t\tup: navigateUp,\r\n\t\tdown: navigateDown,\r\n\t\tprev: navigatePrev,\r\n\t\tnext: navigateNext,\r\n\r\n\t\t// Navigation aliases\r\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\r\n\r\n\t\t// Fragment methods\r\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\r\n\t\tprevFragment: fragments.prev.bind( fragments ),\r\n\t\tnextFragment: fragments.next.bind( fragments ),\r\n\r\n\t\t// Event binding\r\n\t\ton,\r\n\t\toff,\r\n\r\n\t\t// Legacy event binding methods left in for backwards compatibility\r\n\t\taddEventListener: on,\r\n\t\tremoveEventListener: off,\r\n\r\n\t\t// Forces an update in slide layout\r\n\t\tlayout,\r\n\r\n\t\t// Randomizes the order of slides\r\n\t\tshuffle,\r\n\r\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\r\n\t\tavailableRoutes,\r\n\r\n\t\t// Returns an object with the available fragments as booleans (prev/next)\r\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\r\n\r\n\t\t// Toggles a help overlay with keyboard shortcuts\r\n\t\ttoggleHelp,\r\n\r\n\t\t// Toggles the overview mode on/off\r\n\t\ttoggleOverview: overview.toggle.bind( overview ),\r\n\r\n\t\t// Toggles the \"black screen\" mode on/off\r\n\t\ttogglePause,\r\n\r\n\t\t// Toggles the auto slide mode on/off\r\n\t\ttoggleAutoSlide,\r\n\r\n\t\t// Slide navigation checks\r\n\t\tisFirstSlide,\r\n\t\tisLastSlide,\r\n\t\tisLastVerticalSlide,\r\n\t\tisVerticalSlide,\r\n\r\n\t\t// State checks\r\n\t\tisPaused,\r\n\t\tisAutoSliding,\r\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\r\n\t\tisOverview: overview.isActive.bind( overview ),\r\n\t\tisFocused: focus.isFocused.bind( focus ),\r\n\t\tisPrintingPDF: print.isPrintingPDF.bind( print ),\r\n\r\n\t\t// Checks if reveal.js has been loaded and is ready for use\r\n\t\tisReady: () => ready,\r\n\r\n\t\t// Slide preloading\r\n\t\tloadSlide: slideContent.load.bind( slideContent ),\r\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\r\n\r\n\t\t// Adds or removes all internal event listeners\r\n\t\taddEventListeners,\r\n\t\tremoveEventListeners,\r\n\t\tdispatchEvent,\r\n\r\n\t\t// Facility for persisting and restoring the presentation state\r\n\t\tgetState,\r\n\t\tsetState,\r\n\r\n\t\t// Presentation progress on range of 0-1\r\n\t\tgetProgress,\r\n\r\n\t\t// Returns the indices of the current, or specified, slide\r\n\t\tgetIndices,\r\n\r\n\t\t// Returns an Array of key:value maps of the attributes of each\r\n\t\t// slide in the deck\r\n\t\tgetSlidesAttributes,\r\n\r\n\t\t// Returns the number of slides that we have passed\r\n\t\tgetSlidePastCount,\r\n\r\n\t\t// Returns the total number of slides\r\n\t\tgetTotalSlides,\r\n\r\n\t\t// Returns the slide element at the specified index\r\n\t\tgetSlide,\r\n\r\n\t\t// Returns the previous slide element, may be null\r\n\t\tgetPreviousSlide: () => previousSlide,\r\n\r\n\t\t// Returns the current slide element\r\n\t\tgetCurrentSlide: () => currentSlide,\r\n\r\n\t\t// Returns the slide background element at the specified index\r\n\t\tgetSlideBackground,\r\n\r\n\t\t// Returns the speaker notes string for a slide, or null\r\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\r\n\r\n\t\t// Returns an Array of all slides\r\n\t\tgetSlides,\r\n\r\n\t\t// Returns an array with all horizontal/vertical slides in the deck\r\n\t\tgetHorizontalSlides,\r\n\t\tgetVerticalSlides,\r\n\r\n\t\t// Checks if the presentation contains two or more horizontal\r\n\t\t// and vertical slides\r\n\t\thasHorizontalSlides,\r\n\t\thasVerticalSlides,\r\n\r\n\t\t// Checks if the deck has navigated on either axis at least once\r\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\r\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\r\n\r\n\t\t// Adds/removes a custom key binding\r\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\r\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\r\n\r\n\t\t// Programmatically triggers a keyboard event\r\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\r\n\r\n\t\t// Registers a new shortcut to include in the help overlay\r\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\r\n\r\n\t\tgetComputedSlideSize,\r\n\r\n\t\t// Returns the current scale of the presentation content\r\n\t\tgetScale: () => scale,\r\n\r\n\t\t// Returns the current configuration object\r\n\t\tgetConfig: () => config,\r\n\r\n\t\t// Helper method, retrieves query string as a key:value map\r\n\t\tgetQueryHash: Util.getQueryHash,\r\n\r\n\t\t// Returns reveal.js DOM elements\r\n\t\tgetRevealElement: () => revealElement,\r\n\t\tgetSlidesElement: () => dom.slides,\r\n\t\tgetViewportElement: () => dom.viewport,\r\n\t\tgetBackgroundsElement: () => backgrounds.element,\r\n\r\n\t\t// API for registering and retrieving plugins\r\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\r\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\r\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\r\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\r\n\r\n\t};\r\n\r\n\t// Our internal API which controllers have access to\r\n\tUtil.extend( Reveal, {\r\n\t\t...API,\r\n\r\n\t\t// Methods for announcing content to screen readers\r\n\t\tannounceStatus,\r\n\t\tgetStatusText,\r\n\r\n\t\t// Controllers\r\n\t\tprint,\r\n\t\tfocus,\r\n\t\tprogress,\r\n\t\tcontrols,\r\n\t\tlocation,\r\n\t\toverview,\r\n\t\tfragments,\r\n\t\tslideContent,\r\n\t\tslideNumber,\r\n\r\n\t\tonUserInput,\r\n\t\tcloseOverlay,\r\n\t\tupdateSlidesVisibility,\r\n\t\tlayoutSlideContents,\r\n\t\ttransformSlides,\r\n\t\tcueAutoSlide,\r\n\t\tcancelAutoSlide\r\n\t} );\r\n\r\n\treturn API;\r\n\r\n};\r\n","import Deck, { VERSION } from './reveal.js'\r\n\r\n/**\r\n * Expose the Reveal class to the window. To create a\r\n * new instance:\r\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\r\n *   controls: false\r\n * } );\r\n * deck.initialize().then(() => {\r\n *   // reveal.js is ready\r\n * });\r\n */\r\nlet Reveal = Deck;\r\n\r\n\r\n/**\r\n * The below is a thin shell that mimics the pre 4.0\r\n * reveal.js API and ensures backwards compatibility.\r\n * This API only allows for one Reveal instance per\r\n * page, whereas the new API above lets you run many\r\n * presentations on the same page.\r\n *\r\n * Reveal.initialize( { controls: false } ).then(() => {\r\n *   // reveal.js is ready\r\n * });\r\n */\r\n\r\nlet enqueuedAPICalls = [];\r\n\r\nReveal.initialize = options => {\r\n\r\n\t// Create our singleton reveal.js instance\r\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\r\n\r\n\t// Invoke any enqueued API calls\r\n\tenqueuedAPICalls.map( method => method( Reveal ) );\r\n\r\n\treturn Reveal.initialize();\r\n\r\n}\r\n\r\n/**\r\n * The pre 4.0 API let you add event listener before\r\n * initializing. We maintain the same behavior by\r\n * queuing up premature API calls and invoking all\r\n * of them when Reveal.initialize is called.\r\n */\r\n[ 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\r\n\tReveal[method] = ( ...args ) => {\r\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\r\n\t}\r\n} );\r\n\r\nReveal.VERSION = VERSION;\r\n\r\nexport default Reveal;"],"names":["POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","closestParent","target","parent","parentNode","matchesMethod","matches","matchesSelector","msMatchesSelector","call","createSingletonNode","container","tagname","classname","innerHTML","nodes","length","testNode","node","document","createElement","appendChild","createStyleSheet","tag","type","styleSheet","cssText","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","getRemainingHeight","height","newHeight","oldHeight","offsetHeight","removeProperty","UA","navigator","userAgent","testElement","isMobile","test","platform","maxTouchPoints","isChrome","isAndroid","supportsZoom","supportsHistoryAPI","window","history","replaceState","SlideContent","Reveal","startEmbeddedIframe","this","bind","preload","getConfig","preloadIframes","hasAttribute","slide","options","display","forEach","tagName","_this","shouldPreload","setAttribute","getAttribute","removeAttribute","media","sources","source","load","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","encodeURI","isSpeakerNotes","video","muted","autoplay","excludeIframes","iframe","width","maxHeight","maxWidth","backgroundIframeElement","querySelector","getSlideBackground","_appendParamToIframeSource","sourceAttribute","sourceURL","param","_this2","getSlidesElement","src","indexOf","_this3","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","unloadIframes","pause","_this4","SlideNumber","getRevealElement","config","oldConfig","slideNumberDisplay","slideNumber","isPrintingPDF","showSlideNumber","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","push","getSlidePastCount","getTotalSlides","indices","getIndices","h","sep","isVerticalSlide","v","url","getHash","formatNumber","delimiter","isNaN","colorToRgb","color","hex3","r","parseInt","charAt","g","hex6","substr","rgb","rgba","Backgrounds","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","setTimeout","contentElement","sync","backgroundColor","opacity","data","backgroundTransition","backgroundOpacity","contrastColor","computedBackgroundStyle","getComputedStyle","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","previousBackground","slideContent","stopEmbeddedContent","startEmbeddedContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","classToBubble","contains","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffset","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","verticalSlideCount","parallaxBackgroundVertical","AutoAnimate","autoAnimateCounter","fromSlide","toSlide","reset","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","dataset","autoAnimate","allSlides","getSlides","slideDirection","css","getAutoAnimatableElements","map","elements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","delay","autoAnimateTarget","join","requestAnimationFrame","fontWeight","dispatchEvent","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","x","y","scaleX","scaleY","Math","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","Object","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","closest","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","filter","pair","index","textNodes","findAutoAnimateMatches","nodeName","innerText","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","slice","key","fromElement","pimaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","concat","Fragments","fragments","disable","enable","hiddenFragments","prev","next","grouped","ordered","unordered","sorted","fragment","group","horizontalSlide","verticalSlide","sort","changedFragments","shown","hidden","maxIndex","currentFragment","max","wasVisible","announceStatus","getStatusText","bubbles","min","offset","lastVisibleFragment","update","progress","fragmentInURL","writeURL","goto","Overview","active","onSlideClicked","overview","isActive","cancelAutoSlide","getBackgroundsElement","slideSize","getComputedSlideSize","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","layout","hslide","vslide","hbackground","vbackground","vmin","innerWidth","innerHeight","transformSlides","cueAutoSlide","override","activate","deactivate","preventDefault","Keyboard","shortcuts","bindings","onDocumentKeyDown","onDocumentKeyPress","navigationMode","binding","callback","_typeof","keyCode","description","shiftKey","charCode","toggleHelp","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","prevSlideShortcut","firstSlideShortcut","lastSlideShortcut","unusedModifier","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","requestMethod","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","left","Number","MAX_VALUE","right","up","down","togglePause","embedded","getViewportElement","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","autoSlideStoppable","toggleAutoSlide","closeOverlay","toggle","Location","writeURLTimeout","onWindowHashChange","hash","bits","name","f","undefined","getElementById","decodeURIComponent","error","isSameNameAsCurrentSlide","slideIndices","hashIndexBase","hashOneBasedIndex","clearTimeout","s","encodeURIComponent","readURL","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","availableRoutes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","slidesTotal","slideIndex","floor","clientX","getMaxWidth","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","Date","now","detail","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","insertBefore","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","Promise","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","arguments","Print","pageWidth","margin","pageHeight","body","layoutSlideContents","doingSlideNumbers","top","contentHeight","scrollHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","page","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesLayout","notesElement","nextSibling","notesSpacing","bottom","numberElement","pdfSeparateFragments","previousFragmentStep","previousPage","fragmentGroups","clonedPage","cloneNode","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","clientY","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","Focus","onRevealPointerDown","onDocumentPointerDown","blur","focus","unbind","Notes","print","hasNotes","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","render","wasPlaying","animate","progressBefore","radius","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","iconSize","fillRect","moveTo","lineTo","restore","listener","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","POSITIVE_INFINITY","viewDistance","mobileViewDistance","indexh","indexv","previousSlide","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","backgrounds","pointer","initialize","initOptions","wrapper","slides","defaultConfig","Util","setViewport","start","on","viewport","setupDOM","setupPostMessage","setupScrollPrevention","resetVerticalSlides","configure","removeEventListeners","setupPDF","Device","pauseOverlay","statusElement","createStatusElement","position","overflow","clip","text","nodeType","isAriaHidden","isDisplayHidden","child","trim","setInterval","scrollTop","scrollLeft","JSON","parse","method","args","dispatchPostMessage","isReady","numberOfSlides","resume","enablePreviewLinks","disablePreviewLinks","destroy","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onTransitionEnd","onPageVisibilityChange","useCapture","off","transforms","createEvent","initEvent","self","message","namespace","getState","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","getShortcuts","getBindings","setProperty","size","oldScale","presentationWidth","presentationHeight","zoom","devicePixelRatio","len","updateParallax","remainingHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","stack","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","resumeAutoSlide","pauseAutoSlide","o","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","getVerticalStacks","stateLoop","j","splice","origin","run","create","sortAll","updateVisibility","formatEmbeddedContent","syncSlide","random","slidesLength","printMode","reverse","wasPresent","slideState","distanceX","horizontalSlidesLength","verticalSlidesLength","unload","oy","fragmentRoutes","pastCount","mainLoop","visibility","totalCount","allFragments","isVertical","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","getSlidesAttributes","attributes","attribute","getSlide","indexf","paused","setState","pausedFlag","overviewFlag","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","setPlaying","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","currentTarget","API","VERSION","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","isSpeakerNotesWindow","isOverview","loadSlide","unloadSlide","getPreviousSlide","addKeyBinding","removeKeyBinding","triggerKey","registerKeyboardShortcut","hasPlugin","getPlugin","getPlugins","getRegisteredPlugins","Deck","enqueuedAPICalls","assign","deck"],"mappings":"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"}