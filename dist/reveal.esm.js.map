{"version":3,"file":"reveal.esm.js","sources":["../js/utils/constants.js","../js/utils/util.js","../js/utils/device.js","../js/controllers/slidecontent.js","../js/controllers/slidenumber.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/controllers/autoanimate.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/print.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["\r\nexport const SLIDES_SELECTOR = '.slides section';\r\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\r\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\r\n\r\n// Methods that may not be invoked via the postMessage API\r\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener/;\r\n\r\n// Regex for retrieving the fragment style from a class attribute\r\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;","/**\r\n * Extend object a with the properties of object b.\r\n * If there's a conflict, object b takes precedence.\r\n *\r\n * @param {object} a\r\n * @param {object} b\r\n */\r\nexport const extend = ( a, b ) => {\r\n\r\n\tfor( let i in b ) {\r\n\t\ta[ i ] = b[ i ];\r\n\t}\r\n\r\n\treturn a;\r\n\r\n}\r\n\r\n/**\r\n * querySelectorAll but returns an Array.\r\n */\r\nexport const queryAll = ( el, selector ) => {\r\n\r\n\treturn Array.from( el.querySelectorAll( selector ) );\r\n\r\n}\r\n\r\n/**\r\n * classList.toggle() with cross browser support\r\n */\r\nexport const toggleClass = ( el, className, value ) => {\r\n\tif( value ) {\r\n\t\tel.classList.add( className );\r\n\t}\r\n\telse {\r\n\t\tel.classList.remove( className );\r\n\t}\r\n}\r\n\r\n/**\r\n * Utility for deserializing a value.\r\n *\r\n * @param {*} value\r\n * @return {*}\r\n */\r\nexport const deserialize = ( value ) => {\r\n\r\n\tif( typeof value === 'string' ) {\r\n\t\tif( value === 'null' ) return null;\r\n\t\telse if( value === 'true' ) return true;\r\n\t\telse if( value === 'false' ) return false;\r\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\r\n\t}\r\n\r\n\treturn value;\r\n\r\n}\r\n\r\n/**\r\n * Measures the distance in pixels between point a\r\n * and point b.\r\n *\r\n * @param {object} a point with x/y properties\r\n * @param {object} b point with x/y properties\r\n *\r\n * @return {number}\r\n */\r\nexport const distanceBetween = ( a, b ) => {\r\n\r\n\tlet dx = a.x - b.x,\r\n\t\tdy = a.y - b.y;\r\n\r\n\treturn Math.sqrt( dx*dx + dy*dy );\r\n\r\n}\r\n\r\n/**\r\n * Applies a CSS transform to the target element.\r\n *\r\n * @param {HTMLElement} element\r\n * @param {string} transform\r\n */\r\nexport const transformElement = ( element, transform ) => {\r\n\r\n\telement.style.transform = transform;\r\n\r\n}\r\n\r\n/**\r\n * Find the closest parent that matches the given\r\n * selector.\r\n *\r\n * @param {HTMLElement} target The child element\r\n * @param {String} selector The CSS selector to match\r\n * the parents against\r\n *\r\n * @return {HTMLElement} The matched parent or null\r\n * if no matching parent was found\r\n */\r\nexport const closestParent = ( target, selector ) => {\r\n\r\n\tlet parent = target.parentNode;\r\n\r\n\twhile( parent ) {\r\n\r\n\t\t// There's some overhead doing this each time, we don't\r\n\t\t// want to rewrite the element prototype but should still\r\n\t\t// be enough to feature detect once at startup...\r\n\t\tlet matchesMethod = parent.matches || parent.matchesSelector || parent.msMatchesSelector;\r\n\r\n\t\t// If we find a match, we're all set\r\n\t\tif( matchesMethod && matchesMethod.call( parent, selector ) ) {\r\n\t\t\treturn parent;\r\n\t\t}\r\n\r\n\t\t// Keep searching\r\n\t\tparent = parent.parentNode;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\n/**\r\n * Handling the fullscreen functionality via the fullscreen API\r\n *\r\n * @see http://fullscreen.spec.whatwg.org/\r\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\r\n */\r\nexport const enterFullscreen = element => {\r\n\r\n\telement = element || document.documentElement;\r\n\r\n\t// Check which implementation is available\r\n\tlet requestMethod = element.requestFullscreen ||\r\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\r\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\r\n\t\t\t\t\t\telement.mozRequestFullScreen ||\r\n\t\t\t\t\t\telement.msRequestFullscreen;\r\n\r\n\tif( requestMethod ) {\r\n\t\trequestMethod.apply( element );\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Creates an HTML element and returns a reference to it.\r\n * If the element already exists the existing instance will\r\n * be returned.\r\n *\r\n * @param {HTMLElement} container\r\n * @param {string} tagname\r\n * @param {string} classname\r\n * @param {string} innerHTML\r\n *\r\n * @return {HTMLElement}\r\n */\r\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\r\n\r\n\t// Find all nodes matching the description\r\n\tlet nodes = container.querySelectorAll( '.' + classname );\r\n\r\n\t// Check all matches to find one which is a direct child of\r\n\t// the specified container\r\n\tfor( let i = 0; i < nodes.length; i++ ) {\r\n\t\tlet testNode = nodes[i];\r\n\t\tif( testNode.parentNode === container ) {\r\n\t\t\treturn testNode;\r\n\t\t}\r\n\t}\r\n\r\n\t// If no node was found, create it now\r\n\tlet node = document.createElement( tagname );\r\n\tnode.className = classname;\r\n\tnode.innerHTML = innerHTML;\r\n\tcontainer.appendChild( node );\r\n\r\n\treturn node;\r\n\r\n}\r\n\r\n/**\r\n * Injects the given CSS styles into the DOM.\r\n *\r\n * @param {string} value\r\n */\r\nexport const createStyleSheet = ( value ) => {\r\n\r\n\tlet tag = document.createElement( 'style' );\r\n\ttag.type = 'text/css';\r\n\r\n\tif( value && value.length > 0 ) {\r\n\t\tif( tag.styleSheet ) {\r\n\t\t\ttag.styleSheet.cssText = value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttag.appendChild( document.createTextNode( value ) );\r\n\t\t}\r\n\t}\r\n\r\n\tdocument.head.appendChild( tag );\r\n\r\n\treturn tag;\r\n\r\n}\r\n\r\n/**\r\n * Returns a key:value hash of all query params.\r\n */\r\nexport const getQueryHash = () => {\r\n\r\n\tlet query = {};\r\n\r\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\r\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\r\n\t} );\r\n\r\n\t// Basic deserialization\r\n\tfor( let i in query ) {\r\n\t\tlet value = query[ i ];\r\n\r\n\t\tquery[ i ] = deserialize( unescape( value ) );\r\n\t}\r\n\r\n\t// Do not accept new dependencies via query config to avoid\r\n\t// the potential of malicious script injection\r\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\r\n\r\n\treturn query;\r\n\r\n}\r\n\r\n/**\r\n * Returns the remaining height within the parent of the\r\n * target element.\r\n *\r\n * remaining height = [ configured parent height ] - [ current parent height ]\r\n *\r\n * @param {HTMLElement} element\r\n * @param {number} [height]\r\n */\r\nexport const getRemainingHeight = ( element, height = 0 ) => {\r\n\r\n\tif( element ) {\r\n\t\tlet newHeight, oldHeight = element.style.height;\r\n\r\n\t\t// Change the .stretch element height to 0 in order find the height of all\r\n\t\t// the other elements\r\n\t\telement.style.height = '0px';\r\n\r\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\r\n\t\t// Restore it temporarily to its natural height.\r\n\t\telement.parentNode.style.height = 'auto';\r\n\r\n\t\tnewHeight = height - element.parentNode.offsetHeight;\r\n\r\n\t\t// Restore the old height, just in case\r\n\t\telement.style.height = oldHeight + 'px';\r\n\r\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\r\n\t\telement.parentNode.style.removeProperty('height');\r\n\r\n\t\treturn newHeight;\r\n\t}\r\n\r\n\treturn height;\r\n\r\n}","const UA = navigator.userAgent;\r\nconst testElement = document.createElement( 'div' );\r\n\r\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\r\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\r\n\r\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\r\n\r\nexport const isAndroid = /android/gi.test( UA );\r\n\r\n// Flags if we should use zoom instead of transform to scale\r\n// up slides. Zoom produces crisper results but has a lot of\r\n// xbrowser quirks so we only use it in whitelisted browsers.\r\nexport const supportsZoom = 'zoom' in testElement.style && !isMobile &&\r\n\t\t\t\t( isChrome || /Version\\/[\\d\\.]+.*Safari/.test( UA ) );\r\n\r\nexport const supportsHistoryAPI = typeof window.history.replaceState === 'function' && !/PhantomJS/.test( UA );","import { HORIZONTAL_SLIDES_SELECTOR, VERTICAL_SLIDES_SELECTOR } from '../utils/constants.js'\r\nimport { extend, queryAll, closestParent } from '../utils/util.js'\r\nimport { isMobile } from '../utils/device.js'\r\n\r\n/**\r\n * Handles loading, unloading and playback of slide\r\n * content such as images, videos and iframes.\r\n */\r\nexport default class SlideContent {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Should the given element be preloaded?\r\n\t * Decides based on local element attributes and global config.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tshouldPreload( element ) {\r\n\r\n\t\t// Prefer an explicit global preload setting\r\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\r\n\r\n\t\t// If no global setting is available, fall back on the element's\r\n\t\t// own preload setting\r\n\t\tif( typeof preload !== 'boolean' ) {\r\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\r\n\t\t}\r\n\r\n\t\treturn preload;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the given slide is within the configured view\r\n\t * distance. Shows the slide element and loads any content\r\n\t * that is set to load lazily (data-src).\r\n\t *\r\n\t * @param {HTMLElement} slide Slide to show\r\n\t */\r\n\tload( slide, options = {} ) {\r\n\r\n\t\t// Show the slide element\r\n\t\tslide.style.display = this.Reveal.getConfig().display;\r\n\r\n\t\t// Media elements with data-src attributes\r\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\r\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\r\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\r\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\r\n\t\t\t\telement.removeAttribute( 'data-src' );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Media elements with <source> children\r\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\r\n\t\t\tlet sources = 0;\r\n\r\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\r\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\r\n\t\t\t\tsource.removeAttribute( 'data-src' );\r\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\r\n\t\t\t\tsources += 1;\r\n\t\t\t} );\r\n\r\n\t\t\t// If we rewrote sources for this video/audio element, we need\r\n\t\t\t// to manually tell it to load from its new origin\r\n\t\t\tif( sources > 0 ) {\r\n\t\t\t\tmedia.load();\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\r\n\t\t// Show the corresponding background element\r\n\t\tlet background = slide.slideBackgroundElement;\r\n\t\tif( background ) {\r\n\t\t\tbackground.style.display = 'block';\r\n\r\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\r\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\r\n\r\n\t\t\t// If the background contains media, load it\r\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\r\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\r\n\r\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\r\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\r\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\r\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\r\n\r\n\t\t\t\t// Images\r\n\t\t\t\tif( backgroundImage ) {\r\n\t\t\t\t\tbackgroundContent.style.backgroundImage = 'url('+ encodeURI( backgroundImage ) +')';\r\n\t\t\t\t}\r\n\t\t\t\t// Videos\r\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\r\n\t\t\t\t\tlet video = document.createElement( 'video' );\r\n\r\n\t\t\t\t\tif( backgroundVideoLoop ) {\r\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( backgroundVideoMuted ) {\r\n\t\t\t\t\t\tvideo.muted = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Inline video playback works (at least in Mobile Safari) as\r\n\t\t\t\t\t// long as the video is muted and the `playsinline` attribute is\r\n\t\t\t\t\t// present\r\n\t\t\t\t\tif( isMobile ) {\r\n\t\t\t\t\t\tvideo.muted = true;\r\n\t\t\t\t\t\tvideo.autoplay = true;\r\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Support comma separated lists of video sources\r\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\r\n\t\t\t\t\t\tvideo.innerHTML += '<source src=\"'+ source +'\">';\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tbackgroundContent.appendChild( video );\r\n\t\t\t\t}\r\n\t\t\t\t// Iframes\r\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\r\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\r\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\r\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\r\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\r\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\r\n\r\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\r\n\r\n\t\t\t\t\tiframe.style.width  = '100%';\r\n\t\t\t\t\tiframe.style.height = '100%';\r\n\t\t\t\t\tiframe.style.maxHeight = '100%';\r\n\t\t\t\t\tiframe.style.maxWidth = '100%';\r\n\r\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Start loading preloadable iframes\r\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\r\n\t\t\tif( backgroundIframeElement ) {\r\n\r\n\t\t\t\t// Check if this iframe is eligible to be preloaded\r\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\r\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\r\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unloads and hides the given slide. This is called when the\r\n\t * slide is moved outside of the configured view distance.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tunload( slide ) {\r\n\r\n\t\t// Hide the slide element\r\n\t\tslide.style.display = 'none';\r\n\r\n\t\t// Hide the corresponding background element\r\n\t\tlet background = this.Reveal.getSlideBackground( slide );\r\n\t\tif( background ) {\r\n\t\t\tbackground.style.display = 'none';\r\n\r\n\t\t\t// Unload any background iframes\r\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\r\n\t\t\t\telement.removeAttribute( 'src' );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// Reset lazy-loaded media elements with src attributes\r\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\r\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\r\n\t\t\telement.removeAttribute( 'src' );\r\n\t\t} );\r\n\r\n\t\t// Reset lazy-loaded media elements with <source> children\r\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\r\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\r\n\t\t\tsource.removeAttribute( 'src' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Enforces origin-specific format rules for embedded media.\r\n\t */\r\n\tformatEmbeddedContent() {\r\n\r\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\r\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\r\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\r\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\r\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t// YouTube frames must include \"?enablejsapi=1\"\r\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\r\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\r\n\r\n\t\t// Vimeo frames must include \"?api=1\"\r\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\r\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Start playback of any embedded content inside of\r\n\t * the given element.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tstartEmbeddedContent( element ) {\r\n\r\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\r\n\r\n\t\t\t// Restart GIFs\r\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\r\n\t\t\t\t// Setting the same unchanged source like this was confirmed\r\n\t\t\t\t// to work in Chrome, FF & Safari\r\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\r\n\t\t\t} );\r\n\r\n\t\t\t// HTML5 media elements\r\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\r\n\t\t\t\tif( closestParent( el, '.fragment' ) && !closestParent( el, '.fragment.visible' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Prefer an explicit global autoplay setting\r\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\r\n\r\n\t\t\t\t// If no global setting is available, fall back on the element's\r\n\t\t\t\t// own autoplay setting\r\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\r\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closestParent( el, '.slide-background' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\r\n\r\n\t\t\t\t\t// If the media is ready, start playback\r\n\t\t\t\t\tif( el.readyState > 1 ) {\r\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\r\n\t\t\t\t\t// of waiting, we initiate playback\r\n\t\t\t\t\telse if( isMobile ) {\r\n\t\t\t\t\t\tlet promise = el.play();\r\n\r\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\r\n\t\t\t\t\t\t// that the viewer can start the media on their own\r\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\r\n\t\t\t\t\t\t\tpromise.catch( () => {\r\n\t\t\t\t\t\t\t\tel.controls = true;\r\n\r\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\r\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\r\n\t\t\t\t\t\t\t\t\tel.controls = false;\r\n\t\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// If the media isn't loaded, wait before playing\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\r\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// Normal iframes\r\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\r\n\t\t\t\tif( closestParent( el, '.fragment' ) && !closestParent( el, '.fragment.visible' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\r\n\t\t\t} );\r\n\r\n\t\t\t// Lazy loading iframes\r\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\r\n\t\t\t\tif( closestParent( el, '.fragment' ) && !closestParent( el, '.fragment.visible' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\r\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\r\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\r\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Starts playing an embedded video/audio element after\r\n\t * it has finished loading.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tstartEmbeddedMedia( event ) {\r\n\r\n\t\tlet isAttachedToDOM = !!closestParent( event.target, 'html' ),\r\n\t\t\tisVisible  \t\t= !!closestParent( event.target, '.present' );\r\n\r\n\t\tif( isAttachedToDOM && isVisible ) {\r\n\t\t\tevent.target.currentTime = 0;\r\n\t\t\tevent.target.play();\r\n\t\t}\r\n\r\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * \"Starts\" the content of an embedded iframe using the\r\n\t * postMessage API.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tstartEmbeddedIframe( event ) {\r\n\r\n\t\tlet iframe = event.target;\r\n\r\n\t\tif( iframe && iframe.contentWindow ) {\r\n\r\n\t\t\tlet isAttachedToDOM = !!closestParent( event.target, 'html' ),\r\n\t\t\t\tisVisible  \t\t= !!closestParent( event.target, '.present' );\r\n\r\n\t\t\tif( isAttachedToDOM && isVisible ) {\r\n\r\n\t\t\t\t// Prefer an explicit global autoplay setting\r\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\r\n\r\n\t\t\t\t// If no global setting is available, fall back on the element's\r\n\t\t\t\t// own autoplay setting\r\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\r\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closestParent( iframe, '.slide-background' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// YouTube postMessage API\r\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\r\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t\t// Vimeo postMessage API\r\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\r\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t\t// Generic postMessage API\r\n\t\t\t\telse {\r\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Stop playback of any embedded content inside of\r\n\t * the targeted slide.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tstopEmbeddedContent( element, options = {} ) {\r\n\r\n\t\toptions = extend( {\r\n\t\t\t// Defaults\r\n\t\t\tunloadIframes: true\r\n\t\t}, options );\r\n\r\n\t\tif( element && element.parentNode ) {\r\n\t\t\t// HTML5 media elements\r\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\r\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\r\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\r\n\t\t\t\t\tel.pause();\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\r\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\r\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\r\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\r\n\t\t\t});\r\n\r\n\t\t\t// YouTube postMessage API\r\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\r\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\r\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Vimeo postMessage API\r\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\r\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\r\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif( options.unloadIframes === true ) {\r\n\t\t\t\t// Unload lazy-loaded iframes\r\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\r\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\r\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\r\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\r\n\t\t\t\t\tel.removeAttribute( 'src' );\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * Handles the display of reveal.js' optional slide number.\r\n */\r\nexport default class SlideNumber {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'slide-number';\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tlet slideNumberDisplay = 'none';\r\n\t\tif( config.slideNumber && !this.Reveal.isPrintingPDF() ) {\r\n\t\t\tif( config.showSlideNumber === 'all' ) {\r\n\t\t\t\tslideNumberDisplay = 'block';\r\n\t\t\t}\r\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\r\n\t\t\t\tslideNumberDisplay = 'block';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.element.style.display = slideNumberDisplay;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the slide number to match the current slide.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\t// Update slide number if enabled\r\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\r\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the HTML string corresponding to the current slide\r\n\t * number, including formatting.\r\n\t */\r\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\t\tlet value;\r\n\t\tlet format = 'h.v';\r\n\r\n\t\tif ( typeof config.slideNumber === 'function' ) {\r\n\t\t\tvalue = config.slideNumber( slide );\r\n\t\t} else {\r\n\t\t\t// Check if a custom number format is available\r\n\t\t\tif( typeof config.slideNumber === 'string' ) {\r\n\t\t\t\tformat = config.slideNumber;\r\n\t\t\t}\r\n\r\n\t\t\t// If there are ONLY vertical slides in this deck, always use\r\n\t\t\t// a flattened slide number\r\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\r\n\t\t\t\tformat = 'c';\r\n\t\t\t}\r\n\r\n\t\t\tvalue = [];\r\n\t\t\tswitch( format ) {\r\n\t\t\t\tcase 'c':\r\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + 1 );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'c/t':\r\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + 1, '/', this.Reveal.getTotalSlides() );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\r\n\t\t\t\t\tvalue.push( indices.h + 1 );\r\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\r\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\r\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies HTML formatting to a slide number before it's\r\n\t * written to the DOM.\r\n\t *\r\n\t * @param {number} a Current slide\r\n\t * @param {string} delimiter Character to separate slide numbers\r\n\t * @param {(number|*)} b Total slides\r\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\r\n\t * @return {string} HTML string fragment\r\n\t */\r\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\r\n\r\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\r\n\t\t\treturn  `<a href=\"${url}\">\r\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\r\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\r\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\r\n\t\t\t\t\t</a>`;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn `<a href=\"${url}\">\r\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\r\n\t\t\t\t\t</a>`;\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * Converts various color input formats to an {r:0,g:0,b:0} object.\r\n *\r\n * @param {string} color The string representation of a color\r\n * @example\r\n * colorToRgb('#000');\r\n * @example\r\n * colorToRgb('#000000');\r\n * @example\r\n * colorToRgb('rgb(0,0,0)');\r\n * @example\r\n * colorToRgb('rgba(0,0,0)');\r\n *\r\n * @return {{r: number, g: number, b: number, [a]: number}|null}\r\n */\r\nexport const colorToRgb = ( color ) => {\r\n\r\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\r\n\tif( hex3 && hex3[1] ) {\r\n\t\thex3 = hex3[1];\r\n\t\treturn {\r\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\r\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\r\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\r\n\t\t};\r\n\t}\r\n\r\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\r\n\tif( hex6 && hex6[1] ) {\r\n\t\thex6 = hex6[1];\r\n\t\treturn {\r\n\t\t\tr: parseInt( hex6.substr( 0, 2 ), 16 ),\r\n\t\t\tg: parseInt( hex6.substr( 2, 2 ), 16 ),\r\n\t\t\tb: parseInt( hex6.substr( 4, 2 ), 16 )\r\n\t\t};\r\n\t}\r\n\r\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\r\n\tif( rgb ) {\r\n\t\treturn {\r\n\t\t\tr: parseInt( rgb[1], 10 ),\r\n\t\t\tg: parseInt( rgb[2], 10 ),\r\n\t\t\tb: parseInt( rgb[3], 10 )\r\n\t\t};\r\n\t}\r\n\r\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\r\n\tif( rgba ) {\r\n\t\treturn {\r\n\t\t\tr: parseInt( rgba[1], 10 ),\r\n\t\t\tg: parseInt( rgba[2], 10 ),\r\n\t\t\tb: parseInt( rgba[3], 10 ),\r\n\t\t\ta: parseFloat( rgba[4] )\r\n\t\t};\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\n/**\r\n * Calculates brightness on a scale of 0-255.\r\n *\r\n * @param {string} color See colorToRgb for supported formats.\r\n * @see {@link colorToRgb}\r\n */\r\nexport const colorBrightness = ( color ) => {\r\n\r\n\tif( typeof color === 'string' ) color = colorToRgb( color );\r\n\r\n\tif( color ) {\r\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}","import { queryAll } from '../utils/util.js'\r\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\r\n\r\n/**\r\n * Creates and updates slide backgrounds.\r\n */\r\nexport default class Backgrounds {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'backgrounds';\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the slide background elements and appends them\r\n\t * to the background container. One element is created per\r\n\t * slide no matter if the given slide has visible background.\r\n\t */\r\n\tcreate() {\r\n\r\n\t\tlet printMode = this.Reveal.isPrintingPDF();\r\n\r\n\t\t// Clear prior backgrounds\r\n\t\tthis.element.innerHTML = '';\r\n\t\tthis.element.classList.add( 'no-transition' );\r\n\r\n\t\t// Iterate over all horizontal slides\r\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\r\n\r\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\r\n\r\n\t\t\t// Iterate over all vertical slides\r\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\r\n\r\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\r\n\r\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t\t// Add parallax background if specified\r\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\r\n\r\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\r\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\r\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\r\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\r\n\r\n\t\t\t// Make sure the below properties are set on the element - these properties are\r\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\r\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\r\n\t\t\t// these properties after short time delay\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\r\n\t\t\t}, 1 );\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tthis.element.style.backgroundImage = '';\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a background for the given slide.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t * @param {HTMLElement} container The element that the background\r\n\t * should be appended to\r\n\t * @return {HTMLElement} New background div\r\n\t */\r\n\tcreateBackground( slide, container ) {\r\n\r\n\t\t// Main slide background element\r\n\t\tlet element = document.createElement( 'div' );\r\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\r\n\r\n\t\t// Inner background element that wraps images/videos/iframes\r\n\t\tlet contentElement = document.createElement( 'div' );\r\n\t\tcontentElement.className = 'slide-background-content';\r\n\r\n\t\telement.appendChild( contentElement );\r\n\t\tcontainer.appendChild( element );\r\n\r\n\t\tslide.slideBackgroundElement = element;\r\n\t\tslide.slideBackgroundContentElement = contentElement;\r\n\r\n\t\t// Syncs the background to reflect all current background settings\r\n\t\tthis.sync( slide );\r\n\r\n\t\treturn element;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Renders all of the visual properties of a slide background\r\n\t * based on the various background attributes.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tsync( slide ) {\r\n\r\n\t\tlet element = slide.slideBackgroundElement,\r\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\r\n\r\n\t\t// Reset the prior background state in case this is not the\r\n\t\t// initial sync\r\n\t\tslide.classList.remove( 'has-dark-background' );\r\n\t\tslide.classList.remove( 'has-light-background' );\r\n\r\n\t\telement.removeAttribute( 'data-loaded' );\r\n\t\telement.removeAttribute( 'data-background-hash' );\r\n\t\telement.removeAttribute( 'data-background-size' );\r\n\t\telement.removeAttribute( 'data-background-transition' );\r\n\t\telement.style.backgroundColor = '';\r\n\r\n\t\tcontentElement.style.backgroundSize = '';\r\n\t\tcontentElement.style.backgroundRepeat = '';\r\n\t\tcontentElement.style.backgroundPosition = '';\r\n\t\tcontentElement.style.backgroundImage = '';\r\n\t\tcontentElement.style.opacity = '';\r\n\t\tcontentElement.innerHTML = '';\r\n\r\n\t\tlet data = {\r\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\r\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\r\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\r\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\r\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\r\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\r\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\r\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\r\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\r\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' )\r\n\t\t};\r\n\r\n\t\tif( data.background ) {\r\n\t\t\t// Auto-wrap image urls in url(...)\r\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp)([?#\\s]|$)/gi.test( data.background ) ) {\r\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telement.style.background = data.background;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Create a hash for this combination of background settings.\r\n\t\t// This is used to determine when two slide backgrounds are\r\n\t\t// the same.\r\n\t\tif( data.background || data.backgroundColor || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\r\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\r\n\t\t}\r\n\r\n\t\t// Additional and optional background properties\r\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\r\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\r\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\r\n\r\n\t\tif( slide.hasAttribute( 'data-preload' ) ) element.setAttribute( 'data-preload', '' );\r\n\r\n\t\t// Background image options are set on the content wrapper\r\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\r\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\r\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\r\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\r\n\r\n\t\t// If this slide has a background color, we add a class that\r\n\t\t// signals if it is light or dark. If the slide has no background\r\n\t\t// color, no class will be added\r\n\t\tlet contrastColor = data.backgroundColor;\r\n\r\n\t\t// If no bg color was found, check the computed background\r\n\t\tif( !contrastColor ) {\r\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\r\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\r\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( contrastColor ) {\r\n\t\t\tlet rgb = colorToRgb( contrastColor );\r\n\r\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\r\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\r\n\t\t\t// an element with no background\r\n\t\t\tif( rgb && rgb.a !== 0 ) {\r\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\r\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the background elements to reflect the current\r\n\t * slide.\r\n\t *\r\n\t * @param {boolean} includeAll If true, the backgrounds of\r\n\t * all vertical slides (not just the present) will be updated.\r\n\t */\r\n\tupdate( includeAll = false ) {\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tlet indices = this.Reveal.getIndices();\r\n\r\n\t\tlet currentBackground = null;\r\n\r\n\t\t// Reverse past/future classes when in RTL mode\r\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\r\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\r\n\r\n\t\t// Update the classes of all backgrounds to match the\r\n\t\t// states of their slides (past/present/future)\r\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\r\n\r\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\r\n\r\n\t\t\tif( h < indices.h ) {\r\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\r\n\t\t\t}\r\n\t\t\telse if ( h > indices.h ) {\r\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbackgroundh.classList.add( 'present' );\r\n\r\n\t\t\t\t// Store a reference to the current background element\r\n\t\t\t\tcurrentBackground = backgroundh;\r\n\t\t\t}\r\n\r\n\t\t\tif( includeAll || h === indices.h ) {\r\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\r\n\r\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\r\n\r\n\t\t\t\t\tif( v < indices.v ) {\r\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ( v > indices.v ) {\r\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\r\n\r\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\r\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\t// Stop content inside of previous backgrounds\r\n\t\tif( this.previousBackground ) {\r\n\r\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\r\n\r\n\t\t}\r\n\r\n\t\t// Start content in the current background\r\n\t\tif( currentBackground ) {\r\n\r\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\r\n\r\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\r\n\t\t\tif( currentBackgroundContent ) {\r\n\r\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\r\n\r\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\r\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\r\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\r\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\r\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Don't transition between identical backgrounds. This\r\n\t\t\t// prevents unwanted flicker.\r\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\r\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\r\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\r\n\t\t\t\tthis.element.classList.add( 'no-transition' );\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousBackground = currentBackground;\r\n\r\n\t\t}\r\n\r\n\t\t// If there's a background brightness flag for this slide,\r\n\t\t// bubble it to the .reveal container\r\n\t\tif( currentSlide ) {\r\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\r\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\r\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.add( classToBubble );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.remove( classToBubble );\r\n\t\t\t\t}\r\n\t\t\t}, this );\r\n\t\t}\r\n\r\n\t\t// Allow the first background to apply without transition\r\n\t\tsetTimeout( () => {\r\n\t\t\tthis.element.classList.remove( 'no-transition' );\r\n\t\t}, 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the position of the parallax background based\r\n\t * on the current slide index.\r\n\t */\r\n\tupdateParallax() {\r\n\r\n\t\tlet indices = this.Reveal.getIndices();\r\n\r\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\r\n\r\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\r\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\r\n\r\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\r\n\t\t\t\tbackgroundWidth, backgroundHeight;\r\n\r\n\t\t\tif( backgroundSize.length === 1 ) {\r\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\r\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\r\n\t\t\t}\r\n\r\n\t\t\tlet slideWidth = this.element.offsetWidth,\r\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\r\n\t\t\t\thorizontalOffsetMultiplier,\r\n\t\t\t\thorizontalOffset;\r\n\r\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\r\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\r\n\t\t\t}\r\n\r\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\r\n\r\n\t\t\tlet slideHeight = this.element.offsetHeight,\r\n\t\t\t\tverticalSlideCount = verticalSlides.length,\r\n\t\t\t\tverticalOffsetMultiplier,\r\n\t\t\t\tverticalOffset;\r\n\r\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\r\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\r\n\t\t\t}\r\n\r\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\r\n\r\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","import { queryAll, extend, createStyleSheet } from '../utils/util.js'\r\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\r\n\r\n/**\r\n * Automatically animates matching elements across\r\n * slides with the [data-auto-animate] attribute.\r\n */\r\nexport default class AutoAnimate {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Counter used to generate unique IDs for auto-animated elements\r\n\t\tthis.autoAnimateCounter = 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Runs an auto-animation between the given slides.\r\n\t *\r\n\t * @param  {HTMLElement} fromSlide\r\n\t * @param  {HTMLElement} toSlide\r\n\t */\r\n\trun( fromSlide, toSlide ) {\r\n\r\n\t\t// Clean up after prior animations\r\n\t\tthis.reset();\r\n\r\n\t\t// Ensure that both slides are auto-animate targets\r\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' ) ) {\r\n\r\n\t\t\t// Create a new auto-animate sheet\r\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\r\n\r\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\r\n\r\n\t\t\t// Set our starting state\r\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\r\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\r\n\r\n\t\t\t// Flag the navigation direction, needed for fragment buildup\r\n\t\t\tlet allSlides = this.Reveal.getSlides();\r\n\t\t\tanimationOptions.slideDirection = allSlides.indexOf( toSlide ) > allSlides.indexOf( fromSlide ) ? 'forward' : 'backward';\r\n\r\n\t\t\t// Inject our auto-animate styles for this transition\r\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\r\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, this.autoAnimateCounter++ );\r\n\t\t\t} );\r\n\r\n\t\t\t// Animate unmatched elements, if enabled\r\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\r\n\r\n\t\t\t\t// Our default timings for unmatched elements\r\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\r\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\r\n\r\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\r\n\r\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\r\n\t\t\t\t\tlet id = 'unmatched';\r\n\r\n\t\t\t\t\t// If there is a duration or delay set specifically for this\r\n\t\t\t\t\t// element our unmatched elements should adhere to those\r\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\r\n\t\t\t\t\t\tid = 'unmatched-' + this.autoAnimateCounter++;\r\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\r\n\r\n\t\t\t\t}, this );\r\n\r\n\t\t\t\t// Our default transition for unmatched elements\r\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Setting the whole chunk of CSS at once is the most\r\n\t\t\t// efficient way to do this. Using sheet.insertRule\r\n\t\t\t// is multiple factors slower.\r\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\r\n\r\n\t\t\t// Start the animation next cycle\r\n\t\t\trequestAnimationFrame( () => {\r\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\r\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\r\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\r\n\r\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: 'autoanimate',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tfromSlide,\r\n\t\t\t\t\ttoSlide,\r\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rolls back all changes that we've made to the DOM so\r\n\t * that as part of animating.\r\n\t */\r\n\treset() {\r\n\r\n\t\t// Reset slides\r\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\r\n\t\t\telement.dataset.autoAnimate = '';\r\n\t\t} );\r\n\r\n\t\t// Reset elements\r\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\r\n\t\t\tdelete element.dataset.autoAnimateTarget;\r\n\t\t} );\r\n\r\n\t\t// Remove the animation sheet\r\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\r\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\r\n\t\t\tthis.autoAnimateStyleSheet = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a FLIP animation where the `to` element starts out\r\n\t * in the `from` element position and animates to its original\r\n\t * state.\r\n\t *\r\n\t * @param {HTMLElement} from\r\n\t * @param {HTMLElement} to\r\n\t * @param {Object} elementOptions Options for this element pair\r\n\t * @param {Object} animationOptions Options set at the slide level\r\n\t * @param {String} id Unique ID that we can use to identify this\r\n\t * auto-animate element in the DOM\r\n\t */\r\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\r\n\r\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\r\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\r\n\t\tfrom.dataset.autoAnimateTarget = '';\r\n\t\tto.dataset.autoAnimateTarget = id;\r\n\r\n\t\t// Each element may override any of the auto-animate options\r\n\t\t// like transition easing, duration and delay via data-attributes\r\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\r\n\r\n\t\t// If we're using a custom element matcher the element options\r\n\t\t// may contain additional transition overrides\r\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\r\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\r\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\r\n\r\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\r\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\r\n\r\n\t\t// Maintain fragment visibility for matching elements when\r\n\t\t// we're navigating forwards, this way the viewer won't need\r\n\t\t// to step through the same fragments twice\r\n\t\tif( to.classList.contains( 'fragment' ) ) {\r\n\r\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\r\n\t\t\t// conflicts with fragment animations\r\n\t\t\tdelete toProps.styles['opacity'];\r\n\r\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\r\n\r\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\r\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\r\n\r\n\t\t\t\t// Only skip the fragment if the fragment animation style\r\n\t\t\t\t// remains unchanged\r\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\r\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// If translation and/or scaling are enabled, css transform\r\n\t\t// the 'to' element so that it matches the position and size\r\n\t\t// of the 'from' element\r\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\r\n\r\n\t\t\tlet presentationScale = this.Reveal.getScale();\r\n\r\n\t\t\tlet delta = {\r\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\r\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\r\n\t\t\t\tscaleX: fromProps.width / toProps.width,\r\n\t\t\t\tscaleY: fromProps.height / toProps.height\r\n\t\t\t};\r\n\r\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\r\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\r\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\r\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\r\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\r\n\r\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\r\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\r\n\r\n\t\t\t// No need to transform if nothing's changed\r\n\t\t\tif( translate || scale ) {\r\n\r\n\t\t\t\tlet transform = [];\r\n\r\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\r\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\r\n\r\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\r\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\r\n\r\n\t\t\t\ttoProps.styles['transform'] = 'none';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Delete all unchanged 'to' styles\r\n\t\tfor( let propertyName in toProps.styles ) {\r\n\t\t\tconst toValue = toProps.styles[propertyName];\r\n\t\t\tconst fromValue = fromProps.styles[propertyName];\r\n\r\n\t\t\tif( toValue === fromValue ) {\r\n\t\t\t\tdelete toProps.styles[propertyName];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// If these property values were set via a custom matcher providing\r\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\r\n\t\t\t\tif( toValue.explicitValue === true ) {\r\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( fromValue.explicitValue === true ) {\r\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet css = '';\r\n\r\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\r\n\r\n\t\t// Only create animate this element IF at least one style\r\n\t\t// property has changed\r\n\t\tif( toStyleProperties.length > 0 ) {\r\n\r\n\t\t\t// Instantly move to the 'from' state\r\n\t\t\tfromProps.styles['transition'] = 'none';\r\n\r\n\t\t\t// Animate towards the 'to' state\r\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\r\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\r\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\r\n\r\n\t\t\t// Build up our custom CSS. We need to override inline styles\r\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\r\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\r\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\r\n\t\t\t} ).join( '' );\r\n\r\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\r\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\r\n\t\t\t} ).join( '' );\r\n\r\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\r\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\r\n\r\n\t\t}\r\n\r\n\t\treturn css;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the auto-animate options for the given element.\r\n\t *\r\n\t * @param {HTMLElement} element Element to pick up options\r\n\t * from, either a slide or an animation target\r\n\t * @param {Object} [inheritedOptions] Optional set of existing\r\n\t * options\r\n\t */\r\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\r\n\r\n\t\tlet options = {\r\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\r\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\r\n\t\t\tdelay: 0\r\n\t\t};\r\n\r\n\t\toptions = extend( options, inheritedOptions );\r\n\r\n\t\t// Inherit options from parent elements\r\n\t\tif( element.closest && element.parentNode ) {\r\n\t\t\tlet autoAnimatedParent = element.parentNode.closest( '[data-auto-animate-target]' );\r\n\t\t\tif( autoAnimatedParent ) {\r\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( element.dataset.autoAnimateEasing ) {\r\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\r\n\t\t}\r\n\r\n\t\tif( element.dataset.autoAnimateDuration ) {\r\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\r\n\t\t}\r\n\r\n\t\tif( element.dataset.autoAnimateDelay ) {\r\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\r\n\t\t}\r\n\r\n\t\treturn options;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object containing all of the properties\r\n\t * that can be auto-animated for the given element and\r\n\t * their current computed values.\r\n\t *\r\n\t * @param {String} direction 'from' or 'to'\r\n\t */\r\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\r\n\t\tlet properties = { styles: [] };\r\n\r\n\t\t// Position and size\r\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\r\n\t\t\tlet bounds;\r\n\r\n\t\t\t// Custom auto-animate may optionally return a custom tailored\r\n\t\t\t// measurement function\r\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\r\n\t\t\t\tbounds = elementOptions.measure( element );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif( config.center ) {\r\n\t\t\t\t\t// More precise, but breaks when used in combination\r\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\r\n\t\t\t\t\tbounds = element.getBoundingClientRect();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet scale = this.Reveal.getScale();\r\n\t\t\t\t\tbounds = {\r\n\t\t\t\t\t\tx: element.offsetLeft * scale,\r\n\t\t\t\t\t\ty: element.offsetTop * scale,\r\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\r\n\t\t\t\t\t\theight: element.offsetHeight * scale\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tproperties.x = bounds.x;\r\n\t\t\tproperties.y = bounds.y;\r\n\t\t\tproperties.width = bounds.width;\r\n\t\t\tproperties.height = bounds.height;\r\n\t\t}\r\n\r\n\t\tconst computedStyles = getComputedStyle( element );\r\n\r\n\t\t// CSS styles\r\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\r\n\t\t\tlet value;\r\n\r\n\t\t\t// `style` is either the property name directly, or an object\r\n\t\t\t// definition of a style property\r\n\t\t\tif( typeof style === 'string' ) style = { property: style };\r\n\r\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\r\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\r\n\t\t\t}\r\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\r\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = computedStyles[style.property];\r\n\t\t\t}\r\n\r\n\t\t\tif( value !== '' ) {\r\n\t\t\t\tproperties.styles[style.property] = value;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\treturn properties;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Get a list of all element pairs that we can animate\r\n\t * between the given slides.\r\n\t *\r\n\t * @param {HTMLElement} fromSlide\r\n\t * @param {HTMLElement} toSlide\r\n\t *\r\n\t * @return {Array} Each value is an array where [0] is\r\n\t * the element we're animating from and [1] is the\r\n\t * element we're animating to\r\n\t */\r\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\r\n\r\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\r\n\r\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\r\n\r\n\t\tlet reserved = [];\r\n\r\n\t\t// Remove duplicate pairs\r\n\t\treturn pairs.filter( ( pair, index ) => {\r\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\r\n\t\t\t\treserved.push( pair.to );\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Identifies matching elements between slides.\r\n\t *\r\n\t * You can specify a custom matcher function by using\r\n\t * the `autoAnimateMatcher` config option.\r\n\t */\r\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\r\n\r\n\t\tlet pairs = [];\r\n\r\n\t\tconst codeNodes = 'pre';\r\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\r\n\t\tconst mediaNodes = 'img, video, iframe';\r\n\r\n\t\t// Eplicit matches via data-id\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\r\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\r\n\t\t} );\r\n\r\n\t\t// Text\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\r\n\t\t\treturn node.nodeName + ':::' + node.innerText;\r\n\t\t} );\r\n\r\n\t\t// Media\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\r\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\r\n\t\t} );\r\n\r\n\t\t// Code\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\r\n\t\t\treturn node.nodeName + ':::' + node.innerText;\r\n\t\t} );\r\n\r\n\t\tpairs.forEach( pair => {\r\n\r\n\t\t\t// Disable scale transformations on text nodes, we transiition\r\n\t\t\t// each individual text property instead\r\n\t\t\tif( pair.from.matches( textNodes ) ) {\r\n\t\t\t\tpair.options = { scale: false };\r\n\t\t\t}\r\n\t\t\t// Animate individual lines of code\r\n\t\t\telse if( pair.from.matches( codeNodes ) ) {\r\n\r\n\t\t\t\t// Transition the code block's width and height instead of scaling\r\n\t\t\t\t// to prevent its content from being squished\r\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\r\n\r\n\t\t\t\t// Lines of code\r\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\r\n\t\t\t\t\treturn node.textContent;\r\n\t\t\t\t}, {\r\n\t\t\t\t\tscale: false,\r\n\t\t\t\t\tstyles: [],\r\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// Line numbers\r\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-line[data-line-number]', node => {\r\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\r\n\t\t\t\t}, {\r\n\t\t\t\t\tscale: false,\r\n\t\t\t\t\tstyles: [ 'width' ],\r\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, this );\r\n\r\n\t\treturn pairs;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Helper method which returns a bounding box based on\r\n\t * the given elements offset coordinates.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t * @return {Object} x, y, width, height\r\n\t */\r\n\tgetLocalBoundingBox( element ) {\r\n\r\n\t\tconst presentationScale = this.Reveal.getScale();\r\n\r\n\t\treturn {\r\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\r\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\r\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\r\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finds matching elements between two slides.\r\n\t *\r\n\t * @param {Array} pairs            \tList of pairs to push matches to\r\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\r\n\t * @param {HTMLElement} toScope     Scope within the to element exists\r\n\t * @param {String} selector         CSS selector of the element to match\r\n\t * @param {Function} serializer     A function that accepts an element and returns\r\n\t *                                  a stringified ID based on its contents\r\n\t * @param {Object} animationOptions Optional config options for this pair\r\n\t */\r\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\r\n\r\n\t\tlet fromMatches = {};\r\n\t\tlet toMatches = {};\r\n\r\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\r\n\t\t\tconst key = serializer( element );\r\n\t\t\tif( typeof key === 'string' && key.length ) {\r\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\r\n\t\t\t\tfromMatches[key].push( element );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\r\n\t\t\tconst key = serializer( element );\r\n\t\t\ttoMatches[key] = toMatches[key] || [];\r\n\t\t\ttoMatches[key].push( element );\r\n\r\n\t\t\tlet fromElement;\r\n\r\n\t\t\t// Retrieve the 'from' element\r\n\t\t\tif( fromMatches[key] ) {\r\n\t\t\t\tconst pimaryIndex = toMatches[key].length - 1;\r\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\r\n\r\n\t\t\t\t// If there are multiple identical from elements, retrieve\r\n\t\t\t\t// the one at the same index as our to-element.\r\n\t\t\t\tif( fromMatches[key][ pimaryIndex ] ) {\r\n\t\t\t\t\tfromElement = fromMatches[key][ pimaryIndex ];\r\n\t\t\t\t\tfromMatches[key][ pimaryIndex ] = null;\r\n\t\t\t\t}\r\n\t\t\t\t// If there are no matching from-elements at the same index,\r\n\t\t\t\t// use the last one.\r\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\r\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\r\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// If we've got a matching pair, push it to the list of pairs\r\n\t\t\tif( fromElement ) {\r\n\t\t\t\tpairs.push({\r\n\t\t\t\t\tfrom: fromElement,\r\n\t\t\t\t\tto: element,\r\n\t\t\t\t\toptions: animationOptions\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a all elements within the given scope that should\r\n\t * be considered unmatched in an auto-animate transition. If\r\n\t * fading of unmatched elements is turned on, these elements\r\n\t * will fade when going between auto-animate slides.\r\n\t *\r\n\t * Note that parents of auto-animate targets are NOT considerd\r\n\t * unmatched since fading them would break the auto-animation.\r\n\t *\r\n\t * @param {HTMLElement} rootElement\r\n\t * @return {Array}\r\n\t */\r\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\r\n\r\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\r\n\r\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\r\n\r\n\t\t\t// The element is unmatched if\r\n\t\t\t// - It is not an auto-animate target\r\n\t\t\t// - It does not contain any auto-animate targets\r\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\r\n\t\t\t\tresult.push( element );\r\n\t\t\t}\r\n\r\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\r\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}, [] );\r\n\r\n\t}\r\n\r\n}","import { extend, queryAll } from '../utils/util.js'\r\n\r\n/**\r\n * Handles sorting and navigation of slide fragments.\r\n * Fragments are elements within a slide that are\r\n * revealed/animated incrementally.\r\n */\r\nexport default class Fragments {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.fragments === false ) {\r\n\t\t\tthis.disable();\r\n\t\t}\r\n\t\telse if( oldConfig.fragments === false ) {\r\n\t\t\tthis.enable();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If fragments are disabled in the deck, they should all be\r\n\t * visible rather than stepped through.\r\n\t */\r\n\tdisable() {\r\n\r\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\r\n\t\t\telement.classList.add( 'visible' );\r\n\t\t\telement.classList.remove( 'current-fragment' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reverse of #disable(). Only called if fragments have\r\n\t * previously been disabled.\r\n\t */\r\n\tenable() {\r\n\r\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\r\n\t\t\telement.classList.remove( 'visible' );\r\n\t\t\telement.classList.remove( 'current-fragment' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object describing the available fragment\r\n\t * directions.\r\n\t *\r\n\t * @return {{prev: boolean, next: boolean}}\r\n\t */\r\n\tavailableRoutes() {\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\r\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\r\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\r\n\r\n\t\t\treturn {\r\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\r\n\t\t\t\tnext: !!hiddenFragments.length\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn { prev: false, next: false };\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Return a sorted fragments list, ordered by an increasing\r\n\t * \"data-fragment-index\" attribute.\r\n\t *\r\n\t * Fragments will be revealed in the order that they are returned by\r\n\t * this function, so you can use the index attributes to control the\r\n\t * order of fragment appearance.\r\n\t *\r\n\t * To maintain a sensible default fragment order, fragments are presumed\r\n\t * to be passed in document order. This function adds a \"fragment-index\"\r\n\t * attribute to each node if such an attribute is not already present,\r\n\t * and sets that attribute to an integer value which is the position of\r\n\t * the fragment within the fragments list.\r\n\t *\r\n\t * @param {object[]|*} fragments\r\n\t * @param {boolean} grouped If true the returned array will contain\r\n\t * nested arrays for all fragments with the same index\r\n\t * @return {object[]} sorted Sorted array of fragments\r\n\t */\r\n\tsort( fragments, grouped = false ) {\r\n\r\n\t\tfragments = Array.from( fragments );\r\n\r\n\t\tlet ordered = [],\r\n\t\t\tunordered = [],\r\n\t\t\tsorted = [];\r\n\r\n\t\t// Group ordered and unordered elements\r\n\t\tfragments.forEach( fragment => {\r\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\r\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\r\n\r\n\t\t\t\tif( !ordered[index] ) {\r\n\t\t\t\t\tordered[index] = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tordered[index].push( fragment );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tunordered.push( [ fragment ] );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Append fragments without explicit indices in their\r\n\t\t// DOM order\r\n\t\tordered = ordered.concat( unordered );\r\n\r\n\t\t// Manually count the index up per group to ensure there\r\n\t\t// are no gaps\r\n\t\tlet index = 0;\r\n\r\n\t\t// Push all fragments in their sorted order to an array,\r\n\t\t// this flattens the groups\r\n\t\tordered.forEach( group => {\r\n\t\t\tgroup.forEach( fragment => {\r\n\t\t\t\tsorted.push( fragment );\r\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\r\n\t\t\t} );\r\n\r\n\t\t\tindex ++;\r\n\t\t} );\r\n\r\n\t\treturn grouped === true ? ordered : sorted;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sorts and formats all of fragments in the\r\n\t * presentation.\r\n\t */\r\n\tsortAll() {\r\n\r\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\r\n\r\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\r\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\r\n\r\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\r\n\r\n\t\t\t}, this );\r\n\r\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Refreshes the fragments on the current slide so that they\r\n\t * have the appropriate classes (.visible + .current-fragment).\r\n\t *\r\n\t * @param {number} [index] The index of the current fragment\r\n\t * @param {array} [fragments] Array containing all fragments\r\n\t * in the current slide\r\n\t *\r\n\t * @return {{shown: array, hidden: array}}\r\n\t */\r\n\tupdate( index, fragments ) {\r\n\r\n\t\tlet changedFragments = {\r\n\t\t\tshown: [],\r\n\t\t\thidden: []\r\n\t\t};\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\r\n\r\n\t\t\tfragments = fragments || this.sort( currentSlide.querySelectorAll( '.fragment' ) );\r\n\r\n\t\t\tif( fragments.length ) {\r\n\r\n\t\t\t\tlet maxIndex = 0;\r\n\r\n\t\t\t\tif( typeof index !== 'number' ) {\r\n\t\t\t\t\tlet currentFragment = this.sort( currentSlide.querySelectorAll( '.fragment.visible' ) ).pop();\r\n\t\t\t\t\tif( currentFragment ) {\r\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\r\n\r\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\r\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\r\n\r\n\t\t\t\t\t// Visible fragments\r\n\t\t\t\t\tif( i <= index ) {\r\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\r\n\t\t\t\t\t\tel.classList.add( 'visible' );\r\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\r\n\r\n\t\t\t\t\t\tif( i === index ) {\r\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\r\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\r\n\r\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\r\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif( !wasVisible ) {\r\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\r\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\t\t\ttarget: el,\r\n\t\t\t\t\t\t\t\ttype: 'visible',\r\n\t\t\t\t\t\t\t\tbubbles: false\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Hidden fragments\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\r\n\t\t\t\t\t\tel.classList.remove( 'visible' );\r\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\r\n\r\n\t\t\t\t\t\tif( wasVisible ) {\r\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\r\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\t\t\ttarget: el,\r\n\t\t\t\t\t\t\t\ttype: 'hidden',\r\n\t\t\t\t\t\t\t\tbubbles: false\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// Write the current fragment index to the slide <section>.\r\n\t\t\t\t// This can be used by end users to apply styles based on\r\n\t\t\t\t// the current fragment index.\r\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\r\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\r\n\t\t\t\tcurrentSlide.setAttribute( 'data-fragment', index );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn changedFragments;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the fragments on the given slide so that they have\r\n\t * valid indices. Call this if fragments are changed in the DOM\r\n\t * after reveal.js has already initialized.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t * @return {Array} a list of the HTML fragments that were synced\r\n\t */\r\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\r\n\r\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the specified slide fragment.\r\n\t *\r\n\t * @param {?number} index The index of the fragment that\r\n\t * should be shown, -1 means all are invisible\r\n\t * @param {number} offset Integer offset to apply to the\r\n\t * fragment index\r\n\t *\r\n\t * @return {boolean} true if a change was made in any\r\n\t * fragments visibility as part of this call\r\n\t */\r\n\tgoto( index, offset = 0 ) {\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\r\n\r\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\r\n\t\t\tif( fragments.length ) {\r\n\r\n\t\t\t\t// If no index is specified, find the current\r\n\t\t\t\tif( typeof index !== 'number' ) {\r\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\r\n\r\n\t\t\t\t\tif( lastVisibleFragment ) {\r\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tindex = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply the offset if there is one\r\n\t\t\t\tindex += offset;\r\n\r\n\t\t\t\tlet changedFragments = this.update( index, fragments );\r\n\r\n\t\t\t\tif( changedFragments.hidden.length ) {\r\n\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\ttype: 'fragmenthidden',\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\r\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( changedFragments.shown.length ) {\r\n\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\ttype: 'fragmentshown',\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\r\n\t\t\t\t\t\t\tfragments: changedFragments.shown\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.Reveal.controls.update();\r\n\t\t\t\tthis.Reveal.progress.update();\r\n\r\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\r\n\t\t\t\t\tthis.Reveal.location.writeURL();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the next slide fragment.\r\n\t *\r\n\t * @return {boolean} true if there was a next fragment,\r\n\t * false otherwise\r\n\t */\r\n\tnext() {\r\n\r\n\t\treturn this.goto( null, 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the previous slide fragment.\r\n\t *\r\n\t * @return {boolean} true if there was a previous fragment,\r\n\t * false otherwise\r\n\t */\r\n\tprev() {\r\n\r\n\t\treturn this.goto( null, -1 );\r\n\r\n\t}\r\n\r\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\r\nimport { extend, queryAll, transformElement } from '../utils/util.js'\r\n\r\n/**\r\n * Handles all logic related to the overview mode\r\n * (birds-eye view of all slides).\r\n */\r\nexport default class Overview {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.active = false;\r\n\r\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Displays the overview of slides (quick nav) by scaling\r\n\t * down and arranging all slide elements.\r\n\t */\r\n\tactivate() {\r\n\r\n\t\t// Only proceed if enabled in config\r\n\t\tif( this.Reveal.getConfig().overview && !this.isActive() ) {\r\n\r\n\t\t\tthis.active = true;\r\n\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\r\n\r\n\t\t\t// Don't auto-slide while in overview mode\r\n\t\t\tthis.Reveal.cancelAutoSlide();\r\n\r\n\t\t\t// Move the backgrounds element into the slide container to\r\n\t\t\t// that the same scaling is applied\r\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\r\n\r\n\t\t\t// Clicking on an overview slide navigates to it\r\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\r\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\r\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// Calculate slide sizes\r\n\t\t\tconst margin = 70;\r\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\r\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\r\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\r\n\r\n\t\t\t// Reverse in RTL mode\r\n\t\t\tif( this.Reveal.getConfig().rtl ) {\r\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\r\n\t\t\t}\r\n\r\n\t\t\tthis.Reveal.updateSlidesVisibility();\r\n\r\n\t\t\tthis.layout();\r\n\t\t\tthis.update();\r\n\r\n\t\t\tthis.Reveal.layout();\r\n\r\n\t\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\t\t// Notify observers of the overview showing\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: 'overviewshown',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\t'indexh': indices.h,\r\n\t\t\t\t\t'indexv': indices.v,\r\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Uses CSS transforms to position all slides in a grid for\r\n\t * display inside of the overview mode.\r\n\t */\r\n\tlayout() {\r\n\r\n\t\t// Layout slides\r\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\r\n\t\t\thslide.setAttribute( 'data-index-h', h );\r\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\r\n\r\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\r\n\r\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\r\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\r\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\r\n\r\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Layout slide backgrounds\r\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\r\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\r\n\r\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\r\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\r\n\t\t\t} );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the overview viewport to the current slides.\r\n\t * Called each time the current slide changes.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\r\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\r\n\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\tthis.Reveal.transformSlides( {\r\n\t\t\toverview: [\r\n\t\t\t\t'scale('+ scale +')',\r\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\r\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\r\n\t\t\t].join( ' ' )\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Exits the slide overview and enters the currently\r\n\t * active slide.\r\n\t */\r\n\tdeactivate() {\r\n\r\n\t\t// Only proceed if enabled in config\r\n\t\tif( this.Reveal.getConfig().overview ) {\r\n\r\n\t\t\tthis.active = false;\r\n\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\r\n\r\n\t\t\t// Temporarily add a class so that transitions can do different things\r\n\t\t\t// depending on whether they are exiting/entering overview, or just\r\n\t\t\t// moving from slide to slide\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\r\n\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\r\n\t\t\t}, 1 );\r\n\r\n\t\t\t// Move the background element back out\r\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\r\n\r\n\t\t\t// Clean up changes made to slides\r\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\r\n\t\t\t\ttransformElement( slide, '' );\r\n\r\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\r\n\t\t\t} );\r\n\r\n\t\t\t// Clean up changes made to backgrounds\r\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\r\n\t\t\t\ttransformElement( background, '' );\r\n\t\t\t} );\r\n\r\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\r\n\r\n\t\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\r\n\t\t\tthis.Reveal.layout();\r\n\t\t\tthis.Reveal.cueAutoSlide();\r\n\r\n\t\t\t// Notify observers of the overview hiding\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: 'overviewhidden',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\t'indexh': indices.h,\r\n\t\t\t\t\t'indexv': indices.v,\r\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the slide overview mode on and off.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which overrides the\r\n\t * toggle logic and forcibly sets the desired state. True means\r\n\t * overview is open, false means it's closed.\r\n\t */\r\n\ttoggle( override ) {\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? this.activate() : this.deactivate();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the overview is currently active.\r\n\t *\r\n\t * @return {Boolean} true if the overview is active,\r\n\t * false otherwise\r\n\t */\r\n\tisActive() {\r\n\r\n\t\treturn this.active;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when a slide is and we're in the overview.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonSlideClicked( event ) {\r\n\r\n\t\tif( this.isActive() ) {\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tlet element = event.target;\r\n\r\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t}\r\n\r\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\r\n\r\n\t\t\t\tthis.deactivate();\r\n\r\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\r\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\r\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\r\n\r\n\t\t\t\t\tthis.Reveal.slide( h, v );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","import { enterFullscreen } from '../utils/util.js'\r\n\r\n/**\r\n * Handles all reveal.js keyboard interactions.\r\n */\r\nexport default class Keyboard {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// A key:value map of keyboard keys and descriptions of\r\n\t\t// the actions they trigger\r\n\t\tthis.shortcuts = {};\r\n\r\n\t\t// Holds custom key code mappings\r\n\t\tthis.bindings = {};\r\n\r\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\r\n\t\tthis.onDocumentKeyPress = this.onDocumentKeyPress.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\r\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\r\n\t\t\tthis.shortcuts['P']             = 'Previous slide';\r\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\r\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\r\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\r\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\r\n\t\t}\r\n\r\n\t\tthis.shortcuts['Home  ,  Shift &#8592;']        = 'First slide';\r\n\t\tthis.shortcuts['End  ,  Shift &#8594;']         = 'Last slide';\r\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\r\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\r\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Starts listening for keyboard events.\r\n\t */\r\n\tbind() {\r\n\r\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\r\n\t\tdocument.addEventListener( 'keypress', this.onDocumentKeyPress, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Stops listening for keyboard events.\r\n\t */\r\n\tunbind() {\r\n\r\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\r\n\t\tdocument.removeEventListener( 'keypress', this.onDocumentKeyPress, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Add a custom key binding with optional description to\r\n\t * be added to the help screen.\r\n\t */\r\n\taddKeyBinding( binding, callback ) {\r\n\r\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\r\n\t\t\tthis.bindings[binding.keyCode] = {\r\n\t\t\t\tcallback: callback,\r\n\t\t\t\tkey: binding.key,\r\n\t\t\t\tdescription: binding.description\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.bindings[binding] = {\r\n\t\t\t\tcallback: callback,\r\n\t\t\t\tkey: null,\r\n\t\t\t\tdescription: null\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified custom key binding.\r\n\t */\r\n\tremoveKeyBinding( keyCode ) {\r\n\r\n\t\tdelete this.bindings[keyCode];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Programmatically triggers a keyboard event\r\n\t *\r\n\t * @param {int} keyCode\r\n\t */\r\n\ttriggerKey( keyCode ) {\r\n\r\n\t\tthis.onDocumentKeyDown( { keyCode } );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a new shortcut to include in the help overlay\r\n\t *\r\n\t * @param {String} key\r\n\t * @param {String} value\r\n\t */\r\n\tregisterKeyboardShortcut( key, value ) {\r\n\r\n\t\tthis.shortcuts[key] = value;\r\n\r\n\t}\r\n\r\n\tgetShortcuts() {\r\n\r\n\t\treturn this.shortcuts;\r\n\r\n\t}\r\n\r\n\tgetBindings() {\r\n\r\n\t\treturn this.bindings;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the document level 'keypress' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentKeyPress( event ) {\r\n\r\n\t\t// Check if the pressed key is question mark\r\n\t\tif( event.shiftKey && event.charCode === 63 ) {\r\n\t\t\tthis.Reveal.toggleHelp();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the document level 'keydown' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentKeyDown( event ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\r\n\t\t// If there's a condition specified and it returns false,\r\n\t\t// ignore this event\r\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// If keyboardCondition is set, only capture keyboard events\r\n\t\t// for embedded decks when they are focused\r\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Shorthand\r\n\t\tlet keyCode = event.keyCode;\r\n\r\n\t\t// Remember if auto-sliding was paused so we can toggle it\r\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\r\n\r\n\t\tthis.Reveal.onUserInput( event );\r\n\r\n\t\t// Is there a focused element that could be using the keyboard?\r\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\r\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\r\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\r\n\r\n\t\t// Whitelist specific modified + keycode combinations\r\n\t\tlet prevSlideShortcut = event.shiftKey && event.keyCode === 32;\r\n\t\tlet firstSlideShortcut = event.shiftKey && keyCode === 37;\r\n\t\tlet lastSlideShortcut = event.shiftKey && keyCode === 39;\r\n\r\n\t\t// Prevent all other events when a modifier is pressed\r\n\t\tlet unusedModifier = \t!prevSlideShortcut && !firstSlideShortcut && !lastSlideShortcut &&\r\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\r\n\r\n\t\t// Disregard the event if there's a focused element or a\r\n\t\t// keyboard modifier key is present\r\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\r\n\r\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\r\n\t\tlet resumeKeyCodes = [66,86,190,191];\r\n\t\tlet key;\r\n\r\n\t\t// Custom key bindings for togglePause should be able to resume\r\n\t\tif( typeof config.keyboard === 'object' ) {\r\n\t\t\tfor( key in config.keyboard ) {\r\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\r\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Use linear navigation if we're configured to OR if\r\n\t\t// the presentation is one-dimensional\r\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\r\n\r\n\t\tlet triggered = false;\r\n\r\n\t\t// 1. User defined key bindings\r\n\t\tif( typeof config.keyboard === 'object' ) {\r\n\r\n\t\t\tfor( key in config.keyboard ) {\r\n\r\n\t\t\t\t// Check if this binding matches the pressed key\r\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\r\n\r\n\t\t\t\t\tlet value = config.keyboard[ key ];\r\n\r\n\t\t\t\t\t// Callback function\r\n\t\t\t\t\tif( typeof value === 'function' ) {\r\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// String shortcuts to reveal.js API\r\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\r\n\t\t\t\t\t\tthis.Reveal[ value ].call();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttriggered = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// 2. Registered custom key bindings\r\n\t\tif( triggered === false ) {\r\n\r\n\t\t\tfor( key in this.bindings ) {\r\n\r\n\t\t\t\t// Check if this binding matches the pressed key\r\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\r\n\r\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\r\n\r\n\t\t\t\t\t// Callback function\r\n\t\t\t\t\tif( typeof action === 'function' ) {\r\n\t\t\t\t\t\taction.apply( null, [ event ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// String shortcuts to reveal.js API\r\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\r\n\t\t\t\t\t\tthis.Reveal[ action ].call();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttriggered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 3. System defined key bindings\r\n\t\tif( triggered === false ) {\r\n\r\n\t\t\t// Assume true and try to prove false\r\n\t\t\ttriggered = true;\r\n\r\n\t\t\t// P, PAGE UP\r\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\r\n\t\t\t\tthis.Reveal.prev();\r\n\t\t\t}\r\n\t\t\t// N, PAGE DOWN\r\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\r\n\t\t\t\tthis.Reveal.next();\r\n\t\t\t}\r\n\t\t\t// H, LEFT\r\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\r\n\t\t\t\tif( firstSlideShortcut ) {\r\n\t\t\t\t\tthis.Reveal.slide( 0 );\r\n\t\t\t\t}\r\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.left();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// L, RIGHT\r\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\r\n\t\t\t\tif( lastSlideShortcut ) {\r\n\t\t\t\t\tthis.Reveal.slide( Number.MAX_VALUE );\r\n\t\t\t\t}\r\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.right();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// K, UP\r\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\r\n\t\t\t\tif( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.up();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// J, DOWN\r\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\r\n\t\t\t\tif( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.down();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// HOME\r\n\t\t\telse if( keyCode === 36 ) {\r\n\t\t\t\tthis.Reveal.slide( 0 );\r\n\t\t\t}\r\n\t\t\t// END\r\n\t\t\telse if( keyCode === 35 ) {\r\n\t\t\t\tthis.Reveal.slide( Number.MAX_VALUE );\r\n\t\t\t}\r\n\t\t\t// SPACE\r\n\t\t\telse if( keyCode === 32 ) {\r\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\r\n\t\t\t\t\tthis.Reveal.overview.deactivate();\r\n\t\t\t\t}\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\r\n\t\t\telse if( keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191 ) {\r\n\t\t\t\tthis.Reveal.togglePause();\r\n\t\t\t}\r\n\t\t\t// F\r\n\t\t\telse if( keyCode === 70 ) {\r\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\r\n\t\t\t}\r\n\t\t\t// A\r\n\t\t\telse if( keyCode === 65 ) {\r\n\t\t\t\tif ( config.autoSlideStoppable ) {\r\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttriggered = false;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// If the input resulted in a triggered action we should prevent\r\n\t\t// the browsers default behavior\r\n\t\tif( triggered ) {\r\n\t\t\tevent.preventDefault && event.preventDefault();\r\n\t\t}\r\n\t\t// ESC or O key\r\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\r\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\r\n\t\t\t\tthis.Reveal.overview.toggle();\r\n\t\t\t}\r\n\r\n\t\t\tevent.preventDefault && event.preventDefault();\r\n\t\t}\r\n\r\n\t\t// If auto-sliding is enabled we need to cue up\r\n\t\t// another timeout\r\n\t\tthis.Reveal.cueAutoSlide();\r\n\r\n\t}\r\n\r\n}","import { supportsHistoryAPI } from '../utils/device.js'\r\n\r\n/**\r\n * Reads and writes the URL based on reveal.js' current state.\r\n */\r\nexport default class Location {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\r\n\t\tthis.writeURLTimeout = 0;\r\n\r\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the current URL (hash) and navigates accordingly.\r\n\t */\r\n\treadURL() {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\t\tlet indices = this.Reveal.getIndices();\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\r\n\t\tlet hash = window.location.hash;\r\n\r\n\t\t// Attempt to parse the hash as either an index or name\r\n\t\tlet bits = hash.slice( 2 ).split( '/' ),\r\n\t\t\tname = hash.replace( /#\\/?/gi, '' );\r\n\r\n\t\t// If the first bit is not fully numeric and there is a name we\r\n\t\t// can assume that this is a named link\r\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\r\n\t\t\tlet element;\r\n\r\n\t\t\tlet f;\r\n\r\n\t\t\t// Parse named links with fragments (#/named-link/2)\r\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\r\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\r\n\t\t\t\tf = isNaN(f) ? undefined : f;\r\n\t\t\t\tname = name.split( '/' ).shift();\r\n\t\t\t}\r\n\r\n\t\t\t// Ensure the named link is a valid HTML ID attribute\r\n\t\t\ttry {\r\n\t\t\t\telement = document.getElementById( decodeURIComponent( name ) );\r\n\t\t\t}\r\n\t\t\tcatch ( error ) { }\r\n\r\n\t\t\t// Ensure that we're not already on a slide with the same name\r\n\t\t\tlet isSameNameAsCurrentSlide = currentSlide ? currentSlide.getAttribute( 'id' ) === name : false;\r\n\r\n\t\t\tif( element ) {\r\n\t\t\t\t// If the slide exists and is not the current slide...\r\n\t\t\t\tif ( !isSameNameAsCurrentSlide || typeof f !== 'undefined' ) {\r\n\t\t\t\t\t// ...find the position of the named slide and navigate to it\r\n\t\t\t\t\tlet slideIndices = this.Reveal.getIndices( element );\r\n\t\t\t\t\tthis.Reveal.slide( slideIndices.h, slideIndices.v, f );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// If the slide doesn't exist, navigate to the current slide\r\n\t\t\telse {\r\n\t\t\t\tthis.Reveal.slide( indices.h || 0, indices.v || 0 );\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex ? 1 : 0;\r\n\r\n\t\t\t// Read the index components of the hash\r\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\r\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\r\n\t\t\t\tf;\r\n\r\n\t\t\tif( config.fragmentInURL ) {\r\n\t\t\t\tf = parseInt( bits[2], 10 );\r\n\t\t\t\tif( isNaN( f ) ) {\r\n\t\t\t\t\tf = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif( h !== indices.h || v !== indices.v || f !== undefined ) {\r\n\t\t\t\tthis.Reveal.slide( h, v, f );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the page URL (hash) to reflect the current\r\n\t * state.\r\n\t *\r\n\t * @param {number} delay The time in ms to wait before\r\n\t * writing the hash\r\n\t */\r\n\twriteURL( delay ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\r\n\t\t// Make sure there's never more than one timeout running\r\n\t\tclearTimeout( this.writeURLTimeout );\r\n\r\n\t\t// If a delay is specified, timeout this call\r\n\t\tif( typeof delay === 'number' ) {\r\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\r\n\t\t}\r\n\t\telse if( currentSlide ) {\r\n\t\t\t// If we're configured to push to history OR the history\r\n\t\t\t// API is not avaialble.\r\n\t\t\tif( config.history || supportsHistoryAPI === false ) {\r\n\t\t\t\twindow.location.hash = this.getHash();\r\n\t\t\t}\r\n\t\t\t// If we're configured to reflect the current slide in the\r\n\t\t\t// URL without pushing to history.\r\n\t\t\telse if( config.hash ) {\r\n\t\t\t\twindow.history.replaceState( null, null, '#' + this.getHash() );\r\n\t\t\t}\r\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\r\n\t\t\t// anchors on pages where reveal.js is running. Removed\r\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\r\n\t\t\t//\r\n\t\t\t// If history and hash are both disabled, a hash may still\r\n\t\t\t// be added to the URL by clicking on a href with a hash\r\n\t\t\t// target. Counter this by always removing the hash.\r\n\t\t\t// else {\r\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\r\n\t\t\t// }\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Return a hash URL that will resolve to the given slide location.\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\r\n\t */\r\n\tgetHash( slide ) {\r\n\r\n\t\tlet url = '/';\r\n\r\n\t\t// Attempt to create a named link based on the slide's ID\r\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\r\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\r\n\t\tif( id ) {\r\n\t\t\tid = encodeURIComponent( id );\r\n\t\t}\r\n\r\n\t\tlet index = this.Reveal.getIndices( slide );\r\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\r\n\t\t\tindex.f = undefined;\r\n\t\t}\r\n\r\n\t\t// If the current slide has an ID, use that as a named link,\r\n\t\t// but we don't support named links with a fragment index\r\n\t\tif( typeof id === 'string' && id.length ) {\r\n\t\t\turl = '/' + id;\r\n\r\n\t\t\t// If there is also a fragment, append that at the end\r\n\t\t\t// of the named link, like: #/named-link/2\r\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\r\n\t\t}\r\n\t\t// Otherwise use the /h/v index\r\n\t\telse {\r\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\r\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\r\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\r\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the window level 'hashchange' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tonWindowHashChange( event ) {\r\n\r\n\t\tthis.readURL();\r\n\r\n\t}\r\n\r\n}","import { queryAll } from '../utils/util.js'\r\nimport { isAndroid } from '../utils/device.js'\r\n\r\n/**\r\n * Manages our presentation controls. This includes both\r\n * the built-in control arrows as well as event monitoring\r\n * of any elements within the presentation with either of the\r\n * following helper classes:\r\n * - .navigate-up\r\n * - .navigate-right\r\n * - .navigate-down\r\n * - .navigate-left\r\n * - .navigate-next\r\n * - .navigate-prev\r\n */\r\nexport default class Controls {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\r\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\r\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\r\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\r\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\r\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst rtl = this.Reveal.getConfig().rtl;\r\n\t\tconst revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\tthis.element = document.createElement( 'aside' );\r\n\t\tthis.element.className = 'controls';\r\n\t\tthis.element.innerHTML =\r\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\r\n\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t\t// There can be multiple instances of controls throughout the page\r\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\r\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\r\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\r\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\r\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\r\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\r\n\r\n\t\t// The left, right and down arrows in the standard reveal.js controls\r\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\r\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\r\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\r\n\r\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\r\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\t// Listen to both touch and click events, in case the device\r\n\t\t// supports both\r\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\r\n\r\n\t\t// Only support touch for Android, fixes double navigations in\r\n\t\t// stock browser\r\n\t\tif( isAndroid ) {\r\n\t\t\tpointerEvents = [ 'touchstart' ];\r\n\t\t}\r\n\r\n\t\tpointerEvents.forEach( eventName => {\r\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\r\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\r\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\r\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\r\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\r\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\r\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\r\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\r\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\r\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\r\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\r\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the state of all control/navigation arrows.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\tlet routes = this.Reveal.availableRoutes();\r\n\r\n\t\t// Remove the 'enabled' class from all directions\r\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\r\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\r\n\r\n\t\t\t// Set 'disabled' attribute on all directions\r\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\r\n\t\t} );\r\n\r\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\r\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\r\n\t\t// Prev/next buttons\r\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\r\n\t\t// Highlight fragment directions\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide ) {\r\n\r\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\r\n\r\n\t\t\t// Always apply fragment decorator to prev/next buttons\r\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\r\n\t\t\t// Apply fragment decorators to directional buttons based on\r\n\t\t\t// what slide axis they are in\r\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\r\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\r\n\r\n\t\t\tlet indices = this.Reveal.getIndices();\r\n\r\n\t\t\t// Highlight control arrows with an animation to ensure\r\n\t\t\t// that the viewer knows how to navigate\r\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\r\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\r\n\r\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\r\n\r\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\r\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\r\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Event handlers for navigation control buttons.\r\n\t */\r\n\tonNavigateLeftClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\r\n\t\t\tthis.Reveal.prev();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.Reveal.left();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tonNavigateRightClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\r\n\t\t\tthis.Reveal.next();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.Reveal.right();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tonNavigateUpClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.up();\r\n\r\n\t}\r\n\r\n\tonNavigateDownClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.down();\r\n\r\n\t}\r\n\r\n\tonNavigatePrevClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.prev();\r\n\r\n\t}\r\n\r\n\tonNavigateNextClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.next();\r\n\r\n\t}\r\n\r\n\r\n}","/**\r\n * Creates a visual progress bar for the presentation.\r\n */\r\nexport default class Progress {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'progress';\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t\tthis.bar = document.createElement( 'span' );\r\n\t\tthis.element.appendChild( this.bar );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\r\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\r\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the progress bar to reflect the current slide.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\t// Update progress if enabled\r\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\r\n\r\n\t\t\tthis.bar.style.transform = 'scaleX('+ this.Reveal.getProgress() +')';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetMaxWidth() {\r\n\r\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clicking on the progress bar results in a navigation to the\r\n\t * closest approximate horizontal slide using this equation:\r\n\t *\r\n\t * ( clickX / presentationWidth ) * numberOfSlides\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonProgressClicked( event ) {\r\n\r\n\t\tthis.Reveal.onUserInput( event );\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tlet slidesTotal = this.Reveal.getHorizontalSlides().length;\r\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\r\n\r\n\t\tif( this.Reveal.getConfig().rtl ) {\r\n\t\t\tslideIndex = slidesTotal - slideIndex;\r\n\t\t}\r\n\r\n\t\tthis.Reveal.slide( slideIndex );\r\n\r\n\t}\r\n\r\n\r\n}","/**\r\n * Handles hiding of the pointer/cursor when inactive.\r\n */\r\nexport default class Pointer {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Throttles mouse wheel navigation\r\n\t\tthis.lastMouseWheelStep = 0;\r\n\r\n\t\t// Is the mouse pointer currently hidden from view\r\n\t\tthis.cursorHidden = false;\r\n\r\n\t\t// Timeout used to determine when the cursor is inactive\r\n\t\tthis.cursorInactiveTimeout = 0;\r\n\r\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\r\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.mouseWheel ) {\r\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\r\n\t\t\tdocument.addEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\r\n\t\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\r\n\t\t}\r\n\r\n\t\t// Auto-hide the mouse pointer when its inactive\r\n\t\tif( config.hideInactiveCursor ) {\r\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\r\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.showCursor();\r\n\r\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\r\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the mouse pointer after it has been hidden with\r\n\t * #hideCursor.\r\n\t */\r\n\tshowCursor() {\r\n\r\n\t\tif( this.cursorHidden ) {\r\n\t\t\tthis.cursorHidden = false;\r\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the mouse pointer when it's on top of the .reveal\r\n\t * container.\r\n\t */\r\n\thideCursor() {\r\n\r\n\t\tif( this.cursorHidden === false ) {\r\n\t\t\tthis.cursorHidden = true;\r\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called whenever there is mouse input at the document level\r\n\t * to determine if the cursor is active or not.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentCursorActive( event ) {\r\n\r\n\t\tthis.showCursor();\r\n\r\n\t\tclearTimeout( this.cursorInactiveTimeout );\r\n\r\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\r\n\t * multiple slides.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentMouseScroll( event ) {\r\n\r\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\r\n\r\n\t\t\tthis.lastMouseWheelStep = Date.now();\r\n\r\n\t\t\tlet delta = event.detail || -event.wheelDelta;\r\n\t\t\tif( delta > 0 ) {\r\n\t\t\t\tthis.Reveal.next();\r\n\t\t\t}\r\n\t\t\telse if( delta < 0 ) {\r\n\t\t\t\tthis.Reveal.prev();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * Loads a JavaScript file from the given URL and executes it.\r\n *\r\n * @param {string} url Address of the .js file to load\r\n * @param {function} callback Method to invoke when the script\r\n * has loaded and executed\r\n */\r\nexport const loadScript = ( url, callback ) => {\r\n\r\n\tconst script = document.createElement( 'script' );\r\n\tscript.type = 'text/javascript';\r\n\tscript.async = false;\r\n\tscript.defer = false;\r\n\tscript.src = url;\r\n\r\n\tif( typeof callback === 'function' ) {\r\n\r\n\t\t// Success callback\r\n\t\tscript.onload = script.onreadystatechange = event => {\r\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\r\n\r\n\t\t\t\t// Kill event listeners\r\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\r\n\r\n\t\t\t\tcallback();\r\n\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Error callback\r\n\t\tscript.onerror = err => {\r\n\r\n\t\t\t// Kill event listeners\r\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\r\n\r\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t// Append the script at the end of <head>\r\n\tconst head = document.querySelector( 'head' );\r\n\thead.insertBefore( script, head.lastChild );\r\n\r\n}","import { loadScript } from '../utils/loader.js'\r\n\r\n/**\r\n * Manages loading and registering of reveal.js plugins.\r\n */\r\nexport default class Plugins {\r\n\r\n\tconstructor( reveal ) {\r\n\r\n\t\tthis.Reveal = reveal;\r\n\r\n\t\t// Flags our current state (idle -> loading -> loaded)\r\n\t\tthis.state = 'idle';\r\n\r\n\t\t// An id:instance map of currently registed plugins\r\n\t\tthis.registeredPlugins = {};\r\n\r\n\t\tthis.asyncDependencies = [];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Loads reveal.js dependencies, registers and\r\n\t * initializes plugins.\r\n\t *\r\n\t * Plugins are direct references to a reveal.js plugin\r\n\t * object that we register and initialize after any\r\n\t * synchronous dependencies have loaded.\r\n\t *\r\n\t * Dependencies are defined via the 'dependencies' config\r\n\t * option and will be loaded prior to starting reveal.js.\r\n\t * Some dependencies may have an 'async' flag, if so they\r\n\t * will load after reveal.js has been started up.\r\n\t */\r\n\tload( plugins, dependencies ) {\r\n\r\n\t\tthis.state = 'loading';\r\n\r\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\r\n\r\n\t\treturn new Promise( resolve => {\r\n\r\n\t\t\tlet scripts = [],\r\n\t\t\t\tscriptsToLoad = 0;\r\n\r\n\t\t\tdependencies.forEach( s => {\r\n\t\t\t\t// Load if there's no condition or the condition is truthy\r\n\t\t\t\tif( !s.condition || s.condition() ) {\r\n\t\t\t\t\tif( s.async ) {\r\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tscripts.push( s );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tif( scripts.length ) {\r\n\t\t\t\tscriptsToLoad = scripts.length;\r\n\r\n\t\t\t\tconst scriptLoadedCallback = (s) => {\r\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\r\n\r\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\r\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Load synchronous scripts\r\n\t\t\t\tscripts.forEach( s => {\r\n\t\t\t\t\tif( typeof s.id === 'string' ) {\r\n\t\t\t\t\t\tthis.registerPlugin( s );\r\n\t\t\t\t\t\tscriptLoadedCallback( s );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\r\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\r\n\t\t\t\t\t\tscriptLoadedCallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.initPlugins().then( resolve );\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes our plugins and waits for them to be ready\r\n\t * before proceeding.\r\n\t */\r\n\tinitPlugins() {\r\n\r\n\t\treturn new Promise( resolve => {\r\n\r\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\r\n\t\t\tlet pluginsToInitialize = pluginValues.length;\r\n\r\n\t\t\t// If there are no plugins, skip this step\r\n\t\t\tif( pluginsToInitialize === 0 ) {\r\n\t\t\t\tthis.loadAsync().then( resolve );\r\n\t\t\t}\r\n\t\t\t// ... otherwise initialize plugins\r\n\t\t\telse {\r\n\r\n\t\t\t\tlet initNextPlugin;\r\n\r\n\t\t\t\tlet afterPlugInitialized = () => {\r\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\r\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinitNextPlugin();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet i = 0;\r\n\r\n\t\t\t\t// Initialize plugins serially\r\n\t\t\t\tinitNextPlugin = () => {\r\n\r\n\t\t\t\t\tlet plugin = pluginValues[i++];\r\n\r\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\r\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\r\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\r\n\r\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\r\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\r\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tafterPlugInitialized();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tafterPlugInitialized();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinitNextPlugin();\r\n\r\n\t\t\t}\r\n\r\n\t\t} )\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Loads all async reveal.js dependencies.\r\n\t */\r\n\tloadAsync() {\r\n\r\n\t\tthis.state = 'loaded';\r\n\r\n\t\tif( this.asyncDependencies.length ) {\r\n\t\t\tthis.asyncDependencies.forEach( s => {\r\n\t\t\t\tloadScript( s.src, s.callback );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn Promise.resolve();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a new plugin with this reveal.js instance.\r\n\t *\r\n\t * reveal.js waits for all regisered plugins to initialize\r\n\t * before considering itself ready, as long as the plugin\r\n\t * is registered before calling `Reveal.initialize()`.\r\n\t */\r\n\tregisterPlugin( plugin ) {\r\n\r\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\r\n\t\t// plugins work with reveal.js 4.0.0\r\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\r\n\t\t\tplugin = arguments[1];\r\n\t\t\tplugin.id = arguments[0];\r\n\t\t}\r\n\t\t// Plugin can optionally be a function which we call\r\n\t\t// to create an instance of the plugin\r\n\t\telse if( typeof plugin === 'function' ) {\r\n\t\t\tplugin = plugin();\r\n\t\t}\r\n\r\n\t\tlet id = plugin.id;\r\n\r\n\t\tif( typeof id !== 'string' ) {\r\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\r\n\t\t}\r\n\t\telse if( this.registeredPlugins[id] === undefined ) {\r\n\t\t\tthis.registeredPlugins[id] = plugin;\r\n\r\n\t\t\t// If a plugin is registered after reveal.js is loaded,\r\n\t\t\t// initialize it right away\r\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\r\n\t\t\t\tplugin.init( this.Reveal );\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a specific plugin has been registered.\r\n\t *\r\n\t * @param {String} id Unique plugin identifier\r\n\t */\r\n\thasPlugin( id ) {\r\n\r\n\t\treturn !!this.registeredPlugins[id];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the specific plugin instance, if a plugin\r\n\t * with the given ID has been registered.\r\n\t *\r\n\t * @param {String} id Unique plugin identifier\r\n\t */\r\n\tgetPlugin( id ) {\r\n\r\n\t\treturn this.registeredPlugins[id];\r\n\r\n\t}\r\n\r\n\tgetRegisteredPlugins() {\r\n\r\n\t\treturn this.registeredPlugins;\r\n\r\n\t}\r\n\r\n}\r\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\r\nimport { queryAll, createStyleSheet } from '../utils/util.js'\r\n\r\n/**\r\n * Setups up our presentation for printing/exporting to PDF.\r\n */\r\nexport default class Print {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Configures the presentation for printing to a static\r\n\t * PDF.\r\n\t */\r\n\tsetupPDF() {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\r\n\t\tlet slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\r\n\r\n\t\t// Dimensions of the PDF pages\r\n\t\tlet pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\r\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\r\n\r\n\t\t// Dimensions of slides within the pages\r\n\t\tlet slideWidth = slideSize.width,\r\n\t\t\tslideHeight = slideSize.height;\r\n\r\n\t\t// Let the browser know what page size we want to print\r\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\r\n\r\n\t\t// Limit the size of certain elements to the dimensions of the slide\r\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\r\n\r\n\t\tdocument.documentElement.classList.add( 'print-pdf' );\r\n\t\tdocument.body.style.width = pageWidth + 'px';\r\n\t\tdocument.body.style.height = pageHeight + 'px';\r\n\r\n\t\t// Make sure stretch elements fit on slide\r\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\r\n\r\n\t\t// Compute slide numbers now, before we start duplicating slides\r\n\t\tlet doingSlideNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\r\n\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( function( slide ) {\r\n\t\t\tslide.setAttribute( 'data-slide-number', this.Reveal.slideNumber.getSlideNumber( slide ) );\r\n\t\t}, this );\r\n\r\n\t\t// Slide and slide background layout\r\n\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( function( slide ) {\r\n\r\n\t\t\t// Vertical stacks are not centred since their section\r\n\t\t\t// children will be\r\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\r\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\r\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2,\r\n\t\t\t\t\ttop = ( pageHeight - slideHeight ) / 2;\r\n\r\n\t\t\t\tlet contentHeight = slide.scrollHeight;\r\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\r\n\r\n\t\t\t\t// Adhere to configured pages per slide limit\r\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\r\n\r\n\t\t\t\t// Center slides vertically\r\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\r\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\r\n\t\t\t\t// so that no page ever flows onto another\r\n\t\t\t\tlet page = document.createElement( 'div' );\r\n\t\t\t\tpage.className = 'pdf-page';\r\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\r\n\t\t\t\tslide.parentNode.insertBefore( page, slide );\r\n\t\t\t\tpage.appendChild( slide );\r\n\r\n\t\t\t\t// Position the slide inside of the page\r\n\t\t\t\tslide.style.left = left + 'px';\r\n\t\t\t\tslide.style.top = top + 'px';\r\n\t\t\t\tslide.style.width = slideWidth + 'px';\r\n\r\n\t\t\t\tif( slide.slideBackgroundElement ) {\r\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Inject notes if `showNotes` is enabled\r\n\t\t\t\tif( config.showNotes ) {\r\n\r\n\t\t\t\t\t// Are there notes for this slide?\r\n\t\t\t\t\tlet notes = getSlideNotes( slide );\r\n\t\t\t\t\tif( notes ) {\r\n\r\n\t\t\t\t\t\tlet notesSpacing = 8;\r\n\t\t\t\t\t\tlet notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\r\n\t\t\t\t\t\tlet notesElement = document.createElement( 'div' );\r\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\r\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\r\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\r\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\r\n\r\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\r\n\t\t\t\t\t\t\tpage.parentNode.insertBefore( notesElement, page.nextSibling );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\r\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\r\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\r\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Inject slide numbers if `slideNumbers` are enabled\r\n\t\t\t\tif( doingSlideNumbers ) {\r\n\t\t\t\t\tlet numberElement = document.createElement( 'div' );\r\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\r\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\r\n\t\t\t\t\tnumberElement.innerHTML = slide.getAttribute( 'data-slide-number' );\r\n\t\t\t\t\tpage.appendChild( numberElement );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Copy page and show fragments one after another\r\n\t\t\t\tif( config.pdfSeparateFragments ) {\r\n\r\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\r\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\r\n\t\t\t\t\t// are part of the same group.\r\n\t\t\t\t\tlet fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\r\n\r\n\t\t\t\t\tlet previousFragmentStep;\r\n\t\t\t\t\tlet previousPage;\r\n\r\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\r\n\r\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\r\n\t\t\t\t\t\tif( previousFragmentStep ) {\r\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\r\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Show the fragments for the current index\r\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\r\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\r\n\t\t\t\t\t\t}, this );\r\n\r\n\t\t\t\t\t\t// Create a separate page for the current fragment state\r\n\t\t\t\t\t\tlet clonedPage = page.cloneNode( true );\r\n\t\t\t\t\t\tpage.parentNode.insertBefore( clonedPage, ( previousPage || page ).nextSibling );\r\n\r\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\r\n\t\t\t\t\t\tpreviousPage = clonedPage;\r\n\r\n\t\t\t\t\t}, this );\r\n\r\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\r\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\r\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\r\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// Show all fragments\r\n\t\t\t\telse {\r\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\r\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}, this );\r\n\r\n\t\t// Notify subscribers that the PDF layout is good to go\r\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this instance is being used to print a PDF.\r\n\t */\r\n\tisPrintingPDF() {\r\n\r\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\r\n\r\n\t}\r\n\r\n}","import { isAndroid } from '../utils/device.js'\r\n\r\nconst SWIPE_THRESHOLD = 40;\r\n\r\n/**\r\n * Controls all touch interactions and navigations for\r\n * a presentation.\r\n */\r\nexport default class Touch {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Holds information about the currently ongoing touch interaction\r\n\t\tthis.touchStartX = 0;\r\n\t\tthis.touchStartY = 0;\r\n\t\tthis.touchStartCount = 0;\r\n\t\tthis.touchCaptured = false;\r\n\r\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\r\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\r\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\r\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\r\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\r\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tbind() {\r\n\r\n\t\tlet revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\tif( 'onpointerdown' in window ) {\r\n\t\t\t// Use W3C pointer events\r\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\r\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\r\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\r\n\t\t}\r\n\t\telse if( window.navigator.msPointerEnabled ) {\r\n\t\t\t// IE 10 uses prefixed version of pointer events\r\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\r\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\r\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Fall back to touch events\r\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\r\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\r\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tunbind() {\r\n\r\n\t\tlet revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\r\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\r\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\r\n\r\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\r\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\r\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\r\n\r\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\r\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\r\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the target element prevents the triggering of\r\n\t * swipe navigation.\r\n\t */\r\n\tisSwipePrevented( target ) {\r\n\r\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\r\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\r\n\t\t\ttarget = target.parentNode;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchstart' event, enables support for\r\n\t * swipe and pinch gestures.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchStart( event ) {\r\n\r\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\r\n\r\n\t\tthis.touchStartX = event.touches[0].clientX;\r\n\t\tthis.touchStartY = event.touches[0].clientY;\r\n\t\tthis.touchStartCount = event.touches.length;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchmove' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchMove( event ) {\r\n\r\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\r\n\t\t// Each touch should only trigger one action\r\n\t\tif( !this.touchCaptured ) {\r\n\t\t\tthis.Reveal.onUserInput( event );\r\n\r\n\t\t\tlet currentX = event.touches[0].clientX;\r\n\t\t\tlet currentY = event.touches[0].clientY;\r\n\r\n\t\t\t// There was only one touch point, look for a swipe\r\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\r\n\r\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\r\n\r\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\r\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\r\n\r\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tif( config.rtl ) {\r\n\t\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.left();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tif( config.rtl ) {\r\n\t\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.right();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.up();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.down();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If we're embedded, only block touch events if they have\r\n\t\t\t\t// triggered an action\r\n\t\t\t\tif( config.embedded ) {\r\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\r\n\t\t\t\t// around of the viewport in iOS\r\n\t\t\t\telse {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\t// There's a bug with swiping on some Android devices unless\r\n\t\t// the default action is always prevented\r\n\t\telse if( isAndroid ) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchend' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchEnd( event ) {\r\n\r\n\t\tthis.touchCaptured = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer down to touch start.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerDown( event ) {\r\n\r\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchStart( event );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer move to touch move.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerMove( event ) {\r\n\r\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchMove( event );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer up to touch end.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerUp( event ) {\r\n\r\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchEnd( event );\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * Manages focus when a presentation is embedded. This\r\n * helps us only capture keyboard from the presentation\r\n * a user is currently interacting with in a page where\r\n * multiple presentations are embedded.\r\n */\r\n\r\nconst STATE_FOCUS = 'focus';\r\nconst STATE_BLUR = 'blur';\r\n\r\nexport default class Focus {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\r\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.embedded ) {\r\n\t\t\tthis.blur();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.focus();\r\n\t\t\tthis.unbind();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\tif( this.Reveal.getConfig().embedded ) {\r\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\r\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\r\n\r\n\t}\r\n\r\n\tfocus() {\r\n\r\n\t\tif( this.state !== STATE_FOCUS ) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\r\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\r\n\t\t}\r\n\r\n\t\tthis.state = STATE_FOCUS;\r\n\r\n\t}\r\n\r\n\tblur() {\r\n\r\n\t\tif( this.state !== STATE_BLUR ) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\r\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\r\n\t\t}\r\n\r\n\t\tthis.state = STATE_BLUR;\r\n\r\n\t}\r\n\r\n\tisFocused() {\r\n\r\n\t\treturn this.state === STATE_FOCUS;\r\n\r\n\t}\r\n\r\n\tonRevealPointerDown( event ) {\r\n\r\n\t\tthis.focus();\r\n\r\n\t}\r\n\r\n\tonDocumentPointerDown( event ) {\r\n\r\n\t\tlet revealElement = event.target.closest( '.reveal' );\r\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\r\n\t\t\tthis.blur();\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * Handles the showing and \r\n */\r\nexport default class Notes {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'speaker-notes';\r\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\r\n\t\tthis.element.setAttribute( 'tabindex', '0' );\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.showNotes ) {\r\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Pick up notes from the current slide and display them\r\n\t * to the viewer.\r\n\t *\r\n\t * @see {@link config.showNotes}\r\n\t */\r\n\tupdate() {\r\n\r\n\t\tif( this.Reveal.getConfig().showNotes && this.element && this.Reveal.getCurrentSlide() && !this.Reveal.print.isPrintingPDF() ) {\r\n\r\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the visibility of the speaker notes sidebar that\r\n\t * is used to share annotated slides. The notes sidebar is\r\n\t * only visible if showNotes is true and there are notes on\r\n\t * one or more slides in the deck.\r\n\t */\r\n\tupdateVisibility() {\r\n\r\n\t\tif( this.Reveal.getConfig().showNotes && this.hasNotes() ) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if there are speaker notes for ANY slide in the\r\n\t * presentation.\r\n\t */\r\n\thasNotes() {\r\n\r\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this presentation is running inside of the\r\n\t * speaker notes window.\r\n\t *\r\n\t * @return {boolean}\r\n\t */\r\n\tisSpeakerNotesWindow() {\r\n\r\n\t\treturn !!window.location.search.match( /receiver/gi );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the speaker notes from a slide. Notes can be\r\n\t * defined in two ways:\r\n\t * 1. As a data-notes attribute on the slide <section>\r\n\t * 2. As an <aside class=\"notes\"> inside of the slide\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide]\r\n\t * @return {(string|null)}\r\n\t */\r\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\r\n\r\n\t\t// Notes can be specified via the data-notes attribute...\r\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\r\n\t\t\treturn slide.getAttribute( 'data-notes' );\r\n\t\t}\r\n\r\n\t\t// ... or using an <aside class=\"notes\"> element\r\n\t\tlet notesElement = slide.querySelector( 'aside.notes' );\r\n\t\tif( notesElement ) {\r\n\t\t\treturn notesElement.innerHTML;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n}","/**\r\n * UI component that lets the use control auto-slide\r\n * playback via play/pause.\r\n */\r\nexport default class Playback {\r\n\r\n\t/**\r\n\t * @param {HTMLElement} container The component will append\r\n\t * itself to this\r\n\t * @param {function} progressCheck A method which will be\r\n\t * called frequently to get the current playback progress on\r\n\t * a range of 0-1\r\n\t */\r\n\tconstructor( container, progressCheck ) {\r\n\r\n\t\t// Cosmetics\r\n\t\tthis.diameter = 100;\r\n\t\tthis.diameter2 = this.diameter/2;\r\n\t\tthis.thickness = 6;\r\n\r\n\t\t// Flags if we are currently playing\r\n\t\tthis.playing = false;\r\n\r\n\t\t// Current progress on a 0-1 range\r\n\t\tthis.progress = 0;\r\n\r\n\t\t// Used to loop the animation smoothly\r\n\t\tthis.progressOffset = 1;\r\n\r\n\t\tthis.container = container;\r\n\t\tthis.progressCheck = progressCheck;\r\n\r\n\t\tthis.canvas = document.createElement( 'canvas' );\r\n\t\tthis.canvas.className = 'playback';\r\n\t\tthis.canvas.width = this.diameter;\r\n\t\tthis.canvas.height = this.diameter;\r\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\r\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\r\n\t\tthis.context = this.canvas.getContext( '2d' );\r\n\r\n\t\tthis.container.appendChild( this.canvas );\r\n\r\n\t\tthis.render();\r\n\r\n\t}\r\n\r\n\tsetPlaying( value ) {\r\n\r\n\t\tconst wasPlaying = this.playing;\r\n\r\n\t\tthis.playing = value;\r\n\r\n\t\t// Start repainting if we weren't already\r\n\t\tif( !wasPlaying && this.playing ) {\r\n\t\t\tthis.animate();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tanimate() {\r\n\r\n\t\tconst progressBefore = this.progress;\r\n\r\n\t\tthis.progress = this.progressCheck();\r\n\r\n\t\t// When we loop, offset the progress so that it eases\r\n\t\t// smoothly rather than immediately resetting\r\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\r\n\t\t\tthis.progressOffset = this.progress;\r\n\t\t}\r\n\r\n\t\tthis.render();\r\n\r\n\t\tif( this.playing ) {\r\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the current progress and playback state.\r\n\t */\r\n\trender() {\r\n\r\n\t\tlet progress = this.playing ? this.progress : 0,\r\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\r\n\t\t\tx = this.diameter2,\r\n\t\t\ty = this.diameter2,\r\n\t\t\ticonSize = 28;\r\n\r\n\t\t// Ease towards 1\r\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\r\n\r\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\r\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\r\n\r\n\t\tthis.context.save();\r\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\r\n\r\n\t\t// Solid background color\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\r\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\r\n\t\tthis.context.fill();\r\n\r\n\t\t// Draw progress track\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\r\n\t\tthis.context.lineWidth = this.thickness;\r\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\r\n\t\tthis.context.stroke();\r\n\r\n\t\tif( this.playing ) {\r\n\t\t\t// Draw progress on top of track\r\n\t\t\tthis.context.beginPath();\r\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\r\n\t\t\tthis.context.lineWidth = this.thickness;\r\n\t\t\tthis.context.strokeStyle = '#fff';\r\n\t\t\tthis.context.stroke();\r\n\t\t}\r\n\r\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\r\n\r\n\t\t// Draw play/pause icons\r\n\t\tif( this.playing ) {\r\n\t\t\tthis.context.fillStyle = '#fff';\r\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\r\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.context.beginPath();\r\n\t\t\tthis.context.translate( 4, 0 );\r\n\t\t\tthis.context.moveTo( 0, 0 );\r\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\r\n\t\t\tthis.context.lineTo( 0, iconSize );\r\n\t\t\tthis.context.fillStyle = '#fff';\r\n\t\t\tthis.context.fill();\r\n\t\t}\r\n\r\n\t\tthis.context.restore();\r\n\r\n\t}\r\n\r\n\ton( type, listener ) {\r\n\t\tthis.canvas.addEventListener( type, listener, false );\r\n\t}\r\n\r\n\toff( type, listener ) {\r\n\t\tthis.canvas.removeEventListener( type, listener, false );\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.playing = false;\r\n\r\n\t\tif( this.canvas.parentNode ) {\r\n\t\t\tthis.container.removeChild( this.canvas );\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * The default reveal.js config object.\r\n */\r\nexport default {\r\n\r\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\r\n\t// when the presentation is scaled to fit different resolutions\r\n\twidth: 960,\r\n\theight: 700,\r\n\r\n\t// Factor of the display size that should remain empty around the content\r\n\tmargin: 0.04,\r\n\r\n\t// Bounds for smallest/largest possible scale to apply to content\r\n\tminScale: 0.2,\r\n\tmaxScale: 2.0,\r\n\r\n\t// Display presentation control arrows\r\n\tcontrols: true,\r\n\r\n\t// Help the user learn the controls by providing hints, for example by\r\n\t// bouncing the down arrow when they first encounter a vertical slide\r\n\tcontrolsTutorial: true,\r\n\r\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\r\n\tcontrolsLayout: 'bottom-right',\r\n\r\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\r\n\t// or \"visible\"\r\n\tcontrolsBackArrows: 'faded',\r\n\r\n\t// Display a presentation progress bar\r\n\tprogress: true,\r\n\r\n\t// Display the page number of the current slide\r\n\t// - true:    Show slide number\r\n\t// - false:   Hide slide number\r\n\t//\r\n\t// Can optionally be set as a string that specifies the number formatting:\r\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\r\n\t// - \"h/v\":\t  Horizontal / vertical slide number\r\n\t// - \"c\":\t  Flattened slide number\r\n\t// - \"c/t\":\t  Flattened slide number / total slides\r\n\t//\r\n\t// Alternatively, you can provide a function that returns the slide\r\n\t// number for the current slide. The function should take in a slide\r\n\t// object and return an array with one string [slideNumber] or\r\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\r\n\tslideNumber: false,\r\n\r\n\t// Can be used to limit the contexts in which the slide number appears\r\n\t// - \"all\":      Always show the slide number\r\n\t// - \"print\":    Only when printing to PDF\r\n\t// - \"speaker\":  Only in the speaker view\r\n\tshowSlideNumber: 'all',\r\n\r\n\t// Use 1 based indexing for # links to match slide number (default is zero\r\n\t// based)\r\n\thashOneBasedIndex: false,\r\n\r\n\t// Add the current slide number to the URL hash so that reloading the\r\n\t// page/copying the URL will return you to the same slide\r\n\thash: false,\r\n\r\n\t// Flags if we should monitor the hash and change slides accordingly\r\n\trespondToHashChanges: true,\r\n\r\n\t// Push each slide change to the browser history.  Implies `hash: true`\r\n\thistory: false,\r\n\r\n\t// Enable keyboard shortcuts for navigation\r\n\tkeyboard: true,\r\n\r\n\t// Optional function that blocks keyboard events when retuning false\r\n\t//\r\n\t// If you set this to 'foucsed', we will only capture keyboard events\r\n\t// for embdedded decks when they are in focus\r\n\tkeyboardCondition: null,\r\n\r\n\t// Disables the default reveal.js slide layout (scaling and centering)\r\n\t// so that you can use custom CSS layout\r\n\tdisableLayout: false,\r\n\r\n\t// Enable the slide overview mode\r\n\toverview: true,\r\n\r\n\t// Vertical centering of slides\r\n\tcenter: true,\r\n\r\n\t// Enables touch navigation on devices with touch input\r\n\ttouch: true,\r\n\r\n\t// Loop the presentation\r\n\tloop: false,\r\n\r\n\t// Change the presentation direction to be RTL\r\n\trtl: false,\r\n\r\n\t// Changes the behavior of our navigation directions.\r\n\t//\r\n\t// \"default\"\r\n\t// Left/right arrow keys step between horizontal slides, up/down\r\n\t// arrow keys step between vertical slides. Space key steps through\r\n\t// all slides (both horizontal and vertical).\r\n\t//\r\n\t// \"linear\"\r\n\t// Removes the up/down arrows. Left/right arrows step through all\r\n\t// slides (both horizontal and vertical).\r\n\t//\r\n\t// \"grid\"\r\n\t// When this is enabled, stepping left/right from a vertical stack\r\n\t// to an adjacent vertical stack will land you at the same vertical\r\n\t// index.\r\n\t//\r\n\t// Consider a deck with six slides ordered in two vertical stacks:\r\n\t// 1.1    2.1\r\n\t// 1.2    2.2\r\n\t// 1.3    2.3\r\n\t//\r\n\t// If you're on slide 1.3 and navigate right, you will normally move\r\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\r\n\t// from 1.3 -> 2.3.\r\n\tnavigationMode: 'default',\r\n\r\n\t// Randomizes the order of slides each time the presentation loads\r\n\tshuffle: false,\r\n\r\n\t// Turns fragments on and off globally\r\n\tfragments: true,\r\n\r\n\t// Flags whether to include the current fragment in the URL,\r\n\t// so that reloading brings you to the same fragment position\r\n\tfragmentInURL: true,\r\n\r\n\t// Flags if the presentation is running in an embedded mode,\r\n\t// i.e. contained within a limited portion of the screen\r\n\tembedded: false,\r\n\r\n\t// Flags if we should show a help overlay when the question-mark\r\n\t// key is pressed\r\n\thelp: true,\r\n\r\n\t// Flags if it should be possible to pause the presentation (blackout)\r\n\tpause: true,\r\n\r\n\t// Flags if speaker notes should be visible to all viewers\r\n\tshowNotes: false,\r\n\r\n\t// Global override for autolaying embedded media (video/audio/iframe)\r\n\t// - null:   Media will only autoplay if data-autoplay is present\r\n\t// - true:   All media will autoplay, regardless of individual setting\r\n\t// - false:  No media will autoplay, regardless of individual setting\r\n\tautoPlayMedia: null,\r\n\r\n\t// Global override for preloading lazy-loaded iframes\r\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\r\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\r\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\r\n\t// - false:  All iframes with data-src will be loaded only when visible\r\n\tpreloadIframes: null,\r\n\r\n\t// Can be used to globally disable auto-animation\r\n\tautoAnimate: true,\r\n\r\n\t// Optionally provide a custom element matcher that will be\r\n\t// used to dictate which elements we can animate between.\r\n\tautoAnimateMatcher: null,\r\n\r\n\t// Default settings for our auto-animate transitions, can be\r\n\t// overridden per-slide or per-element via data arguments\r\n\tautoAnimateEasing: 'ease',\r\n\tautoAnimateDuration: 1.0,\r\n\tautoAnimateUnmatched: true,\r\n\r\n\t// CSS properties that can be auto-animated. Position & scale\r\n\t// is matched separately so there's no need to include styles\r\n\t// like top/right/bottom/left, width/height or margin.\r\n\tautoAnimateStyles: [\r\n\t\t'opacity',\r\n\t\t'color',\r\n\t\t'background-color',\r\n\t\t'padding',\r\n\t\t'font-size',\r\n\t\t'line-height',\r\n\t\t'letter-spacing',\r\n\t\t'border-width',\r\n\t\t'border-color',\r\n\t\t'border-radius',\r\n\t\t'outline',\r\n\t\t'outline-offset'\r\n\t],\r\n\r\n\t// Controls automatic progression to the next slide\r\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\r\n\t//           is present on the current slide or fragment\r\n\t// - 1+:     All slides will progress automatically at the given interval\r\n\t// - false:  No auto-sliding, even if data-autoslide is present\r\n\tautoSlide: 0,\r\n\r\n\t// Stop auto-sliding after user input\r\n\tautoSlideStoppable: true,\r\n\r\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\r\n\tautoSlideMethod: null,\r\n\r\n\t// Specify the average time in seconds that you think you will spend\r\n\t// presenting each slide. This is used to show a pacing timer in the\r\n\t// speaker view\r\n\tdefaultTiming: null,\r\n\r\n\t// Enable slide navigation via mouse wheel\r\n\tmouseWheel: false,\r\n\r\n\t// Opens links in an iframe preview overlay\r\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\r\n\t// individually\r\n\tpreviewLinks: false,\r\n\r\n\t// Exposes the reveal.js API through window.postMessage\r\n\tpostMessage: true,\r\n\r\n\t// Dispatches all reveal.js events to the parent window through postMessage\r\n\tpostMessageEvents: false,\r\n\r\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\r\n\tfocusBodyOnPageVisibilityChange: true,\r\n\r\n\t// Transition style\r\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\r\n\r\n\t// Transition speed\r\n\ttransitionSpeed: 'default', // default/fast/slow\r\n\r\n\t// Transition style for full page slide backgrounds\r\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\r\n\r\n\t// Parallax background image\r\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\r\n\r\n\t// Parallax background size\r\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\r\n\r\n\t// Parallax background repeat\r\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\r\n\r\n\t// Parallax background position\r\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\r\n\r\n\t// Amount of pixels to move the parallax background per slide step\r\n\tparallaxBackgroundHorizontal: null,\r\n\tparallaxBackgroundVertical: null,\r\n\r\n\t// The maximum number of pages a single slide can expand onto when printing\r\n\t// to PDF, unlimited by default\r\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\r\n\r\n\t// Prints each fragment on a separate slide\r\n\tpdfSeparateFragments: true,\r\n\r\n\t// Offset used to reduce the height of content within exported PDF pages.\r\n\t// This exists to account for environment differences based on how you\r\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\r\n\t// on precisely the total height of the document whereas in-browser\r\n\t// printing has to end one pixel before.\r\n\tpdfPageHeightOffset: -1,\r\n\r\n\t// Number of slides away from the current that are visible\r\n\tviewDistance: 3,\r\n\r\n\t// Number of slides away from the current that are visible on mobile\r\n\t// devices. It is advisable to set this to a lower number than\r\n\t// viewDistance in order to save resources.\r\n\tmobileViewDistance: 2,\r\n\r\n\t// The display mode that will be used to show slides\r\n\tdisplay: 'block',\r\n\r\n\t// Hide cursor if inactive\r\n\thideInactiveCursor: true,\r\n\r\n\t// Time before the cursor is hidden (in ms)\r\n\thideCursorTime: 5000,\r\n\r\n\t// Script dependencies to load\r\n\tdependencies: [],\r\n\r\n\t// Plugin objects to register and use for this presentation\r\n\tplugins: []\r\n\r\n}","import SlideContent from './controllers/slidecontent.js'\r\nimport SlideNumber from './controllers/slidenumber.js'\r\nimport Backgrounds from './controllers/backgrounds.js'\r\nimport AutoAnimate from './controllers/autoanimate.js'\r\nimport Fragments from './controllers/fragments.js'\r\nimport Overview from './controllers/overview.js'\r\nimport Keyboard from './controllers/keyboard.js'\r\nimport Location from './controllers/location.js'\r\nimport Controls from './controllers/controls.js'\r\nimport Progress from './controllers/progress.js'\r\nimport Pointer from './controllers/pointer.js'\r\nimport Plugins from './controllers/plugins.js'\r\nimport Print from './controllers/print.js'\r\nimport Touch from './controllers/touch.js'\r\nimport Focus from './controllers/focus.js'\r\nimport Notes from './controllers/notes.js'\r\nimport Playback from './components/playback.js'\r\nimport defaultConfig from './config.js'\r\nimport * as Util from './utils/util.js'\r\nimport * as Device from './utils/device.js'\r\nimport {\r\n\tSLIDES_SELECTOR,\r\n\tHORIZONTAL_SLIDES_SELECTOR,\r\n\tVERTICAL_SLIDES_SELECTOR,\r\n\tPOST_MESSAGE_METHOD_BLACKLIST\r\n} from './utils/constants.js'\r\n\r\n// The reveal.js version\r\nexport const VERSION = '4.0.0';\r\n\r\n/**\r\n * reveal.js\r\n * https://revealjs.com\r\n * MIT licensed\r\n *\r\n * Copyright (C) 2020 Hakim El Hattab, https://hakim.se\r\n */\r\nexport default function( revealElement, options ) {\r\n\r\n\t// Support initialization with no args, one arg\r\n\t// [options] or two args [revealElement, options]\r\n\tif( arguments.length < 2 ) {\r\n\t\toptions = arguments[0];\r\n\t\trevealElement = document.querySelector( '.reveal' );\r\n\t}\r\n\r\n\tconst Reveal = {};\r\n\r\n\t// Configuration defaults, can be overridden at initialization time\r\n\tlet config,\r\n\r\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\r\n\t\tready = false,\r\n\r\n\t\t// The horizontal and vertical index of the currently active slide\r\n\t\tindexh,\r\n\t\tindexv,\r\n\r\n\t\t// The previous and current slide HTML elements\r\n\t\tpreviousSlide,\r\n\t\tcurrentSlide,\r\n\r\n\t\t// Remember which directions that the user has navigated towards\r\n\t\tnavigationHistory = {\r\n\t\t\thasNavigatedHorizontally: false,\r\n\t\t\thasNavigatedVertically: false\r\n\t\t},\r\n\r\n\t\t// Slides may have a data-state attribute which we pick up and apply\r\n\t\t// as a class to the body. This list contains the combined state of\r\n\t\t// all current slides.\r\n\t\tstate = [],\r\n\r\n\t\t// The current scale of the presentation (see width/height config)\r\n\t\tscale = 1,\r\n\r\n\t\t// CSS transform that is currently applied to the slides container,\r\n\t\t// split into two groups\r\n\t\tslidesTransform = { layout: '', overview: '' },\r\n\r\n\t\t// Cached references to DOM elements\r\n\t\tdom = {},\r\n\r\n\t\t// Flags if the interaction event listeners are bound\r\n\t\teventsAreBound = false,\r\n\r\n\t\t// The current slide transition state; idle or running\r\n\t\ttransition = 'idle',\r\n\r\n\t\t// The current auto-slide duration\r\n\t\tautoSlide = 0,\r\n\r\n\t\t// Auto slide properties\r\n\t\tautoSlidePlayer,\r\n\t\tautoSlideTimeout = 0,\r\n\t\tautoSlideStartTime = -1,\r\n\t\tautoSlidePaused = false,\r\n\r\n\t\t// Controllers for different aspects of our presentation. They're\r\n\t\t// all given direct references to this Reveal instance since there\r\n\t\t// may be multiple presentations running in parallel.\r\n\t\tslideContent = new SlideContent( Reveal ),\r\n\t\tslideNumber = new SlideNumber( Reveal ),\r\n\t\tautoAnimate = new AutoAnimate( Reveal ),\r\n\t\tbackgrounds = new Backgrounds( Reveal ),\r\n\t\tfragments = new Fragments( Reveal ),\r\n\t\toverview = new Overview( Reveal ),\r\n\t\tkeyboard = new Keyboard( Reveal ),\r\n\t\tlocation = new Location( Reveal ),\r\n\t\tcontrols = new Controls( Reveal ),\r\n\t\tprogress = new Progress( Reveal ),\r\n\t\tpointer = new Pointer( Reveal ),\r\n\t\tplugins = new Plugins( Reveal ),\r\n\t\tprint = new Print( Reveal ),\r\n\t\tfocus = new Focus( Reveal ),\r\n\t\ttouch = new Touch( Reveal ),\r\n\t\tnotes = new Notes( Reveal );\r\n\r\n\t/**\r\n\t * Starts up the presentation.\r\n\t */\r\n\tfunction initialize( initOptions ) {\r\n\r\n\t\t// Cache references to key DOM elements\r\n\t\tdom.wrapper = revealElement;\r\n\t\tdom.slides = revealElement.querySelector( '.slides' );\r\n\r\n\t\t// Compose our config object\r\n\t\tconfig = { ...defaultConfig, ...options, ...initOptions, ...Util.getQueryHash() };\r\n\r\n\t\tsetViewport();\r\n\r\n\t\t// Force a layout when the whole page, incl fonts, has loaded\r\n\t\twindow.addEventListener( 'load', layout, false );\r\n\r\n\t\t// Register plugins and load dependencies, then move on to #start()\r\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\r\n\r\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Encase the presentation in a reveal.js viewport. The\r\n\t * extent of the viewport differs based on configuration.\r\n\t */\r\n\tfunction setViewport() {\r\n\r\n\t\t// Embedded decks use the reveal element as their viewport\r\n\t\tif( config.embedded === true ) {\r\n\t\t\tdom.viewport = revealElement.closest( '.reveal-viewport' ) || revealElement;\r\n\t\t}\r\n\t\t// Full-page decks use the body as their viewport\r\n\t\telse {\r\n\t\t\tdom.viewport = document.body;\r\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\r\n\t\t}\r\n\r\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Starts up reveal.js by binding input events and navigating\r\n\t * to the current URL deeplink if there is one.\r\n\t */\r\n\tfunction start() {\r\n\r\n\t\tready = true;\r\n\r\n\t\t// Make sure we've got all the DOM elements we need\r\n\t\tsetupDOM();\r\n\r\n\t\t// Listen to messages posted to this window\r\n\t\tsetupPostMessage();\r\n\r\n\t\t// Prevent the slides from being scrolled out of view\r\n\t\tsetupScrollPrevention();\r\n\r\n\t\t// Resets all vertical slides so that only the first is visible\r\n\t\tresetVerticalSlides();\r\n\r\n\t\t// Updates the presentation to match the current configuration values\r\n\t\tconfigure();\r\n\r\n\t\t// Read the initial hash\r\n\t\tlocation.readURL();\r\n\r\n\t\t// Create slide backgrounds\r\n\t\tbackgrounds.update( true );\r\n\r\n\t\t// Notify listeners that the presentation is ready but use a 1ms\r\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\r\n\t\tsetTimeout( () => {\r\n\t\t\t// Enable transitions now that we're loaded\r\n\t\t\tdom.slides.classList.remove( 'no-transition' );\r\n\r\n\t\t\tdom.wrapper.classList.add( 'ready' );\r\n\r\n\t\t\tdispatchEvent({\r\n\t\t\t\ttype: 'ready',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tindexh,\r\n\t\t\t\t\tindexv,\r\n\t\t\t\t\tcurrentSlide\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}, 1 );\r\n\r\n\t\t// Special setup and config is required when printing to PDF\r\n\t\tif( print.isPrintingPDF() ) {\r\n\t\t\tremoveEventListeners();\r\n\r\n\t\t\t// The document needs to have loaded for the PDF layout\r\n\t\t\t// measurements to be accurate\r\n\t\t\tif( document.readyState === 'complete' ) {\r\n\t\t\t\tprint.setupPDF();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twindow.addEventListener( 'load', () => {\r\n\t\t\t\t\tprint.setupPDF();\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finds and stores references to DOM elements which are\r\n\t * required by the presentation. If a required element is\r\n\t * not found, it is created.\r\n\t */\r\n\tfunction setupDOM() {\r\n\r\n\t\t// Prevent transitions while we're loading\r\n\t\tdom.slides.classList.add( 'no-transition' );\r\n\r\n\t\tif( Device.isMobile ) {\r\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\r\n\t\t}\r\n\r\n\t\tbackgrounds.render();\r\n\t\tslideNumber.render();\r\n\t\tcontrols.render();\r\n\t\tprogress.render();\r\n\t\tnotes.render();\r\n\r\n\t\t// Overlay graphic which is displayed during the paused mode\r\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\r\n\r\n\t\tdom.statusElement = createStatusElement();\r\n\r\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a hidden div with role aria-live to announce the\r\n\t * current slide content. Hide the div off-screen to make it\r\n\t * available only to Assistive Technologies.\r\n\t *\r\n\t * @return {HTMLElement}\r\n\t */\r\n\tfunction createStatusElement() {\r\n\r\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\r\n\t\tif( !statusElement ) {\r\n\t\t\tstatusElement = document.createElement( 'div' );\r\n\t\t\tstatusElement.style.position = 'absolute';\r\n\t\t\tstatusElement.style.height = '1px';\r\n\t\t\tstatusElement.style.width = '1px';\r\n\t\t\tstatusElement.style.overflow = 'hidden';\r\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\r\n\t\t\tstatusElement.classList.add( 'aria-status' );\r\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\r\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\r\n\t\t\tdom.wrapper.appendChild( statusElement );\r\n\t\t}\r\n\t\treturn statusElement;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Announces the given text to screen readers.\r\n\t */\r\n\tfunction announceStatus( value ) {\r\n\r\n\t\tdom.statusElement.textContent = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the given HTML element into a string of text\r\n\t * that can be announced to a screen reader. Hidden\r\n\t * elements are excluded.\r\n\t */\r\n\tfunction getStatusText( node ) {\r\n\r\n\t\tlet text = '';\r\n\r\n\t\t// Text node\r\n\t\tif( node.nodeType === 3 ) {\r\n\t\t\ttext += node.textContent;\r\n\t\t}\r\n\t\t// Element node\r\n\t\telse if( node.nodeType === 1 ) {\r\n\r\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\r\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\r\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\r\n\r\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\r\n\t\t\t\t\ttext += getStatusText( child );\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\ttext = text.trim();\r\n\r\n\t\treturn text === '' ? '' : text + ' ';\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * This is an unfortunate necessity. Some actions – such as\r\n\t * an input field being focused in an iframe or using the\r\n\t * keyboard to expand text selection beyond the bounds of\r\n\t * a slide – can trigger our content to be pushed out of view.\r\n\t * This scrolling can not be prevented by hiding overflow in\r\n\t * CSS (we already do) so we have to resort to repeatedly\r\n\t * checking if the slides have been offset :(\r\n\t */\r\n\tfunction setupScrollPrevention() {\r\n\r\n\t\tsetInterval( () => {\r\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\r\n\t\t\t\tdom.wrapper.scrollTop = 0;\r\n\t\t\t\tdom.wrapper.scrollLeft = 0;\r\n\t\t\t}\r\n\t\t}, 1000 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a listener to postMessage events, this makes it\r\n\t * possible to call all reveal.js API methods from another\r\n\t * window. For example:\r\n\t *\r\n\t * revealWindow.postMessage( JSON.stringify({\r\n\t *   method: 'slide',\r\n\t *   args: [ 2 ]\r\n\t * }), '*' );\r\n\t */\r\n\tfunction setupPostMessage() {\r\n\r\n\t\tif( config.postMessage ) {\r\n\t\t\twindow.addEventListener( 'message', event => {\r\n\t\t\t\tlet data = event.data;\r\n\r\n\t\t\t\t// Make sure we're dealing with JSON\r\n\t\t\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\r\n\t\t\t\t\tdata = JSON.parse( data );\r\n\r\n\t\t\t\t\t// Check if the requested method can be found\r\n\t\t\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\r\n\r\n\t\t\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\r\n\r\n\t\t\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\r\n\r\n\t\t\t\t\t\t\t// Dispatch a postMessage event with the returned value from\r\n\t\t\t\t\t\t\t// our method invocation for getter functions\r\n\t\t\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the configuration settings from the config\r\n\t * object. May be called multiple times.\r\n\t *\r\n\t * @param {object} options\r\n\t */\r\n\tfunction configure( options ) {\r\n\r\n\t\tconst oldConfig = { ...config }\r\n\r\n\t\t// New config options may be passed when this method\r\n\t\t// is invoked through the API after initialization\r\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\r\n\r\n\t\t// Abort if reveal.js hasn't finished loading, config\r\n\t\t// changes will be applied automatically once ready\r\n\t\tif( Reveal.isReady() ===  false ) return;\r\n\r\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\r\n\r\n\t\t// The transition is added as a class on the .reveal element\r\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\r\n\t\tdom.wrapper.classList.add( config.transition );\r\n\r\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\r\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\r\n\r\n\t\tif( config.shuffle ) {\r\n\t\t\tshuffle();\r\n\t\t}\r\n\r\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\r\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\r\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\r\n\r\n\t\t// Exit the paused mode if it was configured off\r\n\t\tif( config.pause === false ) {\r\n\t\t\tresume();\r\n\t\t}\r\n\r\n\t\t// Iframe link previews\r\n\t\tif( config.previewLinks ) {\r\n\t\t\tenablePreviewLinks();\r\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdisablePreviewLinks();\r\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\r\n\t\t}\r\n\r\n\t\t// Reset all changes made by auto-animations\r\n\t\tautoAnimate.reset();\r\n\r\n\t\t// Remove existing auto-slide controls\r\n\t\tif( autoSlidePlayer ) {\r\n\t\t\tautoSlidePlayer.destroy();\r\n\t\t\tautoSlidePlayer = null;\r\n\t\t}\r\n\r\n\t\t// Generate auto-slide controls if needed\r\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\r\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\r\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\r\n\t\t\t} );\r\n\r\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\r\n\t\t\tautoSlidePaused = false;\r\n\t\t}\r\n\r\n\t\t// Add the navigation mode to the DOM so we can adjust styling\r\n\t\tif( config.navigationMode !== 'default' ) {\r\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\r\n\t\t}\r\n\r\n\t\tnotes.configure( config, oldConfig );\r\n\t\tfocus.configure( config, oldConfig );\r\n\t\tpointer.configure( config, oldConfig );\r\n\t\tcontrols.configure( config, oldConfig );\r\n\t\tprogress.configure( config, oldConfig );\r\n\t\tkeyboard.configure( config, oldConfig );\r\n\t\tfragments.configure( config, oldConfig );\r\n\t\tslideNumber.configure( config, oldConfig );\r\n\r\n\t\tsync();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Binds all event listeners.\r\n\t */\r\n\tfunction addEventListeners() {\r\n\r\n\t\teventsAreBound = true;\r\n\r\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\r\n\r\n\t\tif( config.touch ) touch.bind();\r\n\t\tif( config.keyboard ) keyboard.bind();\r\n\t\tif( config.progress ) progress.bind();\r\n\t\tif( config.respondToHashChanges ) location.bind();\r\n\t\tcontrols.bind();\r\n\t\tfocus.bind();\r\n\r\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\r\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\r\n\r\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\r\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unbinds all event listeners.\r\n\t */\r\n\tfunction removeEventListeners() {\r\n\r\n\t\teventsAreBound = false;\r\n\r\n\t\ttouch.unbind();\r\n\t\tfocus.unbind();\r\n\t\tkeyboard.unbind();\r\n\t\tcontrols.unbind();\r\n\t\tprogress.unbind();\r\n\t\tlocation.unbind();\r\n\r\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\r\n\r\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\r\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a listener to one of our custom reveal.js events,\r\n\t * like slidechanged.\r\n\t */\r\n\tfunction on( type, listener, useCapture ) {\r\n\r\n\t\trevealElement.addEventListener( type, listener, useCapture );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unsubscribes from a reveal.js event.\r\n\t */\r\n\tfunction off( type, listener, useCapture ) {\r\n\r\n\t\trevealElement.removeEventListener( type, listener, useCapture );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies CSS transforms to the slides container. The container\r\n\t * is transformed from two separate sources: layout and the overview\r\n\t * mode.\r\n\t *\r\n\t * @param {object} transforms\r\n\t */\r\n\tfunction transformSlides( transforms ) {\r\n\r\n\t\t// Pick up new transforms from arguments\r\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\r\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\r\n\r\n\t\t// Apply the transforms to the slides container\r\n\t\tif( slidesTransform.layout ) {\r\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches an event of the specified type from the\r\n\t * reveal DOM element.\r\n\t */\r\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\r\n\r\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\r\n\t\tevent.initEvent( type, bubbles, true );\r\n\t\tUtil.extend( event, data );\r\n\t\ttarget.dispatchEvent( event );\r\n\r\n\t\tif( target === dom.wrapper ) {\r\n\t\t\t// If we're in an iframe, post each reveal.js event to the\r\n\t\t\t// parent window. Used by the notes plugin\r\n\t\t\tdispatchPostMessage( type );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatched a postMessage of the given type from our window.\r\n\t */\r\n\tfunction dispatchPostMessage( type, data ) {\r\n\r\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\r\n\t\t\tlet message = {\r\n\t\t\t\tnamespace: 'reveal',\r\n\t\t\t\teventName: type,\r\n\t\t\t\tstate: getState()\r\n\t\t\t};\r\n\r\n\t\t\tUtil.extend( message, data );\r\n\r\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Bind preview frame links.\r\n\t *\r\n\t * @param {string} [selector=a] - selector for anchors\r\n\t */\r\n\tfunction enablePreviewLinks( selector = 'a' ) {\r\n\r\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\r\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\r\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unbind preview frame links.\r\n\t */\r\n\tfunction disablePreviewLinks( selector = 'a' ) {\r\n\r\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\r\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\r\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a preview window for the target URL.\r\n\t *\r\n\t * @param {string} url - url for preview iframe src\r\n\t */\r\n\tfunction showPreview( url ) {\r\n\r\n\t\tcloseOverlay();\r\n\r\n\t\tdom.overlay = document.createElement( 'div' );\r\n\t\tdom.overlay.classList.add( 'overlay' );\r\n\t\tdom.overlay.classList.add( 'overlay-preview' );\r\n\t\tdom.wrapper.appendChild( dom.overlay );\r\n\r\n\t\tdom.overlay.innerHTML =\r\n\t\t\t`<header>\r\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\r\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\r\n\t\t\t</header>\r\n\t\t\t<div class=\"spinner\"></div>\r\n\t\t\t<div class=\"viewport\">\r\n\t\t\t\t<iframe src=\"${url}\"></iframe>\r\n\t\t\t\t<small class=\"viewport-inner\">\r\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\r\n\t\t\t\t</small>\r\n\t\t\t</div>`;\r\n\r\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\r\n\t\t\tdom.overlay.classList.add( 'loaded' );\r\n\t\t}, false );\r\n\r\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\r\n\t\t\tcloseOverlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}, false );\r\n\r\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\r\n\t\t\tcloseOverlay();\r\n\t\t}, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Open or close help overlay window.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which overrides the\r\n\t * toggle logic and forcibly sets the desired state. True means\r\n\t * help is open, false means it's closed.\r\n\t */\r\n\tfunction toggleHelp( override ){\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? showHelp() : closeOverlay();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif( dom.overlay ) {\r\n\t\t\t\tcloseOverlay();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshowHelp();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Opens an overlay window with help material.\r\n\t */\r\n\tfunction showHelp() {\r\n\r\n\t\tif( config.help ) {\r\n\r\n\t\t\tcloseOverlay();\r\n\r\n\t\t\tdom.overlay = document.createElement( 'div' );\r\n\t\t\tdom.overlay.classList.add( 'overlay' );\r\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\r\n\t\t\tdom.wrapper.appendChild( dom.overlay );\r\n\r\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\r\n\r\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\r\n\t\t\t\tbindings = keyboard.getBindings();\r\n\r\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\r\n\t\t\tfor( let key in shortcuts ) {\r\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\r\n\t\t\t}\r\n\r\n\t\t\t// Add custom key bindings that have associated descriptions\r\n\t\t\tfor( let binding in bindings ) {\r\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\r\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\thtml += '</table>';\r\n\r\n\t\t\tdom.overlay.innerHTML = `\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\r\n\t\t\t\t</header>\r\n\t\t\t\t<div class=\"viewport\">\r\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\r\n\t\t\t\t</div>\r\n\t\t\t`;\r\n\r\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\r\n\t\t\t\tcloseOverlay();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Closes any currently open overlay.\r\n\t */\r\n\tfunction closeOverlay() {\r\n\r\n\t\tif( dom.overlay ) {\r\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\r\n\t\t\tdom.overlay = null;\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies JavaScript-controlled layout rules to the\r\n\t * presentation.\r\n\t */\r\n\tfunction layout() {\r\n\r\n\t\tif( dom.wrapper && !print.isPrintingPDF() ) {\r\n\r\n\t\t\tif( !config.disableLayout ) {\r\n\r\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\r\n\t\t\t\t// viewport which leads to part of the presentation being\r\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\r\n\t\t\t\t// property where 100x adds up to the correct height.\r\n\t\t\t\t//\r\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\r\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\r\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst size = getComputedSlideSize();\r\n\r\n\t\t\t\tconst oldScale = scale;\r\n\r\n\t\t\t\t// Layout the contents of the slides\r\n\t\t\t\tlayoutSlideContents( config.width, config.height );\r\n\r\n\t\t\t\tdom.slides.style.width = size.width + 'px';\r\n\t\t\t\tdom.slides.style.height = size.height + 'px';\r\n\r\n\t\t\t\t// Determine scale of content to fit within available space\r\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\r\n\r\n\t\t\t\t// Respect max/min scale settings\r\n\t\t\t\tscale = Math.max( scale, config.minScale );\r\n\t\t\t\tscale = Math.min( scale, config.maxScale );\r\n\r\n\t\t\t\t// Don't apply any scaling styles if scale is 1\r\n\t\t\t\tif( scale === 1 ) {\r\n\t\t\t\t\tdom.slides.style.zoom = '';\r\n\t\t\t\t\tdom.slides.style.left = '';\r\n\t\t\t\t\tdom.slides.style.top = '';\r\n\t\t\t\t\tdom.slides.style.bottom = '';\r\n\t\t\t\t\tdom.slides.style.right = '';\r\n\t\t\t\t\ttransformSlides( { layout: '' } );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Zoom Scaling\r\n\t\t\t\t\t// Content remains crisp no matter how much we scale. Side\r\n\t\t\t\t\t// effects are minor differences in text layout and iframe\r\n\t\t\t\t\t// viewports changing size. A 200x200 iframe viewport in a\r\n\t\t\t\t\t// 2x zoomed presentation ends up having a 400x400 viewport.\r\n\t\t\t\t\tif( scale > 1 && Device.supportsZoom && window.devicePixelRatio < 2 ) {\r\n\t\t\t\t\t\tdom.slides.style.zoom = scale;\r\n\t\t\t\t\t\tdom.slides.style.left = '';\r\n\t\t\t\t\t\tdom.slides.style.top = '';\r\n\t\t\t\t\t\tdom.slides.style.bottom = '';\r\n\t\t\t\t\t\tdom.slides.style.right = '';\r\n\t\t\t\t\t\ttransformSlides( { layout: '' } );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Transform Scaling\r\n\t\t\t\t\t// Content layout remains the exact same when scaled up.\r\n\t\t\t\t\t// Side effect is content becoming blurred, especially with\r\n\t\t\t\t\t// high scale values on ldpi screens.\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdom.slides.style.zoom = '';\r\n\t\t\t\t\t\tdom.slides.style.left = '50%';\r\n\t\t\t\t\t\tdom.slides.style.top = '50%';\r\n\t\t\t\t\t\tdom.slides.style.bottom = 'auto';\r\n\t\t\t\t\t\tdom.slides.style.right = 'auto';\r\n\t\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Select all slides, vertical and horizontal\r\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\r\n\r\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\r\n\t\t\t\t\tconst slide = slides[ i ];\r\n\r\n\t\t\t\t\t// Don't bother updating invisible slides\r\n\t\t\t\t\tif( slide.style.display === 'none' ) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( config.center || slide.classList.contains( 'center' ) ) {\r\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\r\n\t\t\t\t\t\t// children will be\r\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\r\n\t\t\t\t\t\t\tslide.style.top = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tslide.style.top = '';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( oldScale !== scale ) {\r\n\t\t\t\t\tdispatchEvent({\r\n\t\t\t\t\t\ttype: 'resize',\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\toldScale,\r\n\t\t\t\t\t\t\tscale,\r\n\t\t\t\t\t\t\tsize\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tprogress.update();\r\n\t\t\tbackgrounds.updateParallax();\r\n\r\n\t\t\tif( overview.isActive() ) {\r\n\t\t\t\toverview.update();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies layout logic to the contents of all slides in\r\n\t * the presentation.\r\n\t *\r\n\t * @param {string|number} width\r\n\t * @param {string|number} height\r\n\t */\r\n\tfunction layoutSlideContents( width, height ) {\r\n\r\n\t\t// Handle sizing of elements with the 'r-stretch' class\r\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\r\n\r\n\t\t\t// Determine how much vertical space we can use\r\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\r\n\r\n\t\t\t// Consider the aspect ratio of media elements\r\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\r\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\r\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\r\n\r\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\r\n\r\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\r\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telement.style.width = width + 'px';\r\n\t\t\t\telement.style.height = remainingHeight + 'px';\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the computed pixel size of our slides. These\r\n\t * values are based on the width and height configuration\r\n\t * options.\r\n\t *\r\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\r\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\r\n\t */\r\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\r\n\r\n\t\tconst size = {\r\n\t\t\t// Slide size\r\n\t\t\twidth: config.width,\r\n\t\t\theight: config.height,\r\n\r\n\t\t\t// Presentation size\r\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\r\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\r\n\t\t};\r\n\r\n\t\t// Reduce available space by margin\r\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\r\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\r\n\r\n\t\t// Slide width may be a percentage of available width\r\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\r\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\r\n\t\t}\r\n\r\n\t\t// Slide height may be a percentage of available height\r\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\r\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\r\n\t\t}\r\n\r\n\t\treturn size;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Stores the vertical index of a stack so that the same\r\n\t * vertical slide can be selected when navigating to and\r\n\t * from the stack.\r\n\t *\r\n\t * @param {HTMLElement} stack The vertical stack element\r\n\t * @param {string|number} [v=0] Index to memorize\r\n\t */\r\n\tfunction setPreviousVerticalIndex( stack, v ) {\r\n\r\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\r\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the vertical index which was stored using\r\n\t * #setPreviousVerticalIndex() or 0 if no previous index\r\n\t * exists.\r\n\t *\r\n\t * @param {HTMLElement} stack The vertical stack element\r\n\t */\r\n\tfunction getPreviousVerticalIndex( stack ) {\r\n\r\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\r\n\t\t\t// Prefer manually defined start-indexv\r\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\r\n\r\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the current or specified slide is vertical\r\n\t * (nested within another slide).\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\r\n\t * orientation of\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isVerticalSlide( slide = currentSlide ) {\r\n\r\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're on the last slide in the current\r\n\t * vertical stack.\r\n\t */\r\n\tfunction isLastVerticalSlide() {\r\n\r\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\r\n\t\t\t// Does this slide have a next sibling?\r\n\t\t\tif( currentSlide.nextElementSibling ) return false;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're currently on the first slide in\r\n\t * the presentation.\r\n\t */\r\n\tfunction isFirstSlide() {\r\n\r\n\t\treturn indexh === 0 && indexv === 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're currently on the last slide in\r\n\t * the presenation. If the last slide is a stack, we only\r\n\t * consider this the last slide if it's at the end of the\r\n\t * stack.\r\n\t */\r\n\tfunction isLastSlide() {\r\n\r\n\t\tif( currentSlide ) {\r\n\t\t\t// Does this slide have a next sibling?\r\n\t\t\tif( currentSlide.nextElementSibling ) return false;\r\n\r\n\t\t\t// If it's vertical, does its parent have a next sibling?\r\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Enters the paused mode which fades everything on screen to\r\n\t * black.\r\n\t */\r\n\tfunction pause() {\r\n\r\n\t\tif( config.pause ) {\r\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\r\n\r\n\t\t\tcancelAutoSlide();\r\n\t\t\tdom.wrapper.classList.add( 'paused' );\r\n\r\n\t\t\tif( wasPaused === false ) {\r\n\t\t\t\tdispatchEvent({ type: 'paused' });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Exits from the paused mode.\r\n\t */\r\n\tfunction resume() {\r\n\r\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\r\n\t\tdom.wrapper.classList.remove( 'paused' );\r\n\r\n\t\tcueAutoSlide();\r\n\r\n\t\tif( wasPaused ) {\r\n\t\t\tdispatchEvent({ type: 'resumed' });\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the paused mode on and off.\r\n\t */\r\n\tfunction togglePause( override ) {\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? pause() : resume();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tisPaused() ? resume() : pause();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if we are currently in the paused mode.\r\n\t *\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isPaused() {\r\n\r\n\t\treturn dom.wrapper.classList.contains( 'paused' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the auto slide mode on and off.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which sets the desired state.\r\n\t * True means autoplay starts, false means it stops.\r\n\t */\r\n\r\n\tfunction toggleAutoSlide( override ) {\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the auto slide mode is currently on.\r\n\t *\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isAutoSliding() {\r\n\r\n\t\treturn !!( autoSlide && !autoSlidePaused );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Steps from the current point in the presentation to the\r\n\t * slide which matches the specified horizontal and vertical\r\n\t * indices.\r\n\t *\r\n\t * @param {number} [h=indexh] Horizontal index of the target slide\r\n\t * @param {number} [v=indexv] Vertical index of the target slide\r\n\t * @param {number} [f] Index of a fragment within the\r\n\t * target slide to activate\r\n\t * @param {number} [o] Origin for use in multimaster environments\r\n\t */\r\n\tfunction slide( h, v, f, o ) {\r\n\r\n\t\t// Remember where we were at before\r\n\t\tpreviousSlide = currentSlide;\r\n\r\n\t\t// Query all horizontal slides in the deck\r\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\r\n\r\n\t\t// Abort if there are no slides\r\n\t\tif( horizontalSlides.length === 0 ) return;\r\n\r\n\t\t// If no vertical index is specified and the upcoming slide is a\r\n\t\t// stack, resume at its previous vertical index\r\n\t\tif( v === undefined && !overview.isActive() ) {\r\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\r\n\t\t}\r\n\r\n\t\t// If we were on a vertical stack, remember what vertical index\r\n\t\t// it was on so we can resume at the same position when returning\r\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\r\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\r\n\t\t}\r\n\r\n\t\t// Remember the state before this slide\r\n\t\tconst stateBefore = state.concat();\r\n\r\n\t\t// Reset the state array\r\n\t\tstate.length = 0;\r\n\r\n\t\tlet indexhBefore = indexh || 0,\r\n\t\t\tindexvBefore = indexv || 0;\r\n\r\n\t\t// Activate and transition to the new slide\r\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\r\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\r\n\r\n\t\t// Dispatch an event if the slide changed\r\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\r\n\r\n\t\t// Ensure that the previous slide is never the same as the current\r\n\t\tif( !slideChanged ) previousSlide = null;\r\n\r\n\t\t// Find the current horizontal slide and any possible vertical slides\r\n\t\t// within it\r\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\r\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\r\n\r\n\t\t// Store references to the previous and current slides\r\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\r\n\r\n\t\tlet autoAnimateTransition = false;\r\n\r\n\t\t// Detect if we're moving between two auto-animated slides\r\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\r\n\r\n\t\t\t// If this is an auto-animated transition, we disable the\r\n\t\t\t// regular slide transition\r\n\t\t\t//\r\n\t\t\t// Note 20-03-2020:\r\n\t\t\t// This needs to happen before we update slide visibility,\r\n\t\t\t// otherwise transitions will still run in Safari.\r\n\t\t\tif( previousSlide.hasAttribute( 'data-auto-animate' ) && currentSlide.hasAttribute( 'data-auto-animate' ) ) {\r\n\t\t\t\tautoAnimateTransition = true;\r\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' );\r\n\t\t\t}\r\n\r\n\t\t\ttransition = 'running';\r\n\r\n\t\t}\r\n\r\n\t\t// Update the visibility of slides now that the indices have changed\r\n\t\tupdateSlidesVisibility();\r\n\r\n\t\tlayout();\r\n\r\n\t\t// Update the overview if it's currently active\r\n\t\tif( overview.isActive() ) {\r\n\t\t\toverview.update();\r\n\t\t}\r\n\r\n\t\t// Show fragment, if specified\r\n\t\tif( typeof f !== 'undefined' ) {\r\n\t\t\tfragments.goto( f );\r\n\t\t}\r\n\r\n\t\t// Solves an edge case where the previous slide maintains the\r\n\t\t// 'present' class when navigating between adjacent vertical\r\n\t\t// stacks\r\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\r\n\t\t\tpreviousSlide.classList.remove( 'present' );\r\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\r\n\r\n\t\t\t// Reset all slides upon navigate to home\r\n\t\t\tif( isFirstSlide() ) {\r\n\t\t\t\t// Launch async task\r\n\t\t\t\tsetTimeout( () => {\r\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\r\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\r\n\t\t\t\t\t} );\r\n\t\t\t\t}, 0 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Apply the new state\r\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\r\n\t\t\t// Check if this state existed on the previous slide. If it\r\n\t\t\t// did, we will avoid adding it repeatedly\r\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\r\n\t\t\t\tif( stateBefore[j] === state[i] ) {\r\n\t\t\t\t\tstateBefore.splice( j, 1 );\r\n\t\t\t\t\tcontinue stateLoop;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdom.viewport.classList.add( state[i] );\r\n\r\n\t\t\t// Dispatch custom event matching the state's name\r\n\t\t\tdispatchEvent({ type: state[i] });\r\n\t\t}\r\n\r\n\t\t// Clean up the remains of the previous state\r\n\t\twhile( stateBefore.length ) {\r\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\r\n\t\t}\r\n\r\n\t\tif( slideChanged ) {\r\n\t\t\tdispatchEvent({\r\n\t\t\t\ttype: 'slidechanged',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tindexh,\r\n\t\t\t\t\tindexv,\r\n\t\t\t\t\tpreviousSlide,\r\n\t\t\t\t\tcurrentSlide,\r\n\t\t\t\t\torigin: o\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Handle embedded content\r\n\t\tif( slideChanged || !previousSlide ) {\r\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\r\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\r\n\t\t}\r\n\r\n\t\t// Announce the current slide contents to screen readers\r\n\t\tannounceStatus( getStatusText( currentSlide ) );\r\n\r\n\t\tprogress.update();\r\n\t\tcontrols.update();\r\n\t\tnotes.update();\r\n\t\tbackgrounds.update();\r\n\t\tbackgrounds.updateParallax();\r\n\t\tslideNumber.update();\r\n\t\tfragments.update();\r\n\r\n\t\t// Update the URL hash\r\n\t\tlocation.writeURL();\r\n\r\n\t\tcueAutoSlide();\r\n\r\n\t\t// Auto-animation\r\n\t\tif( autoAnimateTransition ) {\r\n\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\r\n\t\t\t}, 0 );\r\n\r\n\t\t\tif( config.autoAnimate ) {\r\n\t\t\t\t// Run the auto-animation between our slides\r\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Syncs the presentation with the current DOM. Useful\r\n\t * when new slides or control elements are added or when\r\n\t * the configuration has changed.\r\n\t */\r\n\tfunction sync() {\r\n\r\n\t\t// Subscribe to input\r\n\t\tremoveEventListeners();\r\n\t\taddEventListeners();\r\n\r\n\t\t// Force a layout to make sure the current config is accounted for\r\n\t\tlayout();\r\n\r\n\t\t// Reflect the current autoSlide value\r\n\t\tautoSlide = config.autoSlide;\r\n\r\n\t\t// Start auto-sliding if it's enabled\r\n\t\tcueAutoSlide();\r\n\r\n\t\t// Re-create all slide backgrounds\r\n\t\tbackgrounds.create();\r\n\r\n\t\t// Write the current hash to the URL\r\n\t\tlocation.writeURL();\r\n\r\n\t\tfragments.sortAll();\r\n\r\n\t\tcontrols.update();\r\n\t\tprogress.update();\r\n\r\n\t\tupdateSlidesVisibility();\r\n\r\n\t\tnotes.update();\r\n\t\tnotes.updateVisibility();\r\n\t\tbackgrounds.update( true );\r\n\t\tslideNumber.update();\r\n\t\tslideContent.formatEmbeddedContent();\r\n\r\n\t\t// Start or stop embedded content depending on global config\r\n\t\tif( config.autoPlayMedia === false ) {\r\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\r\n\t\t}\r\n\r\n\t\tif( overview.isActive() ) {\r\n\t\t\toverview.layout();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates reveal.js to keep in sync with new slide attributes. For\r\n\t * example, if you add a new `data-background-image` you can call\r\n\t * this to have reveal.js render the new background image.\r\n\t *\r\n\t * Similar to #sync() but more efficient when you only need to\r\n\t * refresh a specific slide.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tfunction syncSlide( slide = currentSlide ) {\r\n\r\n\t\tbackgrounds.sync( slide );\r\n\t\tfragments.sync( slide );\r\n\r\n\t\tslideContent.load( slide );\r\n\r\n\t\tbackgrounds.update();\r\n\t\tnotes.update();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Resets all vertical slides so that only the first\r\n\t * is visible.\r\n\t */\r\n\tfunction resetVerticalSlides() {\r\n\r\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\r\n\r\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\r\n\r\n\t\t\t\tif( y > 0 ) {\r\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\r\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\r\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\r\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Randomly shuffles all slides in the deck.\r\n\t */\r\n\tfunction shuffle() {\r\n\r\n\t\tgetHorizontalSlides().forEach( ( slide, i, slides ) => {\r\n\r\n\t\t\t// Insert this slide next to another random slide. This may\r\n\t\t\t// cause the slide to insert before itself but that's fine.\r\n\t\t\tdom.slides.insertBefore( slide, slides[ Math.floor( Math.random() * slides.length ) ] );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates one dimension of slides by showing the slide\r\n\t * with the specified index.\r\n\t *\r\n\t * @param {string} selector A CSS selector that will fetch\r\n\t * the group of slides we are working with\r\n\t * @param {number} index The index of the slide that should be\r\n\t * shown\r\n\t *\r\n\t * @return {number} The index of the slide that is now shown,\r\n\t * might differ from the passed in index if it was out of\r\n\t * bounds.\r\n\t */\r\n\tfunction updateSlides( selector, index ) {\r\n\r\n\t\t// Select all slides and convert the NodeList result to\r\n\t\t// an array\r\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\r\n\t\t\tslidesLength = slides.length;\r\n\r\n\t\tlet printMode = print.isPrintingPDF();\r\n\r\n\t\tif( slidesLength ) {\r\n\r\n\t\t\t// Should the index loop?\r\n\t\t\tif( config.loop ) {\r\n\t\t\t\tindex %= slidesLength;\r\n\r\n\t\t\t\tif( index < 0 ) {\r\n\t\t\t\t\tindex = slidesLength + index;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Enforce max and minimum index bounds\r\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\r\n\r\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\r\n\t\t\t\tlet element = slides[i];\r\n\r\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\r\n\r\n\t\t\t\telement.classList.remove( 'past', 'present', 'future' );\r\n\r\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\r\n\t\t\t\telement.setAttribute( 'hidden', '' );\r\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\r\n\r\n\t\t\t\t// If this element contains vertical slides\r\n\t\t\t\tif( element.querySelector( 'section' ) ) {\r\n\t\t\t\t\telement.classList.add( 'stack' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\r\n\t\t\t\tif( printMode ) {\r\n\t\t\t\t\telement.classList.add( 'present' );\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( i < index ) {\r\n\t\t\t\t\t// Any element previous to index is given the 'past' class\r\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\r\n\r\n\t\t\t\t\tif( config.fragments ) {\r\n\t\t\t\t\t\t// Show all fragments in prior slides\r\n\t\t\t\t\t\tUtil.queryAll( element, '.fragment' ).forEach( fragment => {\r\n\t\t\t\t\t\t\tfragment.classList.add( 'visible' );\r\n\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( i > index ) {\r\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\r\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\r\n\r\n\t\t\t\t\tif( config.fragments ) {\r\n\t\t\t\t\t\t// Hide all fragments in future slides\r\n\t\t\t\t\t\tUtil.queryAll( element, '.fragment.visible' ).forEach( fragment => {\r\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet slide = slides[index];\r\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\r\n\r\n\t\t\t// Mark the current slide as present\r\n\t\t\tslide.classList.add( 'present' );\r\n\t\t\tslide.removeAttribute( 'hidden' );\r\n\t\t\tslide.removeAttribute( 'aria-hidden' );\r\n\r\n\t\t\tif( !wasPresent ) {\r\n\t\t\t\t// Dispatch an event indicating the slide is now visible\r\n\t\t\t\tdispatchEvent({\r\n\t\t\t\t\ttarget: slide,\r\n\t\t\t\t\ttype: 'visible',\r\n\t\t\t\t\tbubbles: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// If this slide has a state associated with it, add it\r\n\t\t\t// onto the current state of the deck\r\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\r\n\t\t\tif( slideState ) {\r\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Since there are no slides we can't be anywhere beyond the\r\n\t\t\t// zeroth index\r\n\t\t\tindex = 0;\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Optimization method; hide all slides that are far away\r\n\t * from the present slide.\r\n\t */\r\n\tfunction updateSlidesVisibility() {\r\n\r\n\t\t// Select all slides and convert the NodeList result to\r\n\t\t// an array\r\n\t\tlet horizontalSlides = getHorizontalSlides(),\r\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\r\n\t\t\tdistanceX,\r\n\t\t\tdistanceY;\r\n\r\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\r\n\r\n\t\t\t// The number of steps away from the present slide that will\r\n\t\t\t// be visible\r\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\r\n\r\n\t\t\t// Shorten the view distance on devices that typically have\r\n\t\t\t// less resources\r\n\t\t\tif( Device.isMobile ) {\r\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\r\n\t\t\t}\r\n\r\n\t\t\t// All slides need to be visible when exporting to PDF\r\n\t\t\tif( print.isPrintingPDF() ) {\r\n\t\t\t\tviewDistance = Number.MAX_VALUE;\r\n\t\t\t}\r\n\r\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\r\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\r\n\r\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\r\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\r\n\r\n\t\t\t\t// Determine how far away this slide is from the present\r\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\r\n\r\n\t\t\t\t// If the presentation is looped, distance should measure\r\n\t\t\t\t// 1 between the first and last slides\r\n\t\t\t\tif( config.loop ) {\r\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Show the horizontal slide if it's within the view distance\r\n\t\t\t\tif( distanceX < viewDistance ) {\r\n\t\t\t\t\tslideContent.load( horizontalSlide );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tslideContent.unload( horizontalSlide );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( verticalSlidesLength ) {\r\n\r\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\r\n\r\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\r\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\r\n\r\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\r\n\r\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\r\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\r\n\t\t\tif( hasVerticalSlides() ) {\r\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\r\n\t\t\t}\r\n\r\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\r\n\t\t\tif( hasHorizontalSlides() ) {\r\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Determine what available routes there are for navigation.\r\n\t *\r\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\r\n\t */\r\n\tfunction availableRoutes({ includeFragments = false } = {}) {\r\n\r\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\r\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\r\n\r\n\t\tlet routes = {\r\n\t\t\tleft: indexh > 0,\r\n\t\t\tright: indexh < horizontalSlides.length - 1,\r\n\t\t\tup: indexv > 0,\r\n\t\t\tdown: indexv < verticalSlides.length - 1\r\n\t\t};\r\n\r\n\t\t// Looped presentations can always be navigated as long as\r\n\t\t// there are slides available\r\n\t\tif( config.loop ) {\r\n\t\t\tif( horizontalSlides.length > 1 ) {\r\n\t\t\t\troutes.left = true;\r\n\t\t\t\troutes.right = true;\r\n\t\t\t}\r\n\r\n\t\t\tif( verticalSlides.length > 1 ) {\r\n\t\t\t\troutes.up = true;\r\n\t\t\t\troutes.down = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\r\n\t\t\troutes.right = routes.right || routes.down;\r\n\t\t\troutes.left = routes.left || routes.up;\r\n\t\t}\r\n\r\n\t\t// If includeFragments is set, a route will be considered\r\n\t\t// availalbe if either a slid OR fragment is available in\r\n\t\t// the given direction\r\n\t\tif( includeFragments === true ) {\r\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\r\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\r\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\r\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\r\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\r\n\t\t}\r\n\r\n\t\t// Reverse horizontal controls for rtl\r\n\t\tif( config.rtl ) {\r\n\t\t\tlet left = routes.left;\r\n\t\t\troutes.left = routes.right;\r\n\t\t\troutes.right = left;\r\n\t\t}\r\n\r\n\t\treturn routes;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of past slides. This can be used as a global\r\n\t * flattened index for slides.\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\r\n\t *\r\n\t * @return {number} Past slide count\r\n\t */\r\n\tfunction getSlidePastCount( slide = currentSlide ) {\r\n\r\n\t\tlet horizontalSlides = getHorizontalSlides();\r\n\r\n\t\t// The number of past slides\r\n\t\tlet pastCount = 0;\r\n\r\n\t\t// Step through all slides and count the past ones\r\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\r\n\r\n\t\t\tlet horizontalSlide = horizontalSlides[i];\r\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\r\n\r\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\r\n\r\n\t\t\t\t// Stop as soon as we arrive at the present\r\n\t\t\t\tif( verticalSlides[j] === slide ) {\r\n\t\t\t\t\tbreak mainLoop;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Don't count slides with the \"uncounted\" class\r\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\r\n\t\t\t\t\tpastCount++;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Stop as soon as we arrive at the present\r\n\t\t\tif( horizontalSlide === slide ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// Don't count the wrapping section for vertical slides and\r\n\t\t\t// slides marked as uncounted\r\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && !horizontalSlide.dataset.visibility !== 'uncounted' ) {\r\n\t\t\t\tpastCount++;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn pastCount;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a value ranging from 0-1 that represents\r\n\t * how far into the presentation we have navigated.\r\n\t *\r\n\t * @return {number}\r\n\t */\r\n\tfunction getProgress() {\r\n\r\n\t\t// The number of past and total slides\r\n\t\tlet totalCount = getTotalSlides();\r\n\t\tlet pastCount = getSlidePastCount();\r\n\r\n\t\tif( currentSlide ) {\r\n\r\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\r\n\r\n\t\t\t// If there are fragments in the current slide those should be\r\n\t\t\t// accounted for in the progress.\r\n\t\t\tif( allFragments.length > 0 ) {\r\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\r\n\r\n\t\t\t\t// This value represents how big a portion of the slide progress\r\n\t\t\t\t// that is made up by its fragments (0-1)\r\n\t\t\t\tlet fragmentWeight = 0.9;\r\n\r\n\t\t\t\t// Add fragment progress to the past slide count\r\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the h/v location and fragment of the current,\r\n\t * or specified, slide.\r\n\t *\r\n\t * @param {HTMLElement} [slide] If specified, the returned\r\n\t * index will be for this slide rather than the currently\r\n\t * active one\r\n\t *\r\n\t * @return {{h: number, v: number, f: number}}\r\n\t */\r\n\tfunction getIndices( slide ) {\r\n\r\n\t\t// By default, return the current indices\r\n\t\tlet h = indexh,\r\n\t\t\tv = indexv,\r\n\t\t\tf;\r\n\r\n\t\t// If a slide is specified, return the indices of that slide\r\n\t\tif( slide ) {\r\n\t\t\tlet isVertical = isVerticalSlide( slide );\r\n\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\r\n\r\n\t\t\t// Select all horizontal slides\r\n\t\t\tlet horizontalSlides = getHorizontalSlides();\r\n\r\n\t\t\t// Now that we know which the horizontal slide is, get its index\r\n\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\r\n\r\n\t\t\t// Assume we're not vertical\r\n\t\t\tv = undefined;\r\n\r\n\t\t\t// If this is a vertical slide, grab the vertical index\r\n\t\t\tif( isVertical ) {\r\n\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( !slide && currentSlide ) {\r\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\r\n\t\t\tif( hasFragments ) {\r\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\r\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\r\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { h, v, f };\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves all slides in this presentation.\r\n\t */\r\n\tfunction getSlides() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of all horizontal slides in the deck. Each\r\n\t * vertical stack is included as one horizontal slide in the\r\n\t * resulting array.\r\n\t */\r\n\tfunction getHorizontalSlides() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all vertical slides that exist within this deck.\r\n\t */\r\n\tfunction getVerticalSlides() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all vertical stacks (each stack can contain multiple slides).\r\n\t */\r\n\tfunction getVerticalStacks() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if there are at least two horizontal slides.\r\n\t */\r\n\tfunction hasHorizontalSlides() {\r\n\r\n\t\treturn getHorizontalSlides().length > 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if there are at least two vertical slides.\r\n\t */\r\n\tfunction hasVerticalSlides() {\r\n\r\n\t\treturn getVerticalSlides().length > 1;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects where each object represents the\r\n\t * attributes on its respective slide.\r\n\t */\r\n\tfunction getSlidesAttributes() {\r\n\r\n\t\treturn getSlides().map( slide => {\r\n\r\n\t\t\tlet attributes = {};\r\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\r\n\t\t\t\tlet attribute = slide.attributes[ i ];\r\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\r\n\t\t\t}\r\n\t\t\treturn attributes;\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the total number of slides in this presentation.\r\n\t *\r\n\t * @return {number}\r\n\t */\r\n\tfunction getTotalSlides() {\r\n\r\n\t\treturn getSlides().length;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the slide element matching the specified index.\r\n\t *\r\n\t * @return {HTMLElement}\r\n\t */\r\n\tfunction getSlide( x, y ) {\r\n\r\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\r\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\r\n\r\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\r\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\r\n\t\t}\r\n\r\n\t\treturn horizontalSlide;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the background element for the given slide.\r\n\t * All slides, even the ones with no background properties\r\n\t * defined, have a background element so as long as the\r\n\t * index is valid an element will be returned.\r\n\t *\r\n\t * @param {mixed} x Horizontal background index OR a slide\r\n\t * HTML element\r\n\t * @param {number} y Vertical background index\r\n\t * @return {(HTMLElement[]|*)}\r\n\t */\r\n\tfunction getSlideBackground( x, y ) {\r\n\r\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\r\n\t\tif( slide ) {\r\n\t\t\treturn slide.slideBackgroundElement;\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the current state of the presentation as\r\n\t * an object. This state can then be restored at any\r\n\t * time.\r\n\t *\r\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\r\n\t */\r\n\tfunction getState() {\r\n\r\n\t\tlet indices = getIndices();\r\n\r\n\t\treturn {\r\n\t\t\tindexh: indices.h,\r\n\t\t\tindexv: indices.v,\r\n\t\t\tindexf: indices.f,\r\n\t\t\tpaused: isPaused(),\r\n\t\t\toverview: overview.isActive()\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Restores the presentation to the given state.\r\n\t *\r\n\t * @param {object} state As generated by getState()\r\n\t * @see {@link getState} generates the parameter `state`\r\n\t */\r\n\tfunction setState( state ) {\r\n\r\n\t\tif( typeof state === 'object' ) {\r\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\r\n\r\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\r\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\r\n\r\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\r\n\t\t\t\ttogglePause( pausedFlag );\r\n\t\t\t}\r\n\r\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\r\n\t\t\t\toverview.toggle( overviewFlag );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Cues a new automated slide if enabled in the config.\r\n\t */\r\n\tfunction cueAutoSlide() {\r\n\r\n\t\tcancelAutoSlide();\r\n\r\n\t\tif( currentSlide && config.autoSlide !== false ) {\r\n\r\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment' );\r\n\r\n\t\t\t// When the slide first appears there is no \"current\" fragment so\r\n\t\t\t// we look for a data-autoslide timing on the first fragment\r\n\t\t\tif( !fragment ) fragment = currentSlide.querySelector( '.fragment' );\r\n\r\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\r\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\r\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\r\n\r\n\t\t\t// Pick value in the following priority order:\r\n\t\t\t// 1. Current fragment's data-autoslide\r\n\t\t\t// 2. Current slide's data-autoslide\r\n\t\t\t// 3. Parent slide's data-autoslide\r\n\t\t\t// 4. Global autoSlide setting\r\n\t\t\tif( fragmentAutoSlide ) {\r\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\r\n\t\t\t}\r\n\t\t\telse if( slideAutoSlide ) {\r\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\r\n\t\t\t}\r\n\t\t\telse if( parentAutoSlide ) {\r\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tautoSlide = config.autoSlide;\r\n\t\t\t}\r\n\r\n\t\t\t// If there are media elements with data-autoplay,\r\n\t\t\t// automatically set the autoSlide duration to the\r\n\t\t\t// length of that media. Not applicable if the slide\r\n\t\t\t// is divided up into fragments.\r\n\t\t\t// playbackRate is accounted for in the duration.\r\n\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\r\n\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\r\n\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\r\n\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\r\n\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\t// Cue the next auto-slide if:\r\n\t\t\t// - There is an autoSlide value\r\n\t\t\t// - Auto-sliding isn't paused by the user\r\n\t\t\t// - The presentation isn't paused\r\n\t\t\t// - The overview isn't active\r\n\t\t\t// - The presentation isn't over\r\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\r\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\r\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\r\n\t\t\t\t\t\tconfig.autoSlideMethod()\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tnavigateNext();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcueAutoSlide();\r\n\t\t\t\t}, autoSlide );\r\n\t\t\t\tautoSlideStartTime = Date.now();\r\n\t\t\t}\r\n\r\n\t\t\tif( autoSlidePlayer ) {\r\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels any ongoing request to auto-slide.\r\n\t */\r\n\tfunction cancelAutoSlide() {\r\n\r\n\t\tclearTimeout( autoSlideTimeout );\r\n\t\tautoSlideTimeout = -1;\r\n\r\n\t}\r\n\r\n\tfunction pauseAutoSlide() {\r\n\r\n\t\tif( autoSlide && !autoSlidePaused ) {\r\n\t\t\tautoSlidePaused = true;\r\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\r\n\t\t\tclearTimeout( autoSlideTimeout );\r\n\r\n\t\t\tif( autoSlidePlayer ) {\r\n\t\t\t\tautoSlidePlayer.setPlaying( false );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction resumeAutoSlide() {\r\n\r\n\t\tif( autoSlide && autoSlidePaused ) {\r\n\t\t\tautoSlidePaused = false;\r\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\r\n\t\t\tcueAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateLeft() {\r\n\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\r\n\t\t// Reverse for RTL\r\n\t\tif( config.rtl ) {\r\n\t\t\tif( ( overview.isActive() || fragments.next() === false ) && availableRoutes().left ) {\r\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Normal navigation\r\n\t\telse if( ( overview.isActive() || fragments.prev() === false ) && availableRoutes().left ) {\r\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateRight() {\r\n\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\r\n\t\t// Reverse for RTL\r\n\t\tif( config.rtl ) {\r\n\t\t\tif( ( overview.isActive() || fragments.prev() === false ) && availableRoutes().right ) {\r\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Normal navigation\r\n\t\telse if( ( overview.isActive() || fragments.next() === false ) && availableRoutes().right ) {\r\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateUp() {\r\n\r\n\t\t// Prioritize hiding fragments\r\n\t\tif( ( overview.isActive() || fragments.prev() === false ) && availableRoutes().up ) {\r\n\t\t\tslide( indexh, indexv - 1 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateDown() {\r\n\r\n\t\tnavigationHistory.hasNavigatedVertically = true;\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif( ( overview.isActive() || fragments.next() === false ) && availableRoutes().down ) {\r\n\t\t\tslide( indexh, indexv + 1 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigates backwards, prioritized in the following order:\r\n\t * 1) Previous fragment\r\n\t * 2) Previous vertical slide\r\n\t * 3) Previous horizontal slide\r\n\t */\r\n\tfunction navigatePrev() {\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif( fragments.prev() === false ) {\r\n\t\t\tif( availableRoutes().up ) {\r\n\t\t\t\tnavigateUp();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\r\n\t\t\t\tlet previousSlide;\r\n\r\n\t\t\t\tif( config.rtl ) {\r\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( previousSlide ) {\r\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\r\n\t\t\t\t\tlet h = indexh - 1;\r\n\t\t\t\t\tslide( h, v );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The reverse of #navigatePrev().\r\n\t */\r\n\tfunction navigateNext() {\r\n\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\t\tnavigationHistory.hasNavigatedVertically = true;\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif( fragments.next() === false ) {\r\n\r\n\t\t\tlet routes = availableRoutes();\r\n\r\n\t\t\t// When looping is enabled `routes.down` is always available\r\n\t\t\t// so we need a separate check for when we've reached the\r\n\t\t\t// end of a stack and should move horizontally\r\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide( currentSlide ) ) {\r\n\t\t\t\troutes.down = false;\r\n\t\t\t}\r\n\r\n\t\t\tif( routes.down ) {\r\n\t\t\t\tnavigateDown();\r\n\t\t\t}\r\n\t\t\telse if( config.rtl ) {\r\n\t\t\t\tnavigateLeft();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnavigateRight();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// --------------------------------------------------------------------//\r\n\t// ----------------------------- EVENTS -------------------------------//\r\n\t// --------------------------------------------------------------------//\r\n\r\n\t/**\r\n\t * Called by all event handlers that are based on user\r\n\t * input.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onUserInput( event ) {\r\n\r\n\t\tif( config.autoSlideStoppable ) {\r\n\t\t\tpauseAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Event listener for transition end on the current slide.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onTransitionEnd( event ) {\r\n\r\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\r\n\t\t\ttransition = 'idle';\r\n\t\t\tdispatchEvent({\r\n\t\t\t\ttype: 'slidetransitionend',\r\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the window level 'resize' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onWindowResize( event ) {\r\n\r\n\t\tlayout();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handle for the window level 'visibilitychange' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onPageVisibilityChange( event ) {\r\n\r\n\t\t// If, after clicking a link or similar and we're coming back,\r\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\r\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\r\n\t\t\t// Not all elements support .blur() - SVGs among them.\r\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\r\n\t\t\t\tdocument.activeElement.blur();\r\n\t\t\t}\r\n\t\t\tdocument.body.focus();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles clicks on links that are set to preview in the\r\n\t * iframe overlay.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tfunction onPreviewLinkClicked( event ) {\r\n\r\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\r\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\r\n\t\t\tif( url ) {\r\n\t\t\t\tshowPreview( url );\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles click on the auto-sliding controls element.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onAutoSlidePlayerClick( event ) {\r\n\r\n\t\t// Replay\r\n\t\tif( isLastSlide() && config.loop === false ) {\r\n\t\t\tslide( 0, 0 );\r\n\t\t\tresumeAutoSlide();\r\n\t\t}\r\n\t\t// Resume\r\n\t\telse if( autoSlidePaused ) {\r\n\t\t\tresumeAutoSlide();\r\n\t\t}\r\n\t\t// Pause\r\n\t\telse {\r\n\t\t\tpauseAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// --------------------------------------------------------------------//\r\n\t// ------------------------------- API --------------------------------//\r\n\t// --------------------------------------------------------------------//\r\n\r\n\t// The public reveal.js API\r\n\tconst API = {\r\n\t\tVERSION,\r\n\r\n\t\tinitialize,\r\n\t\tconfigure,\r\n\r\n\t\tsync,\r\n\t\tsyncSlide,\r\n\t\tsyncFragments: fragments.sync.bind( fragments ),\r\n\r\n\t\t// Navigation methods\r\n\t\tslide,\r\n\t\tleft: navigateLeft,\r\n\t\tright: navigateRight,\r\n\t\tup: navigateUp,\r\n\t\tdown: navigateDown,\r\n\t\tprev: navigatePrev,\r\n\t\tnext: navigateNext,\r\n\r\n\t\t// Navigation aliases\r\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\r\n\r\n\t\t// Fragment methods\r\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\r\n\t\tprevFragment: fragments.prev.bind( fragments ),\r\n\t\tnextFragment: fragments.next.bind( fragments ),\r\n\r\n\t\t// Event binding\r\n\t\ton,\r\n\t\toff,\r\n\r\n\t\t// Legacy event binding methods left in for backwards compatibility\r\n\t\taddEventListener: on,\r\n\t\tremoveEventListener: off,\r\n\r\n\t\t// Forces an update in slide layout\r\n\t\tlayout,\r\n\r\n\t\t// Randomizes the order of slides\r\n\t\tshuffle,\r\n\r\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\r\n\t\tavailableRoutes,\r\n\r\n\t\t// Returns an object with the available fragments as booleans (prev/next)\r\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\r\n\r\n\t\t// Toggles a help overlay with keyboard shortcuts\r\n\t\ttoggleHelp,\r\n\r\n\t\t// Toggles the overview mode on/off\r\n\t\ttoggleOverview: overview.toggle.bind( overview ),\r\n\r\n\t\t// Toggles the \"black screen\" mode on/off\r\n\t\ttogglePause,\r\n\r\n\t\t// Toggles the auto slide mode on/off\r\n\t\ttoggleAutoSlide,\r\n\r\n\t\t// Slide navigation checks\r\n\t\tisFirstSlide,\r\n\t\tisLastSlide,\r\n\t\tisLastVerticalSlide,\r\n\t\tisVerticalSlide,\r\n\r\n\t\t// State checks\r\n\t\tisPaused,\r\n\t\tisAutoSliding,\r\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\r\n\t\tisOverview: overview.isActive.bind( overview ),\r\n\t\tisFocused: focus.isFocused.bind( focus ),\r\n\t\tisPrintingPDF: print.isPrintingPDF.bind( print ),\r\n\r\n\t\t// Checks if reveal.js has been loaded and is ready for use\r\n\t\tisReady: () => ready,\r\n\r\n\t\t// Slide preloading\r\n\t\tloadSlide: slideContent.load.bind( slideContent ),\r\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\r\n\r\n\t\t// Adds or removes all internal event listeners\r\n\t\taddEventListeners,\r\n\t\tremoveEventListeners,\r\n\t\tdispatchEvent,\r\n\r\n\t\t// Facility for persisting and restoring the presentation state\r\n\t\tgetState,\r\n\t\tsetState,\r\n\r\n\t\t// Presentation progress on range of 0-1\r\n\t\tgetProgress,\r\n\r\n\t\t// Returns the indices of the current, or specified, slide\r\n\t\tgetIndices,\r\n\r\n\t\t// Returns an Array of key:value maps of the attributes of each\r\n\t\t// slide in the deck\r\n\t\tgetSlidesAttributes,\r\n\r\n\t\t// Returns the number of slides that we have passed\r\n\t\tgetSlidePastCount,\r\n\r\n\t\t// Returns the total number of slides\r\n\t\tgetTotalSlides,\r\n\r\n\t\t// Returns the slide element at the specified index\r\n\t\tgetSlide,\r\n\r\n\t\t// Returns the previous slide element, may be null\r\n\t\tgetPreviousSlide: () => previousSlide,\r\n\r\n\t\t// Returns the current slide element\r\n\t\tgetCurrentSlide: () => currentSlide,\r\n\r\n\t\t// Returns the slide background element at the specified index\r\n\t\tgetSlideBackground,\r\n\r\n\t\t// Returns the speaker notes string for a slide, or null\r\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\r\n\r\n\t\t// Returns an Array of all slides\r\n\t\tgetSlides,\r\n\r\n\t\t// Returns an array with all horizontal/vertical slides in the deck\r\n\t\tgetHorizontalSlides,\r\n\t\tgetVerticalSlides,\r\n\r\n\t\t// Checks if the presentation contains two or more horizontal\r\n\t\t// and vertical slides\r\n\t\thasHorizontalSlides,\r\n\t\thasVerticalSlides,\r\n\r\n\t\t// Checks if the deck has navigated on either axis at least once\r\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\r\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\r\n\r\n\t\t// Adds/removes a custom key binding\r\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\r\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\r\n\r\n\t\t// Programmatically triggers a keyboard event\r\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\r\n\r\n\t\t// Registers a new shortcut to include in the help overlay\r\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\r\n\r\n\t\tgetComputedSlideSize,\r\n\r\n\t\t// Returns the current scale of the presentation content\r\n\t\tgetScale: () => scale,\r\n\r\n\t\t// Returns the current configuration object\r\n\t\tgetConfig: () => config,\r\n\r\n\t\t// Helper method, retrieves query string as a key:value map\r\n\t\tgetQueryHash: Util.getQueryHash,\r\n\r\n\t\t// Returns reveal.js DOM elements\r\n\t\tgetRevealElement: () => revealElement,\r\n\t\tgetSlidesElement: () => dom.slides,\r\n\t\tgetViewportElement: () => dom.viewport,\r\n\t\tgetBackgroundsElement: () => backgrounds.element,\r\n\r\n\t\t// API for registering and retrieving plugins\r\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\r\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\r\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\r\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\r\n\r\n\t};\r\n\r\n\t// Our internal API which controllers have access to\r\n\tUtil.extend( Reveal, {\r\n\t\t...API,\r\n\r\n\t\t// Methods for announcing content to screen readers\r\n\t\tannounceStatus,\r\n\t\tgetStatusText,\r\n\r\n\t\t// Controllers\r\n\t\tprint,\r\n\t\tfocus,\r\n\t\tprogress,\r\n\t\tcontrols,\r\n\t\tlocation,\r\n\t\toverview,\r\n\t\tfragments,\r\n\t\tslideContent,\r\n\t\tslideNumber,\r\n\r\n\t\tonUserInput,\r\n\t\tcloseOverlay,\r\n\t\tupdateSlidesVisibility,\r\n\t\tlayoutSlideContents,\r\n\t\ttransformSlides,\r\n\t\tcueAutoSlide,\r\n\t\tcancelAutoSlide\r\n\t} );\r\n\r\n\treturn API;\r\n\r\n};\r\n","import Deck, { VERSION } from './reveal.js'\r\n\r\n/**\r\n * Expose the Reveal class to the window. To create a\r\n * new instance:\r\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\r\n *   controls: false\r\n * } );\r\n * deck.initialize().then(() => {\r\n *   // reveal.js is ready\r\n * });\r\n */\r\nlet Reveal = Deck;\r\n\r\n\r\n/**\r\n * The below is a thin shell that mimics the pre 4.0\r\n * reveal.js API and ensures backwards compatibility.\r\n * This API only allows for one Reveal instance per\r\n * page, whereas the new API above lets you run many\r\n * presentations on the same page.\r\n *\r\n * Reveal.initialize( { controls: false } ).then(() => {\r\n *   // reveal.js is ready\r\n * });\r\n */\r\n\r\nlet enqueuedAPICalls = [];\r\n\r\nReveal.initialize = options => {\r\n\r\n\t// Create our singleton reveal.js instance\r\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\r\n\r\n\t// Invoke any enqueued API calls\r\n\tenqueuedAPICalls.map( method => method( Reveal ) );\r\n\r\n\treturn Reveal.initialize();\r\n\r\n}\r\n\r\n/**\r\n * The pre 4.0 API let you add event listener before\r\n * initializing. We maintain the same behavior by\r\n * queuing up premature API calls and invoking all\r\n * of them when Reveal.initialize is called.\r\n */\r\n[ 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\r\n\tReveal[method] = ( ...args ) => {\r\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\r\n\t}\r\n} );\r\n\r\nReveal.VERSION = VERSION;\r\n\r\nexport default Reveal;"],"names":["POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","closestParent","target","parent","parentNode","matchesMethod","matches","matchesSelector","msMatchesSelector","call","createSingletonNode","container","tagname","classname","innerHTML","nodes","length","testNode","node","document","createElement","appendChild","createStyleSheet","tag","type","styleSheet","cssText","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","getRemainingHeight","height","newHeight","oldHeight","offsetHeight","removeProperty","UA","navigator","userAgent","testElement","isMobile","test","platform","maxTouchPoints","isChrome","isAndroid","supportsZoom","supportsHistoryAPI","window","history","replaceState","SlideContent","constructor","Reveal","startEmbeddedIframe","this","bind","shouldPreload","preload","getConfig","preloadIframes","hasAttribute","load","slide","options","display","forEach","tagName","setAttribute","getAttribute","removeAttribute","media","sources","source","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","encodeURI","isSpeakerNotes","video","muted","autoplay","excludeIframes","iframe","width","maxHeight","maxWidth","backgroundIframeElement","querySelector","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintingPDF","showSlideNumber","update","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","push","getSlidePastCount","getTotalSlides","indices","getIndices","h","sep","isVerticalSlide","v","url","getHash","formatNumber","delimiter","isNaN","colorToRgb","color","hex3","r","parseInt","charAt","g","hex6","substr","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","setTimeout","contentElement","sync","backgroundColor","opacity","data","backgroundTransition","backgroundOpacity","contrastColor","computedBackgroundStyle","getComputedStyle","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","classToBubble","contains","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffset","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","verticalSlideCount","parallaxBackgroundVertical","AutoAnimate","autoAnimateCounter","run","fromSlide","toSlide","reset","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","dataset","autoAnimate","allSlides","getSlides","slideDirection","css","getAutoAnimatableElements","map","elements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","delay","autoAnimateTarget","join","requestAnimationFrame","fontWeight","dispatchEvent","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","x","y","scaleX","scaleY","Math","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","Object","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","closest","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","filter","pair","index","textNodes","findAutoAnimateMatches","nodeName","innerText","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","slice","key","fromElement","pimaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","concat","Fragments","fragments","disable","enable","availableRoutes","hiddenFragments","prev","next","sort","grouped","ordered","unordered","sorted","fragment","group","sortAll","horizontalSlide","verticalSlide","changedFragments","shown","hidden","maxIndex","currentFragment","max","wasVisible","announceStatus","getStatusText","bubbles","min","goto","offset","lastVisibleFragment","progress","fragmentInURL","writeURL","Overview","active","onSlideClicked","activate","overview","isActive","cancelAutoSlide","getBackgroundsElement","slideSize","getComputedSlideSize","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","layout","hslide","vslide","hbackground","vbackground","vmin","innerWidth","innerHeight","transformSlides","deactivate","cueAutoSlide","toggle","override","preventDefault","Keyboard","shortcuts","bindings","onDocumentKeyDown","onDocumentKeyPress","navigationMode","unbind","addKeyBinding","binding","callback","keyCode","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","shiftKey","charCode","toggleHelp","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","prevSlideShortcut","firstSlideShortcut","lastSlideShortcut","unusedModifier","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","requestMethod","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","left","Number","MAX_VALUE","right","up","down","togglePause","embedded","getViewportElement","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","autoSlideStoppable","toggleAutoSlide","closeOverlay","Location","writeURLTimeout","onWindowHashChange","readURL","hash","bits","name","f","undefined","getElementById","decodeURIComponent","error","isSameNameAsCurrentSlide","slideIndices","hashIndexBase","hashOneBasedIndex","clearTimeout","s","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slidesTotal","slideIndex","floor","clientX","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","Date","now","detail","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","insertBefore","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","Promise","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","arguments","hasPlugin","getPlugin","getRegisteredPlugins","Print","setupPDF","pageWidth","margin","pageHeight","body","layoutSlideContents","doingSlideNumbers","top","contentHeight","scrollHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","page","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesLayout","notesElement","nextSibling","notesSpacing","bottom","numberElement","pdfSeparateFragments","previousFragmentStep","previousPage","fragmentGroups","clonedPage","cloneNode","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","clientY","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","Focus","onRevealPointerDown","onDocumentPointerDown","blur","focus","Notes","print","updateVisibility","hasNotes","isSpeakerNotesWindow","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","iconSize","fillRect","moveTo","lineTo","restore","on","listener","off","destroy","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","POSITIVE_INFINITY","viewDistance","mobileViewDistance","indexh","indexv","previousSlide","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","backgrounds","pointer","initialize","initOptions","wrapper","slides","defaultConfig","Util","setViewport","start","viewport","setupDOM","setupPostMessage","setupScrollPrevention","resetVerticalSlides","removeEventListeners","Device","pauseOverlay","statusElement","createStatusElement","position","overflow","clip","text","nodeType","isAriaHidden","isDisplayHidden","child","trim","setInterval","scrollTop","scrollLeft","JSON","parse","method","args","dispatchPostMessage","isReady","numberOfSlides","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","self","message","namespace","getState","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","setProperty","size","oldScale","presentationWidth","presentationHeight","zoom","devicePixelRatio","len","remainingHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","stack","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","resumeAutoSlide","pauseAutoSlide","o","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","getVerticalStacks","stateLoop","j","splice","origin","syncSlide","random","slidesLength","printMode","reverse","wasPresent","slideState","distanceX","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","visibility","totalCount","allFragments","isVertical","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","getSlidesAttributes","attributes","attribute","getSlide","indexf","paused","setState","pausedFlag","overviewFlag","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","currentTarget","API","VERSION","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","isOverview","loadSlide","unloadSlide","getPreviousSlide","getPlugins","Deck","enqueuedAPICalls","assign","deck"],"mappings":"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"}